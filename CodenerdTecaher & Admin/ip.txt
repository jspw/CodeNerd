get it :

<h2>Multi-Line_Statements</h2>
<p>Statements_in_Python_typically_end_with_a_new_line__Python_does,_however,_allow_the_use_of_the_line_continuation_character_(\)_to_denote_that_the_line_should_continue__For_example_−</p>
<pre_>total_equal_item_one___\
________item_two___\
________item_three
</pre>
<p>Statements_contained_within_the_br3,_br2,_or_()_brackets_do_not_need_to_use_the_line_continuation_character__For_example_−</p>

<pre_>days_equal_****get it :

<h2>Multi-Line_Statements</h2>
<p>Statements_in_Python_typically_end_with_a_new_line__Python_does,_however,_allow_the_use_of_the_line_continuation_character_(\)_to_denote_that_the_line_should_continue__For_example_−</p>
<pre_>total_equal_item_one___\
________item_two___\
________item_three
</pre>
<p>Statements_contained_within_the_br31br32,_{},_or_()_brackets_do_not_need_to_use_the_line_continuation_character__For_example_−</p>

<pre_>days_equal_br31'Monday',_'Tuesday',_'Wednesday',
________'Thursday',_'Friday'br32
</pre>
<h2>Quotation_in_Python</h2>

<p>Python_accepts_single_('),_double_(")_and_triple_('''_or_""")_quotes_to_denote_string_literals,_as_long_as_the_same_type_of_quote_starts_and_ends_the_string_</p>
<p>The_triple_quotes_are_used_to_span_the_string_across_multiple_lines__For_example,_all_the_following_are_legal_−</p>
<pre_>word_equal_'word'
sentence_equal_"This_is_a_sentence_"
paragraph_equal_"""This_is_a_paragraph__It_is
made_up_of_multiple_lines_and_sentences_"""
</pre>
<h2>Comments_in_Python</h2>
<p>A_hash_sign_(#)_that_is_not_inside_a_string_literal_begins_a_comment__All_characters_after_the_#_and_up_to_the_end_of_the_physical_line_are_part_of_the_comment_and_the_Python_interpreter_ignores_them_</p>
<pre__styleequal""><span_>#!/usr/bin/python</span><span_>

</span><span_>#_First_comment</span><span_>
</span><span_>print</span><span_>_</span><span_>"Hello,_Python!"</span><span_>_</span><span_>#_second_comment</span></pre>

<p>This_produces_the_following_result_−</p>
<pre_>Hello,_Python!
</pre>
<p>You_can_type_a_comment_on_the_same_line_after_a_statement_or_expression_−</p>

<pre_>name_equal_"Madisetti"_#_This_is_again_comment
</pre>
<p>You_can_comment_multiple_lines_as_follows_−</p>
<pre_>#_This_is_a_comment_
#_This_is_a_comment,_too_
#_This_is_a_comment,_too_
#_I_said_that_already_
</pre>

<p>Following_triple-quoted_string_is_also_ignored_by_Python_interpreter_and_can_be_used_as_a_multiline_comments:</p>

<pre_>'''
This_is_a_multiline
comment_
'''
</pre>
<h2>Using_Blank_Lines</h2>


<p>A_line_containing_only_whitespace,_possibly_with_a_comment,_is_known_as_a_blank_line_and_Python_totally_ignores_it_</p>
<p>In_an_interactive_interpreter_session,_you_must_enter_an_empty_physical_line_to_terminate_a_multiline_statement_</p>

<h2>Waiting_for_the_User</h2>
<p>The_following_line_of_the_program_displays_the_prompt,_the_statement_saying_“Press_the_enter_key_to_exit”,_and_waits_for_the_user_to_take_action_−</p>

<pre__styleequal""><span_>#!/usr/bin/python</span><span_>

raw_input</span><span_>(</span><span_>"\n\nPress_the_enter_key_to_exit_"</span><span_>)</span></pre>

<p>Here,_"\n\n"_is_used_to_create_two_new_lines_before_displaying_the_actual_line__Once_the_user_presses_the_key,_the_program_ends__This_is_a_nice_trick_to_keep_a_console_window_open_until_the_user_is_done_with_an_application_</p>
<h2>Multiple_Statements_on_a_Single_Line</h2>
<p>The_semicolon_(_;_)_allows_multiple_statements_on_the_single_line_given_that_neither_statement_starts_a_new_code_block__Here_is_a_sample_snip_using_the_semicolon_−</p>
<pre__styleequal""><span_>import</span><span_>_sys</span><span_>;</span><span_>_x_</span><span_>equal</span><span_>_</span><span_>'foo'</span><span_>;</span><span_>_sys</span><span_>_</span><span_>stdout</span><span_>_</span><span_>write</span><span_>(</span><span_>x_</span><span_>_</span><span_>_</span><span_>'\n'</span><span_>)</span></pre>

<h2>Multiple_Statement_Groups_as_Suites</h2>
<p>A_group_of_individual_statements,_which_make_a_single_code_block_are_called_<b>suites</b>_in_Python__Compound_or_complex_statements,_such_as_if,_while,_def,_and_class_require_a_header_line_and_a_suite_</p>

<p>Header_lines_begin_the_statement_(with_the_keyword)_and_terminate_with_a_colon_(_:_)_and_are_followed_by_one_or_more_lines_which_make_up_the_suite__For_example_−</p>

<pre_>if_expression_:_
___suite
elif_expression_:_
___suite_
else_:_
___suite
</pre>

<h2>Command_Line_Arguments</h2>
<p>Many_programs_can_be_run_to_provide_you_with_some_basic_information_about_how_they_should_be_run__Python_enables_you_to_do_this_with_-h_−</p>

<pre__styleequal""><span_>$_python_</span><span_>-</span><span_>h
usage</span><span_>:</span><span_>_python_</span><span_>br31</span><span_>option</span><span_>br32</span><span_>_</span><span_>___</span><span_>_</span><span_>br31-</span><span_>c_cmd_</span><span_>|</span><span_>_</span><span_>-</span><span_>m_mod_</span><span_>|</span><span_>_file_</span><span_>|</span><span_>_</span><span_>-br32</span><span_>_</span><span_>br31</span><span_>arg</span><span_>br32</span><span_>_</span><span_>___</span><span_>
</span><span_>Options</span><span_>_</span><span_>and</span><span_>_arguments_</span><span_>(</span><span_>and</span><span_>_corresponding_environment_variables</span><span_>):</span><span_>
</span><span_>-</span><span_>c_cmd_</span><span_>:</span><span_>_program_passed_</span><span_>in</span><span_>_</span><span_>as</span><span_>_</span><span_>string</span><span_>_</span><span_>(</span><span_>terminates_option_list</span><span_>)</span><span_>
</span><span_>-</span><span_>d_____</span><span_>:</span><span_>_debug_output_</span><span_>from</span><span_>_parser_</span><span_>(</span><span_>also_PYTHONDEBUG</span><span_>equal</span><span_>x</span><span_>)</span><span_>
</span><span_>-</span><span_>E_____</span><span_>:</span><span_>_ignore_environment_variables_</span><span_>(</span><span_>such_</span><span_>as</span><span_>_PYTHONPATH</span><span_>)</span><span_>
</span><span_>-</span><span_>h_____</span><span_>:</span><span_>_</span><span_>print</span><span_>_</span><span_>this</span><span_>_help_message_</span><span_>and</span><span_>_</span><span_>exit</span><span_>

</span><span_>br31</span><span_>_etc</span><span_>_</span><span_>_</span><span_>br32</span></pre>

<p>You_can_also_program_your_script_in_such_a_way_that_it_should_accept_various_options__<a_hrefequal"/python/python_command_line_arguments_htm">Command_Line_Arguments</a>_is_an_advanced_topic_and_should_be_studied_a_bit_later_once_you_have_gone_through_rest_of_the_Python_concepts_</p>



****get it :

<h2>Multi-Line_Statements</h2>
<p>Statements_in_Python_typically_end_with_a_new_line__Python_does,_however,_allow_the_use_of_the_line_continuation_character_(\)_to_denote_that_the_line_should_continue__For_example_−</p>
<pre_>total_equal_item_one___\
________item_two___\
________item_three
</pre>
<p>Statements_contained_within_the_br31br32,_{},_or_()_brackets_do_not_need_to_use_the_line_continuation_character__For_example_−</p>

<pre_>days_equal_br31'Monday',_'Tuesday',_'Wednesday',
________'Thursday',_'Friday'br32
</pre>
<h2>Quotation_in_Python</h2>

<p>Python_accepts_single_('),_double_(")_and_triple_('''_or_""")_quotes_to_denote_string_literals,_as_long_as_the_same_type_of_quote_starts_and_ends_the_string_</p>
<p>The_triple_quotes_are_used_to_span_the_string_across_multiple_lines__For_example,_all_the_following_are_legal_−</p>
<pre_>word_equal_'word'
sentence_equal_"This_is_a_sentence_"
paragraph_equal_"""This_is_a_paragraph__It_is
made_up_of_multiple_lines_and_sentences_"""
</pre>
<h2>Comments_in_Python</h2>
<p>A_hash_sign_(#)_that_is_not_inside_a_string_literal_begins_a_comment__All_characters_after_the_#_and_up_to_the_end_of_the_physical_line_are_part_of_the_comment_and_the_Python_interpreter_ignores_them_</p>
<pre__styleequal""><span_>#!/usr/bin/python</span><span_>

</span><span_>#_First_comment</span><span_>
</span><span_>print</span><span_>_</span><span_>"Hello,_Python!"</span><span_>_</span><span_>#_second_comment</span></pre>

<p>This_produces_the_following_result_−</p>
<pre_>Hello,_Python!
</pre>
<p>You_can_type_a_comment_on_the_same_line_after_a_statement_or_expression_−</p>

<pre_>name_equal_"Madisetti"_#_This_is_again_comment
</pre>
<p>You_can_comment_multiple_lines_as_follows_−</p>
<pre_>#_This_is_a_comment_
#_This_is_a_comment,_too_
#_This_is_a_comment,_too_
#_I_said_that_already_
</pre>

<p>Following_triple-quoted_string_is_also_ignored_by_Python_interpreter_and_can_be_used_as_a_multiline_comments:</p>

<pre_>'''
This_is_a_multiline
comment_
'''
</pre>
<h2>Using_Blank_Lines</h2>


<p>A_line_containing_only_whitespace,_possibly_with_a_comment,_is_known_as_a_blank_line_and_Python_totally_ignores_it_</p>
<p>In_an_interactive_interpreter_session,_you_must_enter_an_empty_physical_line_to_terminate_a_multiline_statement_</p>

<h2>Waiting_for_the_User</h2>
<p>The_following_line_of_the_program_displays_the_prompt,_the_statement_saying_“Press_the_enter_key_to_exit”,_and_waits_for_the_user_to_take_action_−</p>

<pre__styleequal""><span_>#!/usr/bin/python</span><span_>

raw_input</span><span_>(</span><span_>"\n\nPress_the_enter_key_to_exit_"</span><span_>)</span></pre>

<p>Here,_"\n\n"_is_used_to_create_two_new_lines_before_displaying_the_actual_line__Once_the_user_presses_the_key,_the_program_ends__This_is_a_nice_trick_to_keep_a_console_window_open_until_the_user_is_done_with_an_application_</p>
<h2>Multiple_Statements_on_a_Single_Line</h2>
<p>The_semicolon_(_;_)_allows_multiple_statements_on_the_single_line_given_that_neither_statement_starts_a_new_code_block__Here_is_a_sample_snip_using_the_semicolon_−</p>
<pre__styleequal""><span_>import</span><span_>_sys</span><span_>;</span><span_>_x_</span><span_>equal</span><span_>_</span><span_>'foo'</span><span_>;</span><span_>_sys</span><span_>_</span><span_>stdout</span><span_>_</span><span_>write</span><span_>(</span><span_>x_</span><span_>_</span><span_>_</span><span_>'\n'</span><span_>)</span></pre>

<h2>Multiple_Statement_Groups_as_Suites</h2>
<p>A_group_of_individual_statements,_which_make_a_single_code_block_are_called_<b>suites</b>_in_Python__Compound_or_complex_statements,_such_as_if,_while,_def,_and_class_require_a_header_line_and_a_suite_</p>

<p>Header_lines_begin_the_statement_(with_the_keyword)_and_terminate_with_a_colon_(_:_)_and_are_followed_by_one_or_more_lines_which_make_up_the_suite__For_example_−</p>

<pre_>if_expression_:_
___suite
elif_expression_:_
___suite_
else_:_
___suite
</pre>

<h2>Command_Line_Arguments</h2>
<p>Many_programs_can_be_run_to_provide_you_with_some_basic_information_about_how_they_should_be_run__Python_enables_you_to_do_this_with_-h_−</p>

<pre__styleequal""><span_>$_python_</span><span_>-</span><span_>h
usage</span><span_>:</span><span_>_python_</span><span_>br31</span><span_>option</span><span_>br32</span><span_>_</span><span_>___</span><span_>_</span><span_>br31-</span><span_>c_cmd_</span><span_>|</span><span_>_</span><span_>-</span><span_>m_mod_</span><span_>|</span><span_>_file_</span><span_>|</span><span_>_</span><span_>-br32</span><span_>_</span><span_>br31</span><span_>arg</span><span_>br32</span><span_>_</span><span_>___</span><span_>
</span><span_>Options</span><span_>_</span><span_>and</span><span_>_arguments_</span><span_>(</span><span_>and</span><span_>_corresponding_environment_variables</span><span_>):</span><span_>
</span><span_>-</span><span_>c_cmd_</span><span_>:</span><span_>_program_passed_</span><span_>in</span><span_>_</span><span_>as</span><span_>_</span><span_>string</span><span_>_</span><span_>(</span><span_>terminates_option_list</span><span_>)</span><span_>
</span><span_>-</span><span_>d_____</span><span_>:</span><span_>_debug_output_</span><span_>from</span><span_>_parser_</span><span_>(</span><span_>also_PYTHONDEBUG</span><span_>equal</span><span_>x</span><span_>)</span><span_>
</span><span_>-</span><span_>E_____</span><span_>:</span><span_>_ignore_environment_variables_</span><span_>(</span><span_>such_</span><span_>as</span><span_>_PYTHONPATH</span><span_>)</span><span_>
</span><span_>-</span><span_>h_____</span><span_>:</span><span_>_</span><span_>print</span><span_>_</span><span_>this</span><span_>_help_message_</span><span_>and</span><span_>_</span><span_>exit</span><span_>

</span><span_>br31</span><span_>_etc</span><span_>_</span><span_>_</span><span_>br32</span></pre>

<p>You_can_also_program_your_script_in_such_a_way_that_it_should_accept_various_options__<a_hrefequal"/python/python_command_line_arguments_htm">Command_Line_Arguments</a>_is_an_advanced_topic_and_should_be_studied_a_bit_later_once_you_have_gone_through_rest_of_the_Python_concepts_</p>



****get it :

<h2>Multi-Line_Statements</h2>
<p>Statements_in_Python_typically_end_with_a_new_line__Python_does,_however,_allow_the_use_of_the_line_continuation_character_(\)_to_denote_that_the_line_should_continue__For_example_−</p>
<pre_>total_equal_item_one___\
________item_two___\
________item_three
</pre>
<p>Statements_contained_within_the_br31br32,_{},_or_()_brackets_do_not_need_to_use_the_line_continuation_character__For_example_−</p>

<pre_>days_equal_br31'Monday',_'Tuesday',_'Wednesday',
________'Thursday',_'Friday'br32
</pre>
<h2>Quotation_in_Python</h2>

<p>Python_accepts_single_('),_double_(")_and_triple_('''_or_""")_quotes_to_denote_string_literals,_as_long_as_the_same_type_of_quote_starts_and_ends_the_string_</p>
<p>The_triple_quotes_are_used_to_span_the_string_across_multiple_lines__For_example,_all_the_following_are_legal_−</p>
<pre_>word_equal_'word'
sentence_equal_"This_is_a_sentence_"
paragraph_equal_"""This_is_a_paragraph__It_is
made_up_of_multiple_lines_and_sentences_"""
</pre>
<h2>Comments_in_Python</h2>
<p>A_hash_sign_(#)_that_is_not_inside_a_string_literal_begins_a_comment__All_characters_after_the_#_and_up_to_the_end_of_the_physical_line_are_part_of_the_comment_and_the_Python_interpreter_ignores_them_</p>
<pre__styleequal""><span_>#!/usr/bin/python</span><span_>

</span><span_>#_First_comment</span><span_>
</span><span_>print</span><span_>_</span><span_>"Hello,_Python!"</span><span_>_</span><span_>#_second_comment</span></pre>

<p>This_produces_the_following_result_−</p>
<pre_>Hello,_Python!
</pre>
<p>You_can_type_a_comment_on_the_same_line_after_a_statement_or_expression_−</p>

<pre_>name_equal_"Madisetti"_#_This_is_again_comment
</pre>
<p>You_can_comment_multiple_lines_as_follows_−</p>
<pre_>#_This_is_a_comment_
#_This_is_a_comment,_too_
#_This_is_a_comment,_too_
#_I_said_that_already_
</pre>

<p>Following_triple-quoted_string_is_also_ignored_by_Python_interpreter_and_can_be_used_as_a_multiline_comments:</p>

<pre_>'''
This_is_a_multiline
comment_
'''
</pre>
<h2>Using_Blank_Lines</h2>


<p>A_line_containing_only_whitespace,_possibly_with_a_comment,_is_known_as_a_blank_line_and_Python_totally_ignores_it_</p>
<p>In_an_interactive_interpreter_session,_you_must_enter_an_empty_physical_line_to_terminate_a_multiline_statement_</p>

<h2>Waiting_for_the_User</h2>
<p>The_following_line_of_the_program_displays_the_prompt,_the_statement_saying_“Press_the_enter_key_to_exit”,_and_waits_for_the_user_to_take_action_−</p>

<pre__styleequal""><span_>#!/usr/bin/python</span><span_>

raw_input</span><span_>(</span><span_>"\n\nPress_the_enter_key_to_exit_"</span><span_>)</span></pre>

<p>Here,_"\n\n"_is_used_to_create_two_new_lines_before_displaying_the_actual_line__Once_the_user_presses_the_key,_the_program_ends__This_is_a_nice_trick_to_keep_a_console_window_open_until_the_user_is_done_with_an_application_</p>
<h2>Multiple_Statements_on_a_Single_Line</h2>
<p>The_semicolon_(_;_)_allows_multiple_statements_on_the_single_line_given_that_neither_statement_starts_a_new_code_block__Here_is_a_sample_snip_using_the_semicolon_−</p>
<pre__styleequal""><span_>import</span><span_>_sys</span><span_>;</span><span_>_x_</span><span_>equal</span><span_>_</span><span_>'foo'</span><span_>;</span><span_>_sys</span><span_>_</span><span_>stdout</span><span_>_</span><span_>write</span><span_>(</span><span_>x_</span><span_>_</span><span_>_</span><span_>'\n'</span><span_>)</span></pre>

<h2>Multiple_Statement_Groups_as_Suites</h2>
<p>A_group_of_individual_statements,_which_make_a_single_code_block_are_called_<b>suites</b>_in_Python__Compound_or_complex_statements,_such_as_if,_while,_def,_and_class_require_a_header_line_and_a_suite_</p>

<p>Header_lines_begin_the_statement_(with_the_keyword)_and_terminate_with_a_colon_(_:_)_and_are_followed_by_one_or_more_lines_which_make_up_the_suite__For_example_−</p>

<pre_>if_expression_:_
___suite
elif_expression_:_
___suite_
else_:_
___suite
</pre>

<h2>Command_Line_Arguments</h2>
<p>Many_programs_can_be_run_to_provide_you_with_some_basic_information_about_how_they_should_be_run__Python_enables_you_to_do_this_with_-h_−</p>

<pre__styleequal""><span_>$_python_</span><span_>-</span><span_>h
usage</span><span_>:</span><span_>_python_</span><span_>br31</span><span_>option</span><span_>br32</span><span_>_</span><span_>___</span><span_>_</span><span_>br31-</span><span_>c_cmd_</span><span_>|</span><span_>_</span><span_>-</span><span_>m_mod_</span><span_>|</span><span_>_file_</span><span_>|</span><span_>_</span><span_>-br32</span><span_>_</span><span_>br31</span><span_>arg</span><span_>br32</span><span_>_</span><span_>___</span><span_>
</span><span_>Options</span><span_>_</span><span_>and</span><span_>_arguments_</span><span_>(</span><span_>and</span><span_>_corresponding_environment_variables</span><span_>):</span><span_>
</span><span_>-</span><span_>c_cmd_</span><span_>:</span><span_>_program_passed_</span><span_>in</span><span_>_</span><span_>as</span><span_>_</span><span_>string</span><span_>_</span><span_>(</span><span_>terminates_option_list</span><span_>)</span><span_>
</span><span_>-</span><span_>d_____</span><span_>:</span><span_>_debug_output_</span><span_>from</span><span_>_parser_</span><span_>(</span><span_>also_PYTHONDEBUG</span><span_>equal</span><span_>x</span><span_>)</span><span_>
</span><span_>-</span><span_>E_____</span><span_>:</span><span_>_ignore_environment_variables_</span><span_>(</span><span_>such_</span><span_>as</span><span_>_PYTHONPATH</span><span_>)</span><span_>
</span><span_>-</span><span_>h_____</span><span_>:</span><span_>_</span><span_>print</span><span_>_</span><span_>this</span><span_>_help_message_</span><span_>and</span><span_>_</span><span_>exit</span><span_>

</span><span_>br31</span><span_>_etc</span><span_>_</span><span_>_</span><span_>br32</span></pre>

<p>You_can_also_program_your_script_in_such_a_way_that_it_should_accept_various_options__<a_hrefequal"/python/python_command_line_arguments_htm">Command_Line_Arguments</a>_is_an_advanced_topic_and_should_be_studied_a_bit_later_once_you_have_gone_through_rest_of_the_Python_concepts_</p>



****get it :

<h2>Multi-Line_Statements</h2>
<p>Statements_in_Python_typically_end_with_a_new_line__Python_does,_however,_allow_the_use_of_the_line_continuation_character_(\)_to_denote_that_the_line_should_continue__For_example_−</p>
<pre_>total_equal_item_one___\
________item_two___\
________item_three
</pre>
<p>Statements_contained_within_the_br31br32,_{},_or_()_brackets_do_not_need_to_use_the_line_continuation_character__For_example_−</p>

<pre_>days_equal_br31'Monday',_'Tuesday',_'Wednesday',
________'Thursday',_'Friday'br32
</pre>
<h2>Quotation_in_Python</h2>

<p>Python_accepts_single_('),_double_(")_and_triple_('''_or_""")_quotes_to_denote_string_literals,_as_long_as_the_same_type_of_quote_starts_and_ends_the_string_</p>
<p>The_triple_quotes_are_used_to_span_the_string_across_multiple_lines__For_example,_all_the_following_are_legal_−</p>
<pre_>word_equal_'word'
sentence_equal_"This_is_a_sentence_"
paragraph_equal_"""This_is_a_paragraph__It_is
made_up_of_multiple_lines_and_sentences_"""
</pre>
<h2>Comments_in_Python</h2>
<p>A_hash_sign_(#)_that_is_not_inside_a_string_literal_begins_a_comment__All_characters_after_the_#_and_up_to_the_end_of_the_physical_line_are_part_of_the_comment_and_the_Python_interpreter_ignores_them_</p>
<pre__styleequal""><span_>#!/usr/bin/python</span><span_>

</span><span_>#_First_comment</span><span_>
</span><span_>print</span><span_>_</span><span_>"Hello,_Python!"</span><span_>_</span><span_>#_second_comment</span></pre>

<p>This_produces_the_following_result_−</p>
<pre_>Hello,_Python!
</pre>
<p>You_can_type_a_comment_on_the_same_line_after_a_statement_or_expression_−</p>

<pre_>name_equal_"Madisetti"_#_This_is_again_comment
</pre>
<p>You_can_comment_multiple_lines_as_follows_−</p>
<pre_>#_This_is_a_comment_
#_This_is_a_comment,_too_
#_This_is_a_comment,_too_
#_I_said_that_already_
</pre>

<p>Following_triple-quoted_string_is_also_ignored_by_Python_interpreter_and_can_be_used_as_a_multiline_comments:</p>

<pre_>'''
This_is_a_multiline
comment_
'''
</pre>
<h2>Using_Blank_Lines</h2>


<p>A_line_containing_only_whitespace,_possibly_with_a_comment,_is_known_as_a_blank_line_and_Python_totally_ignores_it_</p>
<p>In_an_interactive_interpreter_session,_you_must_enter_an_empty_physical_line_to_terminate_a_multiline_statement_</p>

<h2>Waiting_for_the_User</h2>
<p>The_following_line_of_the_program_displays_the_prompt,_the_statement_saying_“Press_the_enter_key_to_exit”,_and_waits_for_the_user_to_take_action_−</p>

<pre__styleequal""><span_>#!/usr/bin/python</span><span_>

raw_input</span><span_>(</span><span_>"\n\nPress_the_enter_key_to_exit_"</span><span_>)</span></pre>

<p>Here,_"\n\n"_is_used_to_create_two_new_lines_before_displaying_the_actual_line__Once_the_user_presses_the_key,_the_program_ends__This_is_a_nice_trick_to_keep_a_console_window_open_until_the_user_is_done_with_an_application_</p>
<h2>Multiple_Statements_on_a_Single_Line</h2>
<p>The_semicolon_(_;_)_allows_multiple_statements_on_the_single_line_given_that_neither_statement_starts_a_new_code_block__Here_is_a_sample_snip_using_the_semicolon_−</p>
<pre__styleequal""><span_>import</span><span_>_sys</span><span_>;</span><span_>_x_</span><span_>equal</span><span_>_</span><span_>'foo'</span><span_>;</span><span_>_sys</span><span_>_</span><span_>stdout</span><span_>_</span><span_>write</span><span_>(</span><span_>x_</span><span_>_</span><span_>_</span><span_>'\n'</span><span_>)</span></pre>

<h2>Multiple_Statement_Groups_as_Suites</h2>
<p>A_group_of_individual_statements,_which_make_a_single_code_block_are_called_<b>suites</b>_in_Python__Compound_or_complex_statements,_such_as_if,_while,_def,_and_class_require_a_header_line_and_a_suite_</p>

<p>Header_lines_begin_the_statement_(with_the_keyword)_and_terminate_with_a_colon_(_:_)_and_are_followed_by_one_or_more_lines_which_make_up_the_suite__For_example_−</p>

<pre_>if_expression_:_
___suite
elif_expression_:_
___suite_
else_:_
___suite
</pre>

<h2>Command_Line_Arguments</h2>
<p>Many_programs_can_be_run_to_provide_you_with_some_basic_information_about_how_they_should_be_run__Python_enables_you_to_do_this_with_-h_−</p>

<pre__styleequal""><span_>$_python_</span><span_>-</span><span_>h
usage</span><span_>:</span><span_>_python_</span><span_>br31</span><span_>option</span><span_>br32</span><span_>_</span><span_>___</span><span_>_</span><span_>br31-</span><span_>c_cmd_</span><span_>|</span><span_>_</span><span_>-</span><span_>m_mod_</span><span_>|</span><span_>_file_</span><span_>|</span><span_>_</span><span_>-br32</span><span_>_</span><span_>br31</span><span_>arg</span><span_>br32</span><span_>_</span><span_>___</span><span_>
</span><span_>Options</span><span_>_</span><span_>and</span><span_>_arguments_</span><span_>(</span><span_>and</span><span_>_corresponding_environment_variables</span><span_>):</span><span_>
</span><span_>-</span><span_>c_cmd_</span><span_>:</span><span_>_program_passed_</span><span_>in</span><span_>_</span><span_>as</span><span_>_</span><span_>string</span><span_>_</span><span_>(</span><span_>terminates_option_list</span><span_>)</span><span_>
</span><span_>-</span><span_>d_____</span><span_>:</span><span_>_debug_output_</span><span_>from</span><span_>_parser_</span><span_>(</span><span_>also_PYTHONDEBUG</span><span_>equal</span><span_>x</span><span_>)</span><span_>
</span><span_>-</span><span_>E_____</span><span_>:</span><span_>_ignore_environment_variables_</span><span_>(</span><span_>such_</span><span_>as</span><span_>_PYTHONPATH</span><span_>)</span><span_>
</span><span_>-</span><span_>h_____</span><span_>:</span><span_>_</span><span_>print</span><span_>_</span><span_>this</span><span_>_help_message_</span><span_>and</span><span_>_</span><span_>exit</span><span_>

</span><span_>br31</span><span_>_etc</span><span_>_</span><span_>_</span><span_>br32</span></pre>

<p>You_can_also_program_your_script_in_such_a_way_that_it_should_accept_various_options__<a_hrefequal"/python/python_command_line_arguments_htm">Command_Line_Arguments</a>_is_an_advanced_topic_and_should_be_studied_a_bit_later_once_you_have_gone_through_rest_of_the_Python_concepts_</p>



****get it :

<h2>Multi-Line_Statements</h2>
<p>Statements_in_Python_typically_end_with_a_new_line__Python_does,_however,_allow_the_use_of_the_line_continuation_character_(\)_to_denote_that_the_line_should_continue__For_example_−</p>
<pre_>total_equal_item_one___\
________item_two___\
________item_three
</pre>
<p>Statements_contained_within_the_br31br32,_{},_or_()_brackets_do_not_need_to_use_the_line_continuation_character__For_example_−</p>

<pre_>days_equal_br31'Monday',_'Tuesday',_'Wednesday',
________'Thursday',_'Friday'br32
</pre>
<h2>Quotation_in_Python</h2>

<p>Python_accepts_single_('),_double_(")_and_triple_('''_or_""")_quotes_to_denote_string_literals,_as_long_as_the_same_type_of_quote_starts_and_ends_the_string_</p>
<p>The_triple_quotes_are_used_to_span_the_string_across_multiple_lines__For_example,_all_the_following_are_legal_−</p>
<pre_>word_equal_'word'
sentence_equal_"This_is_a_sentence_"
paragraph_equal_"""This_is_a_paragraph__It_is
made_up_of_multiple_lines_and_sentences_"""
</pre>
<h2>Comments_in_Python</h2>
<p>A_hash_sign_(#)_that_is_not_inside_a_string_literal_begins_a_comment__All_characters_after_the_#_and_up_to_the_end_of_the_physical_line_are_part_of_the_comment_and_the_Python_interpreter_ignores_them_</p>
<pre__styleequal""><span_>#!/usr/bin/python</span><span_>

</span><span_>#_First_comment</span><span_>
</span><span_>print</span><span_>_</span><span_>"Hello,_Python!"</span><span_>_</span><span_>#_second_comment</span></pre>

<p>This_produces_the_following_result_−</p>
<pre_>Hello,_Python!
</pre>
<p>You_can_type_a_comment_on_the_same_line_after_a_statement_or_expression_−</p>

<pre_>name_equal_"Madisetti"_#_This_is_again_comment
</pre>
<p>You_can_comment_multiple_lines_as_follows_−</p>
<pre_>#_This_is_a_comment_
#_This_is_a_comment,_too_
#_This_is_a_comment,_too_
#_I_said_that_already_
</pre>

<p>Following_triple-quoted_string_is_also_ignored_by_Python_interpreter_and_can_be_used_as_a_multiline_comments:</p>

<pre_>'''
This_is_a_multiline
comment_
'''
</pre>
<h2>Using_Blank_Lines</h2>


<p>A_line_containing_only_whitespace,_possibly_with_a_comment,_is_known_as_a_blank_line_and_Python_totally_ignores_it_</p>
<p>In_an_interactive_interpreter_session,_you_must_enter_an_empty_physical_line_to_terminate_a_multiline_statement_</p>

<h2>Waiting_for_the_User</h2>
<p>The_following_line_of_the_program_displays_the_prompt,_the_statement_saying_“Press_the_enter_key_to_exit”,_and_waits_for_the_user_to_take_action_−</p>

<pre__styleequal""><span_>#!/usr/bin/python</span><span_>

raw_input</span><span_>(</span><span_>"\n\nPress_the_enter_key_to_exit_"</span><span_>)</span></pre>

<p>Here,_"\n\n"_is_used_to_create_two_new_lines_before_displaying_the_actual_line__Once_the_user_presses_the_key,_the_program_ends__This_is_a_nice_trick_to_keep_a_console_window_open_until_the_user_is_done_with_an_application_</p>
<h2>Multiple_Statements_on_a_Single_Line</h2>
<p>The_semicolon_(_;_)_allows_multiple_statements_on_the_single_line_given_that_neither_statement_starts_a_new_code_block__Here_is_a_sample_snip_using_the_semicolon_−</p>
<pre__styleequal""><span_>import</span><span_>_sys</span><span_>;</span><span_>_x_</span><span_>equal</span><span_>_</span><span_>'foo'</span><span_>;</span><span_>_sys</span><span_>_</span><span_>stdout</span><span_>_</span><span_>write</span><span_>(</span><span_>x_</span><span_>_</span><span_>_</span><span_>'\n'</span><span_>)</span></pre>

<h2>Multiple_Statement_Groups_as_Suites</h2>
<p>A_group_of_individual_statements,_which_make_a_single_code_block_are_called_<b>suites</b>_in_Python__Compound_or_complex_statements,_such_as_if,_while,_def,_and_class_require_a_header_line_and_a_suite_</p>

<p>Header_lines_begin_the_statement_(with_the_keyword)_and_terminate_with_a_colon_(_:_)_and_are_followed_by_one_or_more_lines_which_make_up_the_suite__For_example_−</p>

<pre_>if_expression_:_
___suite
elif_expression_:_
___suite_
else_:_
___suite
</pre>

<h2>Command_Line_Arguments</h2>
<p>Many_programs_can_be_run_to_provide_you_with_some_basic_information_about_how_they_should_be_run__Python_enables_you_to_do_this_with_-h_−</p>

<pre__styleequal""><span_>$_python_</span><span_>-</span><span_>h
usage</span><span_>:</span><span_>_python_</span><span_>br31</span><span_>option</span><span_>br32</span><span_>_</span><span_>___</span><span_>_</span><span_>br31-</span><span_>c_cmd_</span><span_>|</span><span_>_</span><span_>-</span><span_>m_mod_</span><span_>|</span><span_>_file_</span><span_>|</span><span_>_</span><span_>-br32</span><span_>_</span><span_>br31</span><span_>arg</span><span_>br32</span><span_>_</span><span_>___</span><span_>
</span><span_>Options</span><span_>_</span><span_>and</span><span_>_arguments_</span><span_>(</span><span_>and</span><span_>_corresponding_environment_variables</span><span_>):</span><span_>
</span><span_>-</span><span_>c_cmd_</span><span_>:</span><span_>_program_passed_</span><span_>in</span><span_>_</span><span_>as</span><span_>_</span><span_>string</span><span_>_</span><span_>(</span><span_>terminates_option_list</span><span_>)</span><span_>
</span><span_>-</span><span_>d_____</span><span_>:</span><span_>_debug_output_</span><span_>from</span><span_>_parser_</span><span_>(</span><span_>also_PYTHONDEBUG</span><span_>equal</span><span_>x</span><span_>)</span><span_>
</span><span_>-</span><span_>E_____</span><span_>:</span><span_>_ignore_environment_variables_</span><span_>(</span><span_>such_</span><span_>as</span><span_>_PYTHONPATH</span><span_>)</span><span_>
</span><span_>-</span><span_>h_____</span><span_>:</span><span_>_</span><span_>print</span><span_>_</span><span_>this</span><span_>_help_message_</span><span_>and</span><span_>_</span><span_>exit</span><span_>

</span><span_>br31</span><span_>_etc</span><span_>_</span><span_>_</span><span_>br32</span></pre>

<p>You_can_also_program_your_script_in_such_a_way_that_it_should_accept_various_options__<a_hrefequal"/python/python_command_line_arguments_htm">Command_Line_Arguments</a>_is_an_advanced_topic_and_should_be_studied_a_bit_later_once_you_have_gone_through_rest_of_the_Python_concepts_</p>



****get it :

<h2>Multi-Line_Statements</h2>
<p>Statements_in_Python_typically_end_with_a_new_line__Python_does,_however,_allow_the_use_of_the_line_continuation_character_(\)_to_denote_that_the_line_should_continue__For_example_−</p>
<pre_class****get it :

<h2>Multi-Line_Statements</h2>
<p>Statements_in_Python_typically_end_with_a_new_line__Python_does,_however,_allow_the_use_of_the_line_continuation_character_(\)_to_denote_that_the_line_should_continue__For_example_−</p>
<pre_>total_equal_item_one___\
________item_two___\
________item_three
</pre>
<p>Statements_contained_within_the_br31br32,_{},_or_()_brackets_do_not_need_to_use_the_line_continuation_character__For_example_−</p>

<pre_>days_equal_br31'Monday',_'Tuesday',_'Wednesday',
________'Thursday',_'Friday'br32
</pre>
<h2>Quotation_in_Python</h2>

<p>Python_accepts_single_('),_double_(")_and_triple_('''_or_""")_quotes_to_denote_string_literals,_as_long_as_the_same_type_of_quote_starts_and_ends_the_string_</p>
<p>The_triple_quotes_are_used_to_span_the_string_across_multiple_lines__For_example,_all_the_following_are_legal_−</p>
<pre_>word_equal_'word'
sentence_equal_"This_is_a_sentence_"
paragraph_equal_"""This_is_a_paragraph__It_is
made_up_of_multiple_lines_and_sentences_"""
</pre>
<h2>Comments_in_Python</h2>
<p>A_hash_sign_(#)_that_is_not_inside_a_string_literal_begins_a_comment__All_characters_after_the_#_and_up_to_the_end_of_the_physical_line_are_part_of_the_comment_and_the_Python_interpreter_ignores_them_</p>
<pre__styleequal""><span_>#!/usr/bin/python</span><span_>

</span><span_>#_First_comment</span><span_>
</span><span_>print</span><span_>_</span><span_>"Hello,_Python!"</span><span_>_</span><span_>#_second_comment</span></pre>

<p>This_produces_the_following_result_−</p>
<pre_>Hello,_Python!
</pre>
<p>You_can_type_a_comment_on_the_same_line_after_a_statement_or_expression_−</p>

<pre_>name_equal_"Madisetti"_#_This_is_again_comment
</pre>
<p>You_can_comment_multiple_lines_as_follows_−</p>
<pre_>#_This_is_a_comment_
#_This_is_a_comment,_too_
#_This_is_a_comment,_too_
#_I_said_that_already_
</pre>

<p>Following_triple-quoted_string_is_also_ignored_by_Python_interpreter_and_can_be_used_as_a_multiline_comments:</p>

<pre_>'''
This_is_a_multiline
comment_
'''
</pre>
<h2>Using_Blank_Lines</h2>


<p>A_line_containing_only_whitespace,_possibly_with_a_comment,_is_known_as_a_blank_line_and_Python_totally_ignores_it_</p>
<p>In_an_interactive_interpreter_session,_you_must_enter_an_empty_physical_line_to_terminate_a_multiline_statement_</p>

<h2>Waiting_for_the_User</h2>
<p>The_following_line_of_the_program_displays_the_prompt,_the_statement_saying_“Press_the_enter_key_to_exit”,_and_waits_for_the_user_to_take_action_−</p>

<pre__styleequal""><span_>#!/usr/bin/python</span><span_>

raw_input</span><span_>(</span><span_>"\n\nPress_the_enter_key_to_exit_"</span><span_>)</span></pre>

<p>Here,_"\n\n"_is_used_to_create_two_new_lines_before_displaying_the_actual_line__Once_the_user_presses_the_key,_the_program_ends__This_is_a_nice_trick_to_keep_a_console_window_open_until_the_user_is_done_with_an_application_</p>
<h2>Multiple_Statements_on_a_Single_Line</h2>
<p>The_semicolon_(_;_)_allows_multiple_statements_on_the_single_line_given_that_neither_statement_starts_a_new_code_block__Here_is_a_sample_snip_using_the_semicolon_−</p>
<pre__styleequal""><span_>import</span><span_>_sys</span><span_>;</span><span_>_x_</span><span_>equal</span><span_>_</span><span_>'foo'</span><span_>;</span><span_>_sys</span><span_>_</span><span_>stdout</span><span_>_</span><span_>write</span><span_>(</span><span_>x_</span><span_>_</span><span_>_</span><span_>'\n'</span><span_>)</span></pre>

<h2>Multiple_Statement_Groups_as_Suites</h2>
<p>A_group_of_individual_statements,_which_make_a_single_code_block_are_called_<b>suites</b>_in_Python__Compound_or_complex_statements,_such_as_if,_while,_def,_and_class_require_a_header_line_and_a_suite_</p>

<p>Header_lines_begin_the_statement_(with_the_keyword)_and_terminate_with_a_colon_(_:_)_and_are_followed_by_one_or_more_lines_which_make_up_the_suite__For_example_−</p>

<pre_>if_expression_:_
___suite
elif_expression_:_
___suite_
else_:_
___suite
</pre>

<h2>Command_Line_Arguments</h2>
<p>Many_programs_can_be_run_to_provide_you_with_some_basic_information_about_how_they_should_be_run__Python_enables_you_to_do_this_with_-h_−</p>

<pre__styleequal""><span_>$_python_</span><span_>-</span><span_>h
usage</span><span_>:</span><span_>_python_</span><span_>br31</span><span_>option</span><span_>br32</span><span_>_</span><span_>___</span><span_>_</span><span_>br31-</span><span_>c_cmd_</span><span_>|</span><span_>_</span><span_>-</span><span_>m_mod_</span><span_>|</span><span_>_file_</span><span_>|</span><span_>_</span><span_>-br32</span><span_>_</span><span_>br31</span><span_>arg</span><span_>br32</span><span_>_</span><span_>___</span><span_>
</span><span_>Options</span><span_>_</span><span_>and</span><span_>_arguments_</span><span_>(</span><span_>and</span><span_>_corresponding_environment_variables</span><span_>):</span><span_>
</span><span_>-</span><span_>c_cmd_</span><span_>:</span><span_>_program_passed_</span><span_>in</span><span_>_</span><span_>as</span><span_>_</span><span_>string</span><span_>_</span><span_>(</span><span_>terminates_option_list</span><span_>)</span><span_>
</span><span_>-</span><span_>d_____</span><span_>:</span><span_>_debug_output_</span><span_>from</span><span_>_parser_</span><span_>(</span><span_>also_PYTHONDEBUG</span><span_>equal</span><span_>x</span><span_>)</span><span_>
</span><span_>-</span><span_>E_____</span><span_>:</span><span_>_ignore_environment_variables_</span><span_>(</span><span_>such_</span><span_>as</span><span_>_PYTHONPATH</span><span_>)</span><span_>
</span><span_>-</span><span_>h_____</span><span_>:</span><span_>_</span><span_>print</span><span_>_</span><span_>this</span><span_>_help_message_</span><span_>and</span><span_>_</span><span_>exit</span><span_>

</span><span_>br31</span><span_>_etc</span><span_>_</span><span_>_</span><span_>br32</span></pre>

<p>You_can_also_program_your_script_in_such_a_way_that_it_should_accept_various_options__<a_hrefequal"/python/python_command_line_arguments_htm">Command_Line_Arguments</a>_is_an_advanced_topic_and_should_be_studied_a_bit_later_once_you_have_gone_through_rest_of_the_Python_concepts_</p>



****get it :<h1>Python_-_Basic_Syntax</h1>
<p>The_Python_language_has_many_similarities_to_Perl,_C,_and_Java__However,_there_are_some_definite_differences_between_the_languages_</p>
<h2>First_Python_Program</h2>
<p>Let_us_execute_programs_in_different_modes_of_programming_</p>
<h3>Interactive_Mode_Programming</h3>
<p>Invoking_the_interpreter_without_passing_a_script_file_as_a_parameter_brings_up_the_following_prompt_−</p>
<pre__styleequal""><span_>$_python
</span><span_>Python</span><span_>_</span><span_>2_4</span><span_>_</span><span_>3</span><span_>_</span><span_>(#</span><span_>1</span><span_>,</span><span_>_</span><span_>Nov</span><span_>_</span><span_>11</span><span_>_</span><span_>2010</span><span_>,</span><span_>_</span><span_>13</span><span_>:</span><span_>34</span><span_>:</span><span_>43</span><span_>)</span><span_>
</span><span_>br31</span><span_>GCC_</span><span_>4_1</span><span_>_</span><span_>2</span><span_>_</span><span_>20080704</span><span_>_</span><span_>(</span><span_>Red</span><span_>_</span><span_>Hat</span><span_>_</span><span_>4_1</span><span_>_</span><span_>2</span><span_>-</span><span_>48</span><span_>)br32</span><span_>_on_linux2
</span><span_>Type</span><span_>_</span><span_>"help"</span><span_>,</span><span_>_</span><span_>"copyright"</span><span_>,</span><span_>_</span><span_>"credits"</span><span_>_</span><span_>or</span><span_>_</span><span_>"license"</span><span_>_</span><span_>for</span><span_>_more_information</span><span_>_</span><span_>
</span><span_>****get it :gt;****get it :gt;</span></pre>
<p>Type_the_following_text_at_the_Python_prompt_and_press_the_Enter_−</p>
<pre__styleequal""><span_>****get it :gt;</span><span_>_</span><span_>print</span><span_>_</span><span_>"Hello,_Python!"</span></pre>
<p>If_you_are_running_new_version_of_Python,_then_you_would_need_to_use_print_statement_with_parenthesis_as_in_<b>print_("Hello,_Python!");</b>__However_in_Python_version_2_4_3,_this_produces_the_following_result_−</p>
<pre_>Hello,_Python!
</pre>

<h3>Script_Mode_Programming</h3>

<p>Invoking_the_interpreter_with_a_script_parameter_begins_execution_of_the_script_and_continues_until_the_script_is_finished__When_the_script_is_finished,_the_interpreter_is_no_longer_active_</p>
<p>Let_us_write_a_simple_Python_program_in_a_script__Python_files_have_extension_<b>_py</b>__Type_the_following_source_code_in_a_test_py_file_−</p>
<div_>
<a_hrefequal"http://tpcg_io/lsYEBf"_targetequal"_blank"_relequal"nofollow"_><i_></i>_Live_Demo</a>
</div>

<pre__styleequal""><span_>print</span><span_>_</span><span_>"Hello,_Python!"</span></pre>

<p>We_assume_that_you_have_Python_interpreter_set_in_PATH_variable__Now,_try_to_run_this_program_as_follows_−</p>
<pre__styleequal""><span_>$_python_test</span><span_>_</span><span_>py</span></pre>


<p>This_produces_the_following_result_−</p>
<pre_>Hello,_Python!
</pre>

<p>Let_us_try_another_way_to_execute_a_Python_script__Here_is_the_modified_test_py_file_−</p>
<pre__styleequal""><span_>#!/usr/bin/python</span><span_>

</span><span_>print</span><span_>_</span><span_>"Hello,_Python!"</span></pre>

<p>We_assume_that_you_have_Python_interpreter_available_in_/usr/bin_directory__Now,_try_to_run_this_program_as_follows_−</p>
<pre__styleequal""><span_>$_chmod_</span><span_>_</span><span_>x_test</span><span_>_</span><span_>py_____</span><span_>#_This_is_to_make_file_executable</span><span_>
$</span><span_>_/</span><span_>test</span><span_>_</span><span_>py</span></pre>
<p>This_produces_the_following_result_−</p>
<pre_>Hello,_Python!
</pre>
<h2>Python_Identifiers</h2>
<p>A_Python_identifier_is_a_name_used_to_identify_a_variable,_function,_class,_module_or_other_object__An_identifier_starts_with_a_letter_A_to_Z_or_a_to_z_or_an_underscore_(_)_followed_by_zero_or_more_letters,_underscores_and_digits_(0_to_9)_</p>

<p>Python_does_not_allow_punctuation_characters_such_as_@,_$,_and_%_within_identifiers__Python_is_a_case_sensitive_programming_language__Thus,_<b>Manpower</b>_and_<b>manpower</b>_are_two_different_identifiers_in_Python_</p>

<p>Here_are_naming_conventions_for_Python_identifiers_−</p>
<ul_>
<li><p>Class_names_start_with_an_uppercase_letter__All_other_identifiers_start_with_a_lowercase_letter_</p></li>
<li><p>Starting_an_identifier_with_a_single_leading_underscore_indicates_that_the_identifier_is_private_</p></li>
<li><p>Starting_an_identifier_with_two_leading_underscores_indicates_a_strongly_private_identifier_</p></li>
<li><p>If_the_identifier_also_ends_with_two_trailing_underscores,_the_identifier_is_a_language-defined_special_name_</p></li>
</ul>
<h2>Reserved_Words</h2>

<p>The_following_list_shows_the_Python_keywords__These_are_reserved_words_and_you_cannot_use_them_as_constant_or_variable_or_any_other_identifier_names__All_the_Python_keywords_contain_lowercase_letters_only_</p>
<table__styleequal"text-align:center;">
<tbody><tr>
<td>and</td>
<td>exec</td>
<td>not</td>
</tr>
<tr>
<td>assert</td>
<td>finally</td>
<td>or</td>
</tr>
<tr>
<td>break</td>
<td>for</td>
<td>pass</td>
</tr>
<tr>
<td>class</td>
<td>from</td>
<td>print</td>
</tr>
<tr>
<td>continue</td>
<td>global</td>
<td>raise</td>
</tr>
<tr>
<td>def</td>
<td>if</td>
<td>return</td>
</tr>
<tr>
<td>del</td>
<td>import</td>
<td>try</td>
</tr>
<tr>
<td>elif</td>
<td>in</td>
<td>while</td>
</tr>
<tr>
<td>else</td>
<td>is</td>
<td>with_</td>
</tr>
<tr>
<td>except</td>
<td>lambda</td>
<td>yield</td>
</tr>
</tbody></table>
<h2>Lines_and_Indentation</h2>
<p>Python_provides_no_braces_to_indicate_blocks_of_code_for_class_and_function_definitions_or_flow_control__Blocks_of_code_are_denoted_by_line_indentation,_which_is_rigidly_enforced_</p>
<p>The_number_of_spaces_in_the_indentation_is_variable,_but_all_statements_within_the_block_must_be_indented_the_same_amount__For_example_−</p>


<pre_>if_True:
___print_"True"
else:
___print_"False"
</pre>
<p>However,_the_following_block_generates_an_error_−</p>

<pre__styleequal""><span_>if</span><span_>_</span><span_>True</span><span_>:</span><span_>
</span><span_>print</span><span_>_</span><span_>"Answer"</span><span_>
</span><span_>print</span><span_>_</span><span_>"True"</span><span_>
</span><span_>else</span><span_>:</span><span_>
</span><span_>print</span><span_>_</span><span_>"Answer"</span><span_>
</span><span_>print</span><span_>_</span><span_>"False"</span></pre>

<p>Thus,_in_Python_all_the_continuous_lines_indented_with_same_number_of_spaces_would_form_a_block__The_following_example_has_various_statement_blocks_−</p>

<p><b>Note</b>_−_Do_not_try_to_understand_the_logic_at_this_point_of_time__Just_make_sure_you_understood_various_blocks_even_if_they_are_without_braces_</p>


****get it :<h1>Python_-_Basic_Syntax</h1>
<p>The_Python_language_has_many_similarities_to_Perl,_C,_and_Java__However,_there_are_some_definite_differences_between_the_languages_</p>
<h2>First_Python_Program</h2>
<p>Let_us_execute_programs_in_different_modes_of_programming_</p>
<h3>Interactive_Mode_Programming</h3>
<p>Invoking_the_interpreter_without_passing_a_script_file_as_a_parameter_brings_up_the_following_prompt_−</p>
<pre__styleequal""><span_>$_python
</span><span_>Python</span><span_>_</span><span_>2_4</span><span_>_</span><span_>3</span><span_>_</span><span_>(#</span><span_>1</span><span_>,</span><span_>_</span><span_>Nov</span><span_>_</span><span_>11</span><span_>_</span><span_>2010</span><span_>,</span><span_>_</span><span_>13</span><span_>:</span><span_>34</span><span_>:</span><span_>43</span><span_>)</span><span_>
</span><span_>br31</span><span_>GCC_</span><span_>4_1</span><span_>_</span><span_>2</span><span_>_</span><span_>20080704</span><span_>_</span><span_>(</span><span_>Red</span><span_>_</span><span_>Hat</span><span_>_</span><span_>4_1</span><span_>_</span><span_>2</span><span_>-</span><span_>48</span><span_>)br32</span><span_>_on_linux2
</span><span_>Type</span><span_>_</span><span_>"help"</span><span_>,</span><span_>_</span><span_>"copyright"</span><span_>,</span><span_>_</span><span_>"credits"</span><span_>_</span><span_>or</span><span_>_</span><span_>"license"</span><span_>_</span><span_>for</span><span_>_more_information</span><span_>_</span><span_>
</span><span_>****get it :gt;****get it :gt;</span></pre>
<p>Type_the_following_text_at_the_Python_prompt_and_press_the_Enter_−</p>
<pre__styleequal""><span_>****get it :gt;</span><span_>_</span><span_>print</span><span_>_</span><span_>"Hello,_Python!"</span></pre>
<p>If_you_are_running_new_version_of_Python,_then_you_would_need_to_use_print_statement_with_parenthesis_as_in_<b>print_("Hello,_Python!");</b>__However_in_Python_version_2_4_3,_this_produces_the_following_result_−</p>
<pre_>Hello,_Python!
</pre>

<h3>Script_Mode_Programming</h3>

<p>Invoking_the_interpreter_with_a_script_parameter_begins_execution_of_the_script_and_continues_until_the_script_is_finished__When_the_script_is_finished,_the_interpreter_is_no_longer_active_</p>
<p>Let_us_write_a_simple_Python_program_in_a_script__Python_files_have_extension_<b>_py</b>__Type_the_following_source_code_in_a_test_py_file_−</p>
<div_>
<a_hrefequal"http://tpcg_io/lsYEBf"_targetequal"_blank"_relequal"nofollow"_><i_></i>_Live_Demo</a>
</div>

<pre__styleequal""><span_>print</span><span_>_</span><span_>"Hello,_Python!"</span></pre>

<p>We_assume_that_you_have_Python_interpreter_set_in_PATH_variable__Now,_try_to_run_this_program_as_follows_−</p>
<pre__styleequal""><span_>$_python_test</span><span_>_</span><span_>py</span></pre>


<p>This_produces_the_following_result_−</p>
<pre_>Hello,_Python!
</pre>

<p>Let_us_try_another_way_to_execute_a_Python_script__Here_is_the_modified_test_py_file_−</p>
<pre__styleequal""><span_>#!/usr/bin/python</span><span_>

</span><span_>print</span><span_>_</span><span_>"Hello,_Python!"</span></pre>

<p>We_assume_that_you_have_Python_interpreter_available_in_/usr/bin_directory__Now,_try_to_run_this_program_as_follows_−</p>
<pre__styleequal""><span_>$_chmod_</span><span_>_</span><span_>x_test</span><span_>_</span><span_>py_____</span><span_>#_This_is_to_make_file_executable</span><span_>
$</span><span_>_/</span><span_>test</span><span_>_</span><span_>py</span></pre>
<p>This_produces_the_following_result_−</p>
<pre_>Hello,_Python!
</pre>
<h2>Python_Identifiers</h2>
<p>A_Python_identifier_is_a_name_used_to_identify_a_variable,_function,_class,_module_or_other_object__An_identifier_starts_with_a_letter_A_to_Z_or_a_to_z_or_an_underscore_(_)_followed_by_zero_or_more_letters,_underscores_and_digits_(0_to_9)_</p>

<p>Python_does_not_allow_punctuation_characters_such_as_@,_$,_and_%_within_identifiers__Python_is_a_case_sensitive_programming_language__Thus,_<b>Manpower</b>_and_<b>manpower</b>_are_two_different_identifiers_in_Python_</p>

<p>Here_are_naming_conventions_for_Python_identifiers_−</p>
<ul_>
<li><p>Class_names_start_with_an_uppercase_letter__All_other_identifiers_start_with_a_lowercase_letter_</p></li>
<li><p>Starting_an_identifier_with_a_single_leading_underscore_indicates_that_the_identifier_is_private_</p></li>
<li><p>Starting_an_identifier_with_two_leading_underscores_indicates_a_strongly_private_identifier_</p></li>
<li><p>If_the_identifier_also_ends_with_two_trailing_underscores,_the_identifier_is_a_language-defined_special_name_</p></li>
</ul>
<h2>Reserved_Words</h2>

<p>The_following_list_shows_the_Python_keywords__These_are_reserved_words_and_you_cannot_use_them_as_constant_or_variable_or_any_other_identifier_names__All_the_Python_keywords_contain_lowercase_letters_only_</p>
<table__styleequal"text-align:center;">
<tbody><tr>
<td>and</td>
<td>exec</td>
<td>not</td>
</tr>
<tr>
<td>assert</td>
<td>finally</td>
<td>or</td>
</tr>
<tr>
<td>break</td>
<td>for</td>
<td>pass</td>
</tr>
<tr>
<td>class</td>
<td>from</td>
<td>print</td>
</tr>
<tr>
<td>continue</td>
<td>global</td>
<td>raise</td>
</tr>
<tr>
<td>def</td>
<td>if</td>
<td>return</td>
</tr>
<tr>
<td>del</td>
<td>import</td>
<td>try</td>
</tr>
<tr>
<td>elif</td>
<td>in</td>
<td>while</td>
</tr>
<tr>
<td>else</td>
<td>is</td>
<td>with_</td>
</tr>
<tr>
<td>except</td>
<td>lambda</td>
<td>yield</td>
</tr>
</tbody></table>
<h2>Lines_and_Indentation</h2>
<p>Python_provides_no_braces_to_indicate_blocks_of_code_for_class_and_function_definitions_or_flow_control__Blocks_of_code_are_denoted_by_line_indentation,_which_is_rigidly_enforced_</p>
<p>The_number_of_spaces_in_the_indentation_is_variable,_but_all_statements_within_the_block_must_be_indented_the_same_amount__For_example_−</p>


<pre_>if_True:
___print_"True"
else:
___print_"False"
</pre>
<p>However,_the_following_block_generates_an_error_−</p>

<pre__styleequal""><span_>if</span><span_>_</span><span_>True</span><span_>:</span><span_>
</span><span_>print</span><span_>_</span><span_>"Answer"</span><span_>
</span><span_>print</span><span_>_</span><span_>"True"</span><span_>
</span><span_>else</span><span_>:</span><span_>
</span><span_>print</span><span_>_</span><span_>"Answer"</span><span_>
</span><span_>print</span><span_>_</span><span_>"False"</span></pre>

<p>Thus,_in_Python_all_the_continuous_lines_indented_with_same_number_of_spaces_would_form_a_block__The_following_example_has_various_statement_blocks_−</p>

<p><b>Note</b>_−_Do_not_try_to_understand_the_logic_at_this_point_of_time__Just_make_sure_you_understood_various_blocks_even_if_they_are_without_braces_</p>


****get it :<p>Many_PCs_and_Macs_will_have_python_already_installed_</p>
<p>To_check_if_you_have_python_installed_on_a_Windows_PC,_search_in_the_start_bar_for_Python_or_run_the_following_on_the_Command_Line_(cmd_exe):</p>
<div_>
<div_>
C:\Users\<em>Your_Name</em>****get it :gt;python_--version
</div>
</div>
<p>To_check_if_you_have_python_installed_on_a_Linux_or_Mac,_then_on_linux_open_the_command_line_or_on_Mac_open_the_Terminal_and_type:</p>
<div_>
<div_>
python_--version
</div>
</div>

<p>If_you_find_that_you_do_not_have_python_installed_on_your_computer,_then_you_can_download_it_for_free_from_the_following_website:_<a_hrefequal"https://www_python_org/"_targetequal"_blank">https://www_python_org/</a></p>

<hr>

<h2>Python_Quickstart</h2>
<p>Python_is_an_interpreted_programming_language,_this_means_that_as_a_developer_you_write_Python_(_py)_files_in_a_text_editor_and_then_put_those_files_into_the_python_interpreter_to_be_executed_</p>
<p>The_way_to_run_a_python_file_is_like_this_on_the_command_line:</p>
<div_>
<div_>
C:\Users\<em>Your_Name</em>****get it :gt;python_helloworld_py
</div>
</div>
<p>Where_"helloworld_py"_is_the_name_of_your_python_file_</p>
<p>Let's_write_our_first_Python_file,_called_helloworld_py,_which_can_be_done_in_any_text_editor_</p>
<div_>
<p>helloworld_py</p>
<div_><span__styleequal"color:black">
<span__styleequal"color:mediumblue">print</span>(<span__styleequal"color:brown">"Hello,_World!"</span>)<span__styleequal"color:red">
</span>_</span></div>
<a_targetequal"_blank"__hrefequal"showpython_asp?filenameequaldemo_helloworld">Run_example_»</a>
</div>

<p>Simple_as_that__Save_your_file__Open_your_command_line,_navigate_to_the_directory_where_you_saved_your_file,_and_run:</p>

<div_>
<div_>
C:\Users\<em>Your_Name</em>****get it :gt;python_helloworld_py
</div>
</div>
<p>The_output_should_read:</p>
<div_>
<div_>
Hello,_World!
</div>
</div>
<p>Congratulations,_you_have_written_and_executed_your_first_Python_program_</p>
<hr>
<h2>The_Python_Command_Line</h2>

<p>To_test_a_short_amount_of_code_in_python_sometimes_it_is_quickest_and_easiest_not_to_write_the_code_in_a_file__This_is_made_possible_because_Python_can_be_run_as_a_command_line_itself_</p>
<p>Type_the_following_on_the_Windows,_Mac_or_Linux_command_line:</p>
<div_>
<div_>
C:\Users\<em>Your_Name</em>****get it :gt;python
</div>
</div>


Or,_if_the_"python"_command_did_not_work,_you_can_try_"py":
<div_>
<div_>
C:\Users\<em>Your_Name</em>****get it :gt;py
</div>
</div>
<p>From_there_you_can_write_any_python,_including_our_hello_world_example_from_earlier_in_the_tutorial:</p>
<div_>
<div_>
<span_styleequal"opacity:0_5">C:\Users\<em>Your_Name</em>****get it :gt;python<br>
Python_3_6_4_(v3_6_4:d48eceb,_Dec_19_2017,_06:04:45)_br31MSC_v_1900_32_bit_(Intel)br32_on_win32<br>
Type_"help",_"copyright",_"credits"_or_"license"_for_more_information_</span><br>
****get it :gt;****get it :gt;_print("Hello,_World!")
</div>
</div>
<p>Which_will_write_"Hello,_World!"_in_the_command_line:</p>

<div_>
<div_>
<span_styleequal"opacity:0_5">C:\Users\<em>Your_Name</em>****get it :gt;python<br>
Python_3_6_4_(v3_6_4:d48eceb,_Dec_19_2017,_06:04:45)_br31MSC_v_1900_32_bit_(Intel)br32_on_win32<br>
Type_"help",_"copyright",_"credits"_or_"license"_for_more_information_<br>
****get it :gt;_print("Hello,_World!")</span><br>
Hello,_World!
</div>
</div>
<p>Whenever_you_are_done_in_the_python_command_line,_you_can_simply_type_the_following_to_quit_the_python_command_line_interface:</p>

<div_>
<div_>
exit()
</div>
</div>
****get it :<p>Operators_are_the_constructs_which_can_manipulate_the_value_of_operands_</p>

<p>Consider_the_expression_4___5_equal_9__Here,_4_and_5_are_called_operands_and___is_called_operator_</p>
<p>Consider_the_expression_4___5_equal_9__Here,_4_and_5_are_called_operands_and___is_called_operator_</p>
<p>Python_language_supports_the_following_types_of_operators_</p>
<ul_>
<li>Arithmetic_Operators</li>
<li>Comparison_(Relational)_Operators</li>
<li>Assignment_Operators</li>
<li>Logical_Operators</li>
<li>Bitwise_Operators</li>
<li>Membership_Operators</li>
<li>Identity_Operators</li>
</ul>
<p>Let_us_have_a_look_on_all_operators_one_by_one_</p>
<h2>Python_Arithmetic_Operators</h2>
<p>Assume_variable_a_holds_10_and_variable_b_holds_20,_then_−</p>
<p>br31_<a_hrefequal"/python/arithmetic_operators_example_htm"_altequal"Python_Arithmetic_Operators_Example">Show_Example</a>_br32</p>
<table_>
<tbody><tr>
<th_styleequal"text-align:center;width:10%">Operator</th>
<th_styleequal"text-align:center;width:45%">Description</th>
<th_styleequal"text-align:center;">Example</th>
</tr>
<tr>
<td_>__Addition</td>
<td>Adds_values_on_either_side_of_the_operator_</td>
<td_>a___b_equal_30</td>
</tr>
<tr>
<td_>-_Subtraction</td>
<td>Subtracts_right_hand_operand_from_left_hand_operand_</td>
<td_>a_–_b_equal_-10</td>
</tr>
<tr>
<td_>*_Multiplication</td>
<td>Multiplies_values_on_either_side_of_the_operator</td>
<td_>a_*_b_equal_200</td>
</tr>
<tr>
<td_>/_Division</td>
<td>Divides_left_hand_operand_by_right_hand_operand</td>
<td_>b_/_a_equal_2</td>
</tr>
<tr>
<td_>%_Modulus</td>
<td>Divides_left_hand_operand_by_right_hand_operand_and_returns_remainder</td>
<td_>b_%_a_equal_0</td>
</tr>
<tr>
<td_>**_Exponent</td>
<td>Performs_exponential_(power)_calculation_on_operators</td>
<td_>a**b_equal10_to_the_power_20</td>
</tr>
<tr>
<td_>//</td>
<td>Floor_Division_-_The_division_of_operands_where_the_result_is_the_quotient_in_which_the_digits_after_the_decimal_point_are_removed__But_if_one_of_the_operands_is_negative,_the_result_is_floored,_i_e_,_rounded_away_from_zero_(towards_negative_infinity)_−</td>
<td_>9//2_equal_4_and_9_0//2_0_equal_4_0,_-11//3_equal_-4,_-11_0//3_equal_-4_0</td>
</tr>
</tbody></table>
<h2>Python_Comparison_Operators</h2>
<p>These_operators_compare_the_values_on_either_sides_of_them_and_decide_the_relation_among_them__They_are_also_called_Relational_operators_</p>
<p>Assume_variable_a_holds_10_and_variable_b_holds_20,_then_−</p>
<p>br31_<a_hrefequal"/python/comparison_operators_example_htm"_altequal"Python_Comparison_Operators_Example">Show_Example</a>_br32</p>
<table_>
<tbody><tr>
<th_styleequal"text-align:center;width:10%">Operator</th>
<th_styleequal"text-align:center;width:45%">Description</th>
<th_styleequal"text-align:center;">Example</th>
</tr>
<tr>
<td_>equalequal</td>
<td>If_the_values_of_two_operands_are_equal,_then_the_condition_becomes_true_</td>
<td_>(a_equalequal_b)_is_not_true_</td>
</tr>
<tr>
<td_>!equal</td>
<td>If_values_of_two_operands_are_not_equal,_then_condition_becomes_true_</td>
<td_>(a_!equal_b)_is_true_</td>
</tr>
<tr>
<td_>****get it :lt;****get it :gt;</td>
<td>If_values_of_two_operands_are_not_equal,_then_condition_becomes_true_</td>
<td_>(a_****get it :gt;_b)_is_true__This_is_similar_to_!equal_operator_</td>
</tr>
<tr>
<td_>****get it :gt;</td>
<td>If_the_value_of_left_operand_is_greater_than_the_value_of_right_operand,_then_condition_becomes_true_</td>
<td_>(a_****get it :gt;_b)_is_not_true_</td>
</tr>
<tr>
<td_>****get it :lt;</td>
<td>If_the_value_of_left_operand_is_less_than_the_value_of_right_operand,_then_condition_becomes_true_</td>
<td_>(a_****get it :lt;_b)_is_true_</td>
</tr>
<tr>
<td_>****get it :gt;equal</td>
<td>If_the_value_of_left_operand_is_greater_than_or_equal_to_the_value_of_right_operand,_then_condition_becomes_true_</td>
<td_>(a_****get it :gt;equal_b)_is_not_true_</td>
</tr>
<tr>
<td_>****get it :lt;equal</td>
<td>If_the_value_of_left_operand_is_less_than_or_equal_to_the_value_of_right_operand,_then_condition_becomes_true_</td>
<td_>(a_****get it :lt;equal_b)_is_true_</td>
</tr>
</tbody></table>
<h2>Python_Assignment_Operators</h2>

<p>Assume_variable_a_holds_10_and_variable_b_holds_20,_then_−</p>
<p>br31_<a_hrefequal"/python/assignment_operators_example_htm"_altequal"Python_Assignment_Operators_Example">Show_Example</a>_br32</p>

<table_>
<tbody><tr>
<th_styleequal"text-align:center;width:10%">Operator</th>
<th_styleequal"text-align:center;width:45%">Description</th>
<th_styleequal"text-align:center;">Example</th>
</tr>
<tr>
<td_>equal</td>
<td>Assigns_values_from_right_side_operands_to_left_side_operand</td>
<td_styleequal"vertical-align:middle;">c_equal_a___b_assigns_value_of_a___b_into_c</td>
</tr>
<tr>
<td_>_equal_Add_AND</td>
<td>It_adds_right_operand_to_the_left_operand_and_assign_the_result_to_left_operand</td>
<td_styleequal"vertical-align:middle;">c__equal_a_is_equivalent_to_c_equal_c___a</td>
</tr>
<tr>
<td_>-equal_Subtract_AND</td>
<td>It_subtracts_right_operand_from_the_left_operand_and_assign_the_result_to_left_operand</td>
<td_styleequal"vertical-align:middle;">c_-equal_a_is_equivalent_to_c_equal_c_-_a</td>
</tr>
<tr>
<td_>*equal_Multiply_AND</td>
<td>It_multiplies_right_operand_with_the_left_operand_and_assign_the_result_to_left_operand</td>
<td_styleequal"vertical-align:middle;">c_*equal_a_is_equivalent_to_c_equal_c_*_a</td>
</tr>
<tr>
<td_>/equal_Divide_AND</td>
<td>It_divides_left_operand_with_the_right_operand_and_assign_the_result_to_left_operand</td>
<td_styleequal"vertical-align:middle;">c_/equal_a_is_equivalent_to_c_equal_c_/_a
</td>
</tr>
<tr>
<td_>%equal_Modulus_AND</td>
<td>It_takes_modulus_using_two_operands_and_assign_the_result_to_left_operand</td>
<td_styleequal"vertical-align:middle;">c_%equal_a_is_equivalent_to_c_equal_c_%_a</td>
</tr>
<tr>
<td_>**equal_Exponent_AND</td>
<td>Performs_exponential_(power)_calculation_on_operators_and_assign_value_to_the_left_operand</td>
<td_styleequal"vertical-align:middle;">c_**equal_a_is_equivalent_to_c_equal_c_**_a</td>
</tr>
<tr>
<td_>//equal_Floor_Division</td>
<td>It_performs_floor_division_on_operators_and_assign_value_to_the_left_operand</td>
<td_styleequal"vertical-align:middle;">c_//equal_a_is_equivalent_to_c_equal_c_//_a</td>
</tr>
</tbody></table>

<h2>Python_Bitwise_Operators</h2>
<p>Bitwise_operator_works_on_bits_and_performs_bit_by_bit_operation__Assume_if_a_equal_60;_and_b_equal_13;_Now_in_the_binary_format_their_values_will_be_0011_1100_and_0000_1101_respectively__Following_table_lists_out_the_bitwise_operators_supported_by_Python_language_with_an_example_each_in_those,_we_use_the_above_two_variables_(a_and_b)_as_operands_−</p>


****get it :<div_>
__<p>
____<b>C_programming</b>_is_a_general-purpose,_procedural,_imperative_computer
____programming_language_developed_in_1972_by_Dennis_M__Ritchie_at_the_Bell
____Telephone_Laboratories_to_develop_the_UNIX_operating_system__C_is_the_most
____widely_used_computer_language__It_keeps_fluctuating_at_number_one_scale_of
____popularity_along_with_Java_programming_language,_which_is_also_equally
____popular_and_most_widely_used_among_modern_software_programmers_
__</p>
__<h2>Why_to_Learn_C_Programming?</h2>
__<p>
____<b>C_programming</b>_language_is_a_MUST_for_students_and_working
____professionals_to_become_a_great_Software_Engineer_specially_when_they_are
____working_in_Software_Development_Domain__I_will_list_down_some_of_the_key
____advantages_of_learning_C_Programming:
__</p>
__<ul_>
____<li><p>Easy_to_learn</p></li>
____<li><p>Structured_language</p></li>
____<li><p>It_produces_efficient_programs</p></li>
____<li><p>It_can_handle_low-level_activities</p></li>
____<li><p>It_can_be_compiled_on_a_variety_of_computer_platforms</p></li>
__</ul>
__<h2>Facts_about_C</h2>
__<ul_>
____<li><p>C_was_invented_to_write_an_operating_system_called_UNIX_</p></li>
____<li>
______<p>
________C_is_a_successor_of_B_language_which_was_introduced_around_the_early
________1970s_
______</p>
____</li>
____<li>
______<p>
________The_language_was_formalized_in_1988_by_the_American_National_Standard
________Institute_(ANSI)_
______</p>
____</li>
____<li><p>The_UNIX_OS_was_totally_written_in_C_</p></li>
____<li>
______<p>
________Today_C_is_the_most_widely_used_and_popular_System_Programming_Language_
______</p>
____</li>
____<li>
______<p>
________Most_of_the_state-of-the-art_software_have_been_implemented_using_C_
______</p>
____</li>
____<li>
______<p>
________Today's_most_popular_Linux_OS_and_RDBMS_MySQL_have_been_written_in_C_
______</p>
____</li>
__</ul>
__<h2>Hello_World_using_C_Programming_</h2>
__<p>
____Just_to_give_you_a_little_excitement_about_<b>C_programming</b>,_I'm_going
____to_give_you_a_small_conventional_C_Programming_Hello_World_program,_You_can
____try_it_using_<b>Run_Code</b>_button_
__</b>
</div>
****get it :<div_><h2>Applications_of_C_Programming</h2>
____<p>
______C_was_initially_used_for_system_development_work,_particularly_the_programs
______that_make-up_the_operating_system__C_was_adopted_as_a_system_development
______language_because_it_produces_code_that_runs_nearly_as_fast_as_the_code_written
______in_assembly_language__Some_examples_of_the_use_of_C_are_-
____</p>
____<ul_>
______<li><p>Operating_Systems</p></li>
______<li><p>Language_Compilers</p></li>
______<li><p>Assemblers</p></li>
______<li><p>Text_Editors</p></li>
______<li><p>Print_Spoolers</p></li>
______<li><p>Network_Drivers</p></li>
______<li><p>Modern_Programs</p></li>
______<li><p>Databases</p></li>
______<li><p>Language_Interpreters</p></li>
______<li><p>Utilities</p></li>
____</ul>
____<h2>Audience</h2>
____<p>
______This_tutorial_is_designed_for_software_programmers_with_a_need_to_understand
______the_<b>C_programming</b>_language_starting_from_scratch__This
______<b>C_tutorial</b>_will_give_you_enough_understanding_on_C_programming_language
______from_where_you_can_take_yourself_to_higher_level_of_expertise_
____</p>
____<h2>Prerequisites</h2>
____<p>
______Before_proceeding_with_this_tutorial,_you_should_have_a_basic_understanding_of
______Computer_Programming_terminologies__A_basic_understanding_of_any_of_the
______programming_languages_will_help_you_in_understanding_the
______<b>C_programming</b>_concepts_and_move_fast_on_the_learning_track_
____</p>

____</div>****get it :<div_><h2>Applications_of_C_Programming</h2>
____<p>
______C_was_initially_used_for_system_development_work,_particularly_the_programs
______that_make-up_the_operating_system__C_was_adopted_as_a_system_development
______language_because_it_produces_code_that_runs_nearly_as_fast_as_the_code_written
______in_assembly_language__Some_examples_of_the_use_of_C_are_-
____</p>
____<ul_>
______<li><p>Operating_Systems</p></li>
______<li><p>Language_Compilers</p></li>
______<li><p>Assemblers</p></li>
______<li><p>Text_Editors</p></li>
______<li><p>Print_Spoolers</p></li>
______<li><p>Network_Drivers</p></li>
______<li><p>Modern_Programs</p></li>
______<li><p>Databases</p></li>
______<li><p>Language_Interpreters</p></li>
______<li><p>Utilities</p></li>
____</ul>
____<h2>Audience</h2>
____<p>
______This_tutorial_is_designed_for_software_programmers_with_a_need_to_understand
______the_<b>C_programming</b>_language_starting_from_scratch__This
______<b>C_tutorial</b>_will_give_you_enough_understanding_on_C_programming_language
______from_where_you_can_take_yourself_to_higher_level_of_expertise_
____</p>
____<h2>Prerequisites</h2>
____<p>
______Before_proceeding_with_this_tutorial,_you_should_have_a_basic_understanding_of
______Computer_Programming_terminologies__A_basic_understanding_of_any_of_the
______programming_languages_will_help_you_in_understanding_the
______<b>C_programming</b>_concepts_and_move_fast_on_the_learning_track_
____</p>

____</div>****get it :<div_><h2>Applications_of_C_Programming</h2>
____<p>
______C_was_initially_used_for_system_development_work,_particularly_the_programs
______that_make-up_the_operating_system__C_was_adopted_as_a_system_development
______language_because_it_produces_code_that_runs_nearly_as_fast_as_the_code_written
______in_assembly_language__Some_examples_of_the_use_of_C_are_-
____</p>
____<ul_>
______<li><p>Operating_Systems</p></li>
______<li><p>Language_Compilers</p></li>
______<li><p>Assemblers</p></li>
______<li><p>Text_Editors</p></li>
______<li><p>Print_Spoolers</p></li>
______<li><p>Network_Drivers</p></li>
______<li><p>Modern_Programs</p></li>
______<li><p>Databases</p></li>
______<li><p>Language_Interpreters</p></li>
______<li><p>Utilities</p></li>
____</ul>
____<h2>Audience</h2>
____<p>
______This_tutorial_is_designed_for_software_programmers_with_a_need_to_understand
______the_<b>C_programming</b>_language_starting_from_scratch__This
______<b>C_tutorial</b>_will_give_you_enough_understanding_on_C_programming_language
______from_where_you_can_take_yourself_to_higher_level_of_expertise_
____</p>
____<h2>Prerequisites</h2>
____<p>
______Before_proceeding_with_this_tutorial,_you_should_have_a_basic_understanding_of
______Computer_Programming_terminologies__A_basic_understanding_of_any_of_the
______programming_languages_will_help_you_in_understanding_the
______<b>C_programming</b>_concepts_and_move_fast_on_the_learning_track_
____</p>

____</div>****get it :<p>You_have_seen_the_basic_structure_of_a_C_program,_so_it_will_be_easy_to_understand_other_basic_building_blocks_of_the_C_programming_language_</p>
<h2>Tokens_in_C</h2>
<p>A_C_program_consists_of_various_tokens_and_a_token_is_either_a_keyword,_an_identifier,_a_constant,_a_string_literal,_or_a_symbol__For_example,_the_following_C_statement_consists_of_five_tokens_****get it :minus;</p>
<pre_>
printf("Hello,_World!_\n");
</pre>
<p>The_individual_tokens_are_****get it :minus;</p>
<pre_>
printf
(
___"Hello,_World!_\n"
)
;
</pre>
<h2>Semicolons</h2>
<p>In_a_C_program,_the_semicolon_is_a_statement_terminator__That_is,_each_individual_statement_must_be_ended_with_a_semicolon__It_indicates_the_end_of_one_logical_entity_</p>
<p>Given_below_are_twC_-_Basic_Syntaxo_different_statements_****get it :minus;</p>
<pre_>
printf("Hello,_World!_\n");
return_0;
</pre>
<h2>Comments</h2>
<p>Comments_are_like_helping_text_in_your_C_program_and_they_are_ignored_by_the_compiler__They_start_with_/*_and_terminate_with_the_characters_*/_as_shown_below_****get it :minus;</p>
<pre_>
/*_my_first_program_in_C_*/
</pre>
<p>You_cannot_have_comments_within_comments_and_they_do_not_occur_within_a_string_or_character_literals_</p>
<h2>Identifiers</h2>
<p>A_C_identifier_is_a_name_used_to_identify_a_variable,_function,_or_any_other_user-defined_item__An_identifier_starts_with_a_letter_A_to_Z,_a_to_z,_or_an_underscore_'_'_followed_by_zero_or_more_letters,_underscores,_and_digits_(0_to_9)_</p>
<p>C_does_not_allow_punctuation_characters_such_as_@,_$,_and_%_within_identifiers__C_is_a_<b>case-sensitive</b>_programming_language__Thus,_<i>Manpower</i>_and_<i>manpower</i>_are_two_different_identifiers_in_C__Here_are_some_examples_of_acceptable_identifiers_****get it :minus;</p>
<pre_>
mohd_______zara____abc___move_name__a_123
myname50____temp___j_____a23b9______retVal
</pre>
<h2>Keywords</h2>
<p>The_following_list_shows_the_reserved_words_in_C__These_reserved_words_may_not_be_used_as_constants_or_variables_or_any_other_identifier_names_</p>
<table_styleequal"text-align:center;"_>
<tr>
<td_styleequal"width:25%">auto</td>
<td_styleequal"width:25%">else</td>
<td_styleequal"width:25%">long</td>
<td_styleequal"width:25%">switch</td>
</tr>
<tr>
<td>break</td>
<td>enum</td>
<td>register</td>
<td>typedef</td>
</tr>
<tr>
<td>case</td>
<td>extern</td>
<td>return</td>
<td>union</td>
</tr>
<tr>
<td>char</td>
<td>float</td>
<td>short</td>
<td>unsigned</td>
</tr>
<tr>
<td>const</td>
<td>for</td>
<td>signed</td>
<td>void</td>
</tr>
<tr>
<td>continue</td>
<td>goto</td>
<td>sizeof</td>
<td>volatile</td>
</tr>
<tr>
<td>default</td>
<td>if</td>
<td>static</td>
<td>while</td>
</tr>
<tr>
<td>do</td>
<td>int</td>
<td>struct</td>
<td>_Packed</td>
</tr>
<tr>
<td>double</td>
<td></td>
<td></td>
<td></td>
</tr>
</table>
<h2>Whitespace_in_C</h2>
<p>A_line_containing_only_whitespace,_possibly_with_a_comment,_is_known_as_a_blank_line,_and_a_C_compiler_totally_ignores_it_</p>
<p>Whitespace_is_the_term_used_in_C_to_describe_blanks,_tabs,_newline_characters_and_comments__Whitespace_separates_one_part_of_a_statement_from_another_and_enables_the_compiler_to_identify_where_one_element_in_a_statement,_such_as_int,_ends_and_the_next_element_begins__Therefore,_in_the_following_statement_****get it :minus;</p>
<pre_>
int_age;
</pre>
<p>there_must_be_at_least_one_whitespace_character_(usually_a_space)_between_int_and_age_for_the_compiler_to_be_able_to_distinguish_them__On_the_other_hand,_in_the_following_statement_****get it :minus;</p>
<pre_>
fruit_equal_apples___oranges;___//_get_the_total_fruit
</pre>
<p>no_whitespace_characters_are_necessary_between_fruit_and_equal,_or_between_equal_and_apples,_although_you_are_free_to_include_some_if_you_wish_to_increase_readability_</p>****get it :<p>Constants_refer_to_fixed_values_that_the_program_may_not_alter_during_its_execution__These_fixed_values_are_also_called_<b>literals</b>_</p>
<p>Constants_can_be_of_any_of_the_basic_data_types_like_<i>an_integer_constant,_a_floating_constant,_a_character_constant,_or_a_string_literal</i>__There_are_enumeration_constants_as_well_</p>
<p>Constants_are_treated_just_like_regular_variables_except_that_their_values_cannot_be_modified_after_their_definition_</p>
<h2>Integer_Literals</h2>
<p>An_integer_literal_can_be_a_decimal,_octal,_or_hexadecimal_constant__A_prefix_specifies_the_base_or_radix:_0x_or_0X_for_hexadecimal,_0_for_octal,_and_nothing_for_decimal_</p>
<p>An_integer_literal_can_also_have_a_suffix_that_is_a_combination_of_U_and_L,_for_unsigned_and_long,_respectively__The_suffix_can_be_uppercase_or_lowercase_and_can_be_in_any_order_</p>
<p>Here_are_some_examples_of_integer_literals_****get it :minus;</p>
<pre_>
212_________/*_Legal_*/
215u________/*_Legal_*/
0xFeeL______/*_Legal_*/
078_________/*_Illegal:_8_is_not_an_octal_digit_*/
032UU_______/*_Illegal:_cannot_repeat_a_suffix_*/
</pre>
<p>Following_are_other_examples_of_various_types_of_integer_literals_****get it :minus;</p>
<pre_>
85_________/*_decimal_*/
0213_______/*_octal_*/
0x4b_______/*_hexadecimal_*/
30_________/*_int_*/
30u________/*_unsigned_int_*/
30l________/*_long_*/
30ul_______/*_unsigned_long_*/
</pre>
<h2>Floating-point_Literals</h2>
<p>A_floating-point_literal_has_an_integer_part,_a_decimal_point,_a_fractional_part,_and_an_exponent_part__You_can_represent_floating_point_literals_either_in_decimal_form_or_exponential_form_</p>
<p>While_representing_decimal_form,_you_must_include_the_decimal_point,_the_exponent,_or_both;_and_while_representing_exponential_form,_you_must_include_the_integer_part,_the_fractional_part,_or_both__The_signed_exponent_is_introduced_by_e_or_E_</p>
<p>Here_are_some_examples_of_floating-point_literals_****get it :minus;</p>
<pre_>
3_14159_______/*_Legal_*/
314159E-5L____/*_Legal_*/
510E__________/*_Illegal:_incomplete_exponent_*/
210f__________/*_Illegal:_no_decimal_or_exponent_*/
_e55__________/*_Illegal:_missing_integer_or_fraction_*/
</pre>
<h2>Character_Constants</h2>
<p>Character_literals_are_enclosed_in_single_quotes,_e_g_,_'x'_can_be_stored_in_a_simple_variable_of_<b>char</b>_type_</p>
<p>A_character_literal_can_be_a_plain_character_(e_g_,_'x'),_an_escape_sequence_(e_g_,_'\t'),_or_a_universal_character_(e_g_,_'\u02C0')_</p>
<p>There_are_certain_characters_in_C_that_represent_special_meaning_when_preceded_by_a_backslash_for_example,_newline_(\n)_or_tab_(\t)_</p>
<ul>
<li_>
<input_typeequal"checkbox"_/>
<a_hrefequal"#"_data-toggleequal"dropdown">Here,_you_have_a_list_of_such_escape_sequence_codes_****get it :minus;</a>
<ul_>
<table_styleequal"text-align:center;"_>
<tr>
<th_styleequal"width:35%;text-align:center;">Escape_sequence</th>
<th_styleequal"text-align:center;">Meaning</th>
</tr>
<tr>
<td>\\</td>
<td>\_character</td>
</tr>
<tr>
<td>\'</td>
<td>_'_character</td>
</tr>
<tr>
<td>\"</td>
<td>"_character</td>
</tr>
<tr>
<td>\?</td>
<td>?_character</td>
</tr>
<tr>
<td>\a</td>
<td>Alert_or_bell</td>
</tr>
<tr>
<td>\b</td>
<td>Backspace</td>
</tr>
<tr>
<td>\f</td>
<td>Form_feed</td>
</tr>
<tr>
<td>\n</td>
<td>Newline</td>
</tr>
<tr>
<td>\r</td>
<td>Carriage_return</td>
</tr>
<tr>
<td>\t</td>
<td>Horizontal_tab</td>
</tr>
<tr>
<td>\v</td>
<td>Vertical_tab</td>
</tr>
<tr>
<td>\ooo</td>
<td>Octal_number_of_one_to_three_digits</td>
</tr>
<tr>
<td>\xhh______</td>
<td>Hexadecimal_number_of_one_or_more_digits</td>
</tr>
</table>
</ul>
</li>
</ul>
<p>Following_is_the_example_to_show_a_few_escape_sequence_characters_****get it :minus;</p>
<div_>
<a_hrefequal"http://tpcg_io/psy5Zb"_targetequal"_blank"_relequal"nofollow"_><i_></i>_Live_Demo</a>
</div>
<pre_>
#include_****get it :lt;stdio_h****get it :gt;

int_main()_{
___printf("Hello\tWorld\n\n");

___return_0;
}
</pre>
<p>When_the_above_code_is_compiled_and_executed,_it_produces_the_following_result_****get it :minus;</p>
<pre_>
Hello_World
</pre>
<h2>String_Literals</h2>
<p>String_literals_or_constants_are_enclosed_in_double_quotes_""__A_string_contains_characters_that_are_similar_to_character_literals:_plain_characters,_escape_sequences,_and_universal_characters_</p>
<p>You_can_break_a_long_line_into_multiple_lines_using_string_literals_and_separating_them_using_white_spaces_</p>
<p>Here_are_some_examples_of_string_literals__All_the_three_forms_are_identical_strings_</p>
<pre_>
"hello,_dear"

"hello,_\

dear"

"hello,_"_"d"_"ear"
</pre>
<h2>Defining_Constants</h2>
<p>There_are_two_simple_ways_in_C_to_define_constants_****get it :minus;</p>
<ul_>
<li><p>Using_<b>#define</b>_preprocessor_</p></li>
<li><p>Using_<b>const</b>_keyword_</p></li>
</ul>
<h2>The_#define_Preprocessor</h2>
<p>Given_below_is_the_form_to_use_#define_preprocessor_to_define_a_constant_****get it :minus;</p>
<pre_>
#define_identifier_value
</pre>
<p>The_following_example_explains_it_in_detail_****get it :minus;</p>
<div_>
<a_hrefequal"http://tpcg_io/p8YVAu"_targetequal"_blank"_relequal"nofollow"_><i_></i>_Live_Demo</a>
</div>
<pre_>
#include_****get it :gt;

#define_LENGTH_10___
#define_WIDTH__5
#define_NEWLINE_'\n'

int_main()_{
___int_area;__
__
___area_equal_LENGTH_*_WIDTH;
___printf("value_of_area_:_%d",_area);
___printf("%c",_NEWLINE);

___return_0;
}
</pre>
<p>When_the_above_code_is_compiled_and_executed,_it_produces_the_following_result_****get it :minus;</p>
<pre_>
value_of_area_:_50
</pre>
<h2>The_const_Keyword</h2>
<p>You_can_use_<b>const</b>_prefix_to_declare_constants_with_a_specific_type_as_follows_****get it :minus;</p>
<pre_>
const_type_variable_equal_value;
</pre>
<p>The_following_example_explains_it_in_detail_****get it :minus;</p>
<div_>
<a_hrefequal"http://tpcg_io/PnBPfK"_targetequal"_blank"_relequal"nofollow"_><i_></i>_Live_Demo</a>
</div>
<pre_>
#include_****get it :gt;

int_main()_{
___const_int__LENGTH_equal_10;
___const_int__WIDTH_equal_5;
___const_char_NEWLINE_equal_'\n';
___int_area;__
___
___area_equal_LENGTH_*_WIDTH;
___printf("value_of_area_:_%d",_area);
___printf("%c",_NEWLINE);

___return_0;
}
</pre>
<p>When_the_above_code_is_compiled_and_executed,_it_produces_the_following_result_****get it :minus;</p>
<pre_>
value_of_area_:_50
</pre>
<p>Note_that_it_is_a_good_programming_practice_to_define_constants_in_CAPITALS_</p>****get it :<p>Constants_refer_to_fixed_values_that_the_program_may_not_alter_during_its_execution__These_fixed_values_are_also_called_<b>literals</b>_</p>
<p>Constants_can_be_of_any_of_the_basic_data_types_like_<i>an_integer_constant,_a_floating_constant,_a_character_constant,_or_a_string_literal</i>__There_are_enumeration_constants_as_well_</p>
<p>Constants_are_treated_just_like_regular_variables_except_that_their_values_cannot_be_modified_after_their_definition_</p>
<h2>Integer_Literals</h2>
<p>An_integer_literal_can_be_a_decimal,_octal,_or_hexadecimal_constant__A_prefix_specifies_the_base_or_radix:_0x_or_0X_for_hexadecimal,_0_for_octal,_and_nothing_for_decimal_</p>
<p>An_integer_literal_can_also_have_a_suffix_that_is_a_combination_of_U_and_L,_for_unsigned_and_long,_respectively__The_suffix_can_be_uppercase_or_lowercase_and_can_be_in_any_order_</p>
<p>Here_are_some_examples_of_integer_literals_****get it :minus;</p>
<pre_>
212_________/*_Legal_*/
215u________/*_Legal_*/
0xFeeL______/*_Legal_*/
078_________/*_Illegal:_8_is_not_an_octal_digit_*/
032UU_______/*_Illegal:_cannot_repeat_a_suffix_*/
</pre>
<p>Following_are_other_examples_of_various_types_of_integer_literals_****get it :minus;</p>
<pre_>
85_________/*_decimal_*/
0213_______/*_octal_*/
0x4b_______/*_hexadecimal_*/
30_________/*_int_*/
30u________/*_unsigned_int_*/
30l________/*_long_*/
30ul_______/*_unsigned_long_*/
</pre>
<h2>Floating-point_Literals</h2>
<p>A_floating-point_literal_has_an_integer_part,_a_decimal_point,_a_fractional_part,_and_an_exponent_part__You_can_represent_floating_point_literals_either_in_decimal_form_or_exponential_form_</p>
<p>While_representing_decimal_form,_you_must_include_the_decimal_point,_the_exponent,_or_both;_and_while_representing_exponential_form,_you_must_include_the_integer_part,_the_fractional_part,_or_both__The_signed_exponent_is_introduced_by_e_or_E_</p>
<p>Here_are_some_examples_of_floating-point_literals_****get it :minus;</p>
<pre_>
3_14159_______/*_Legal_*/
314159E-5L____/*_Legal_*/
510E__________/*_Illegal:_incomplete_exponent_*/
210f__________/*_Illegal:_no_decimal_or_exponent_*/
_e55__________/*_Illegal:_missing_integer_or_fraction_*/
</pre>
<h2>Character_Constants</h2>
<p>Character_literals_are_enclosed_in_single_quotes,_e_g_,_'x'_can_be_stored_in_a_simple_variable_of_<b>char</b>_type_</p>
<p>A_character_literal_can_be_a_plain_character_(e_g_,_'x'),_an_escape_sequence_(e_g_,_'\t'),_or_a_universal_character_(e_g_,_'\u02C0')_</p>
<p>There_are_certain_characters_in_C_that_represent_special_meaning_when_preceded_by_a_backslash_for_example,_newline_(\n)_or_tab_(\t)_</p>
<ul>
<li_>
<input_typeequal"checkbox"_/>
<a_hrefequal"#"_data-toggleequal"dropdown">Here,_you_have_a_list_of_such_escape_sequence_codes_****get it :minus;</a>
<ul_>
<table_styleequal"text-align:center;"_>
<tr>
<th_styleequal"width:35%;text-align:center;">Escape_sequence</th>
<th_styleequal"text-align:center;">Meaning</th>
</tr>
<tr>
<td>\\</td>
<td>\_character</td>
</tr>
<tr>
<td>\'</td>
<td>_'_character</td>
</tr>
<tr>
<td>\"</td>
<td>"_character</td>
</tr>
<tr>
<td>\?</td>
<td>?_character</td>
</tr>
<tr>
<td>\a</td>
<td>Alert_or_bell</td>
</tr>
<tr>
<td>\b</td>
<td>Backspace</td>
</tr>
<tr>
<td>\f</td>
<td>Form_feed</td>
</tr>
<tr>
<td>\n</td>
<td>Newline</td>
</tr>
<tr>
<td>\r</td>
<td>Carriage_return</td>
</tr>
<tr>
<td>\t</td>
<td>Horizontal_tab</td>
</tr>
<tr>
<td>\v</td>
<td>Vertical_tab</td>
</tr>
<tr>
<td>\ooo</td>
<td>Octal_number_of_one_to_three_digits</td>
</tr>
<tr>
<td>\xhh______</td>
<td>Hexadecimal_number_of_one_or_more_digits</td>
</tr>
</table>
</ul>
</li>
</ul>
<p>Following_is_the_example_to_show_a_few_escape_sequence_characters_****get it :minus;</p>
<div_>
<a_hrefequal"http://tpcg_io/psy5Zb"_targetequal"_blank"_relequal"nofollow"_><i_></i>_Live_Demo</a>
</div>
<pre_>
#include_****get it :lt;stdio_h****get it :gt;

int_main()_{
___printf("Hello\tWorld\n\n");

___return_0;
}
</pre>
<p>When_the_above_code_is_compiled_and_executed,_it_produces_the_following_result_****get it :minus;</p>
<pre_>
Hello_World
</pre>
<h2>String_Literals</h2>
<p>String_literals_or_constants_are_enclosed_in_double_quotes_""__A_string_contains_characters_that_are_similar_to_character_literals:_plain_characters,_escape_sequences,_and_universal_characters_</p>
<p>You_can_break_a_long_line_into_multiple_lines_using_string_literals_and_separating_them_using_white_spaces_</p>
<p>Here_are_some_examples_of_string_literals__All_the_three_forms_are_identical_strings_</p>
<pre_>
"hello,_dear"

"hello,_\

dear"

"hello,_"_"d"_"ear"
</pre>
<h2>Defining_Constants</h2>
<p>There_are_two_simple_ways_in_C_to_define_constants_****get it :minus;</p>
<ul_>
<li><p>Using_<b>#define</b>_preprocessor_</p></li>
<li><p>Using_<b>const</b>_keyword_</p></li>
</ul>
<h2>The_#define_Preprocessor</h2>
<p>Given_below_is_the_form_to_use_#define_preprocessor_to_define_a_constant_****get it :minus;</p>
<pre_>
#define_identifier_value
</pre>
<p>The_following_example_explains_it_in_detail_****get it :minus;</p>
<div_>
<a_hrefequal"http://tpcg_io/p8YVAu"_targetequal"_blank"_relequal"nofollow"_><i_></i>_Live_Demo</a>
</div>
<pre_>
#include_****get it :gt;

#define_LENGTH_10___
#define_WIDTH__5
#define_NEWLINE_'\n'

int_main()_{
___int_area;__
__
___area_equal_LENGTH_*_WIDTH;
___printf("value_of_area_:_%d",_area);
___printf("%c",_NEWLINE);

___return_0;
}
</pre>
<p>When_the_above_code_is_compiled_and_executed,_it_produces_the_following_result_****get it :minus;</p>
<pre_>
value_of_area_:_50
</pre>
<h2>The_const_Keyword</h2>
<p>You_can_use_<b>const</b>_prefix_to_declare_constants_with_a_specific_type_as_follows_****get it :minus;</p>
<pre_>
const_type_variable_equal_value;
</pre>
<p>The_following_example_explains_it_in_detail_****get it :minus;</p>
<div_>
<a_hrefequal"http://tpcg_io/PnBPfK"_targetequal"_blank"_relequal"nofollow"_><i_></i>_Live_Demo</a>
</div>
<pre_>
#include_****get it :gt;

int_main()_{
___const_int__LENGTH_equal_10;
___const_int__WIDTH_equal_5;
___const_char_NEWLINE_equal_'\n';
___int_area;__
___
___area_equal_LENGTH_*_WIDTH;
___printf("value_of_area_:_%d",_area);
___printf("%c",_NEWLINE);

___return_0;
}
</pre>
<p>When_the_above_code_is_compiled_and_executed,_it_produces_the_following_result_****get it :minus;</p>
<pre_>
value_of_area_:_50
</pre>
<p>Note_that_it_is_a_good_programming_practice_to_define_constants_in_CAPITALS_</p>****get it :<p>Constants_refer_to_fixed_values_that_the_program_may_not_alter_during_its_execution__These_fixed_values_are_also_called_<b>literals</b>_</p>
<p>Constants_can_be_of_any_of_the_basic_data_types_like_<i>an_integer_constant,_a_floating_constant,_a_character_constant,_or_a_string_literal</i>__There_are_enumeration_constants_as_well_</p>
<p>Constants_are_treated_just_like_regular_variables_except_that_their_values_cannot_be_modified_after_their_definition_</p>
<h2>Integer_Literals</h2>
<p>An_integer_literal_can_be_a_decimal,_octal,_or_hexadecimal_constant__A_prefix_specifies_the_base_or_radix:_0x_or_0X_for_hexadecimal,_0_for_octal,_and_nothing_for_decimal_</p>
<p>An_integer_literal_can_also_have_a_suffix_that_is_a_combination_of_U_and_L,_for_unsigned_and_long,_respectively__The_suffix_can_be_uppercase_or_lowercase_and_can_be_in_any_order_</p>
<p>Here_are_some_examples_of_integer_literals_****get it :minus;</p>
<pre_>
212_________/*_Legal_*/
215u________/*_Legal_*/
0xFeeL______/*_Legal_*/
078_________/*_Illegal:_8_is_not_an_octal_digit_*/
032UU_______/*_Illegal:_cannot_repeat_a_suffix_*/
</pre>
<p>Following_are_other_examples_of_various_types_of_integer_literals_****get it :minus;</p>
<pre_>
85_________/*_decimal_*/
0213_______/*_octal_*/
0x4b_______/*_hexadecimal_*/
30_________/*_int_*/
30u________/*_unsigned_int_*/
30l________/*_long_*/
30ul_______/*_unsigned_long_*/
</pre>
<h2>Floating-point_Literals</h2>
<p>A_floating-point_literal_has_an_integer_part,_a_decimal_point,_a_fractional_part,_and_an_exponent_part__You_can_represent_floating_point_literals_either_in_decimal_form_or_exponential_form_</p>
<p>While_representing_decimal_form,_you_must_include_the_decimal_point,_the_exponent,_or_both;_and_while_representing_exponential_form,_you_must_include_the_integer_part,_the_fractional_part,_or_both__The_signed_exponent_is_introduced_by_e_or_E_</p>
<p>Here_are_some_examples_of_floating-point_literals_****get it :minus;</p>
<pre_>
3_14159_______/*_Legal_*/
314159E-5L____/*_Legal_*/
510E__________/*_Illegal:_incomplete_exponent_*/
210f__________/*_Illegal:_no_decimal_or_exponent_*/
_e55__________/*_Illegal:_missing_integer_or_fraction_*/
</pre>
<h2>Character_Constants</h2>
<p>Character_literals_are_enclosed_in_single_quotes,_e_g_,_'x'_can_be_stored_in_a_simple_variable_of_<b>char</b>_type_</p>
<p>A_character_literal_can_be_a_plain_character_(e_g_,_'x'),_an_escape_sequence_(e_g_,_'\t'),_or_a_universal_character_(e_g_,_'\u02C0')_</p>
<p>There_are_certain_characters_in_C_that_represent_special_meaning_when_preceded_by_a_backslash_for_example,_newline_(\n)_or_tab_(\t)_</p>
<ul>
<li_>
<input_typeequal"checkbox"_/>
<a_hrefequal"#"_data-toggleequal"dropdown">Here,_you_have_a_list_of_such_escape_sequence_codes_****get it :minus;</a>
<ul_>
<table_styleequal"text-align:center;"_>
<tr>
<th_styleequal"width:35%;text-align:center;">Escape_sequence</th>
<th_styleequal"text-align:center;">Meaning</th>
</tr>
<tr>
<td>\\</td>
<td>\_character</td>
</tr>
<tr>
<td>\'</td>
<td>_'_character</td>
</tr>
<tr>
<td>\"</td>
<td>"_character</td>
</tr>
<tr>
<td>\?</td>
<td>?_character</td>
</tr>
<tr>
<td>\a</td>
<td>Alert_or_bell</td>
</tr>
<tr>
<td>\b</td>
<td>Backspace</td>
</tr>
<tr>
<td>\f</td>
<td>Form_feed</td>
</tr>
<tr>
<td>\n</td>
<td>Newline</td>
</tr>
<tr>
<td>\r</td>
<td>Carriage_return</td>
</tr>
<tr>
<td>\t</td>
<td>Horizontal_tab</td>
</tr>
<tr>
<td>\v</td>
<td>Vertical_tab</td>
</tr>
<tr>
<td>\ooo</td>
<td>Octal_number_of_one_to_three_digits</td>
</tr>
<tr>
<td>\xhh______</td>
<td>Hexadecimal_number_of_one_or_more_digits</td>
</tr>
</table>
</ul>
</li>
</ul>
<p>Following_is_the_example_to_show_a_few_escape_sequence_characters_****get it :minus;</p>
<div_>
<a_hrefequal"http://tpcg_io/psy5Zb"_targetequal"_blank"_relequal"nofollow"_><i_></i>_Live_Demo</a>
</div>
<pre_>
#include_****get it :lt;stdio_h****get it :gt;

int_main()_{
___printf("Hello\tWorld\n\n");

___return_0;
}
</pre>
<p>When_the_above_code_is_compiled_and_executed,_it_produces_the_following_result_****get it :minus;</p>
<pre_>
Hello_World
</pre>
<h2>String_Literals</h2>
<p>String_literals_or_constants_are_enclosed_in_double_quotes_""__A_string_contains_characters_that_are_similar_to_character_literals:_plain_characters,_escape_sequences,_and_universal_characters_</p>
<p>You_can_break_a_long_line_into_multiple_lines_using_string_literals_and_separating_them_using_white_spaces_</p>
<p>Here_are_some_examples_of_string_literals__All_the_three_forms_are_identical_strings_</p>
<pre_>
"hello,_dear"

"hello,_\

dear"

"hello,_"_"d"_"ear"
</pre>
<h2>Defining_Constants</h2>
<p>There_are_two_simple_ways_in_C_to_define_constants_****get it :minus;</p>
<ul_>
<li><p>Using_<b>#define</b>_preprocessor_</p></li>
<li><p>Using_<b>const</b>_keyword_</p></li>
</ul>
<h2>The_#define_Preprocessor</h2>
<p>Given_below_is_the_form_to_use_#define_preprocessor_to_define_a_constant_****get it :minus;</p>
<pre_>
#define_identifier_value
</pre>
<p>The_following_example_explains_it_in_detail_****get it :minus;</p>
<div_>
<a_hrefequal"http://tpcg_io/p8YVAu"_targetequal"_blank"_relequal"nofollow"_><i_></i>_Live_Demo</a>
</div>
<pre_>
#include_****get it :gt;

#define_LENGTH_10___
#define_WIDTH__5
#define_NEWLINE_'\n'

int_main()_{
___int_area;__
__
___area_equal_LENGTH_*_WIDTH;
___printf("value_of_area_:_%d",_area);
___printf("%c",_NEWLINE);

___return_0;
}
</pre>
<p>When_the_above_code_is_compiled_and_executed,_it_produces_the_following_result_****get it :minus;</p>
<pre_>
value_of_area_:_50
</pre>
<h2>The_const_Keyword</h2>
<p>You_can_use_<b>const</b>_prefix_to_declare_constants_with_a_specific_type_as_follows_****get it :minus;</p>
<pre_>
const_type_variable_equal_value;
</pre>
<p>The_following_example_explains_it_in_detail_****get it :minus;</p>
<div_>
<a_hrefequal"http://tpcg_io/PnBPfK"_targetequal"_blank"_relequal"nofollow"_><i_></i>_Live_Demo</a>
</div>
<pre_>
#include_****get it :gt;

int_main()_{
___const_int__LENGTH_equal_10;
___const_int__WIDTH_equal_5;
___const_char_NEWLINE_equal_'\n';
___int_area;__
___
___area_equal_LENGTH_*_WIDTH;
___printf("value_of_area_:_%d",_area);
___printf("%c",_NEWLINE);

___return_0;
}
</pre>
<p>When_the_above_code_is_compiled_and_executed,_it_produces_the_following_result_****get it :minus;</p>
<pre_>
value_of_area_:_50
</pre>
<p>Note_that_it_is_a_good_programming_practice_to_define_constants_in_CAPITALS_</p>****get it :<p>Data_types_in_c_refer_to_an_extensive_system_used_for_declaring_variables_or_functions_of_different_types__The_type_of_a_variable_determines_how_much_space_it_occupies_in_storage_and_how_the_bit_pattern_stored_is_interpreted_</p>
<p>The_types_in_C_can_be_classified_as_follows_****get it :minus;</p>
<table_>
<tr>
<th_styleequal"text-align:center;">Sr_No_</th>
<th_styleequal"text-align:center;">Types_****get it :amp;_Description</th>
</tr>
<tr>
<td_>1</td>
<td><p><b>Basic_Types</b></p>
<p>They_are_arithmetic_types_and_are_further_classified_into:_(a)_integer_types_and_(b)_floating-point_types_</p>
</td>
</tr>
<tr>
<td_>2</td>
<td><p><b>Enumerated_types</b></p>
<p>They_are_again_arithmetic_types_and_they_are_used_to_define_variables_that_can_only_assign_certain_discrete_integer_values_throughout_the_program_</p>
</td>
</tr>
<tr>
<td_>3</td>
<td><p><b>The_type_void</b></p>
<p>The_type_specifier_<i>void</i>_indicates_that_no_value_is_available_</p>
</td>
</tr>
<tr>
<td_>4</td>
<td><p><b>Derived_types</b></p>
<p>They_include_(a)_Pointer_types,_(b)_Array_types,_(c)_Structure_types,_(d)_Union_types_and_(e)_Function_types_</p>
</td>
</tr>
</table>
<p>The_array_types_and_structure_types_are_referred_collectively_as_the_aggregate_types__The_type_of_a_function_specifies_the_type_of_the_function's_return_value__We_will_see_the_basic_types_in_the_following_section,_where_as_other_types_will_be_covered_in_the_upcoming_chapters_</p>
<h2>Integer_Types</h2>
<p>The_following_table_provides_the_details_of_standard_integer_types_with_their_storage_sizes_and_value_ranges_****get it :minus;</p>
<table_styleequal"text-align:center;"_>
<tr>
<th_styleequal"width:23%;text-align:center;">Type</th>
<th_styleequal"width:20%;text-align:center;">Storage_size</th>
<th_styleequal"text-align:center;">Value_range</th>
</tr>
<tr>
<td>char</td>
<td>1_byte</td>
<td>-128_to_127_or_0_to_255</td>
</tr>
<tr>
<td>unsigned_char</td>
<td>1_byte</td>
<td>0_to_255</td>
</tr>
<tr>
<td>signed_char</td>
<td>1_byte</td>
<td>-128_to_127</td>
</tr>
<tr>
<td_styleequal"vertical-align:middle;">int</td>
<td_styleequal"vertical-align:middle;">2_or_4_bytes</td>
<td>-32,768_to_32,767_or_-2,147,483,648_to_2,147,483,647</td>
</tr>
<tr>
<td>unsigned_int</td>
<td>2_or_4_bytes</td>
<td>0_to_65,535_or_0_to_4,294,967,295</td>
</tr>
<tr>
<td>short</td>
<td>2_bytes</td>
<td>-32,768_to_32,767</td>
</tr>
<tr>
<td>unsigned_short</td>
<td>2_bytes</td>
<td>0_to_65,535</td>
</tr>
<tr>
<td>long</td>
<td>8_bytes</td>
<td>-9223372036854775808_to_9223372036854775807</td>
</tr>
<tr>
<td>unsigned_long</td>
<td>8_bytes</td>
<td>0_to_18446744073709551615</td>
</tr>
</table>
<p>To_get_the_exact_size_of_a_type_or_a_variable_on_a_particular_platform,_you_can_use_the_<b>sizeof</b>_operator__The_expressions_<i>sizeof(type)</i>_yields_the_storage_size_of_the_object_or_type_in_bytes__Given_below_is_an_example_to_get_the_size_of_various_type_on_a_machine_using_different_constant_defined_in_limits_h_header_file_****get it :minus;</p>
<div_>
<a_hrefequal"http://tpcg_io/FnrxP5"_targetequal"_blank"_relequal"nofollow"_><i_></i>_Live_Demo</a>
</div>
<pre_>
#include_****get it :lt;stdio_h****get it :gt;
#include_****get it :lt;stdlib_h****get it :lt;limits_h****get it :lt;float_h****get it :gt;

int_main(int_argc,_char**_argv)_{

____printf("CHAR_BIT____:___%d\n",_CHAR_BIT);
____printf("CHAR_MAX____:___%d\n",_CHAR_MAX);
____printf("CHAR_MIN____:___%d\n",_CHAR_MIN);
____printf("INT_MAX_____:___%d\n",_INT_MAX);
____printf("INT_MIN_____:___%d\n",_INT_MIN);
____printf("LONG_MAX____:___%ld\n",_(long)_LONG_MAX);
____printf("LONG_MIN____:___%ld\n",_(long)_LONG_MIN);
____printf("SCHAR_MAX___:___%d\n",_SCHAR_MAX);
____printf("SCHAR_MIN___:___%d\n",_SCHAR_MIN);
____printf("SHRT_MAX____:___%d\n",_SHRT_MAX);
____printf("SHRT_MIN____:___%d\n",_SHRT_MIN);
____printf("UCHAR_MAX___:___%d\n",_UCHAR_MAX);
____printf("UINT_MAX____:___%u\n",_(unsigned_int)_UINT_MAX);
____printf("ULONG_MAX___:___%lu\n",_(unsigned_long)_ULONG_MAX);
____printf("USHRT_MAX___:___%d\n",_(unsigned_short)_USHRT_MAX);

____return_0;
}
</pre>
<p>When_you_compile_and_execute_the_above_program,_it_produces_the_following_result_on_Linux_****get it :minus;</p>
<pre_>
CHAR_BIT____:___8
CHAR_MAX____:___127
CHAR_MIN____:___-128
INT_MAX_____:___2147483647
INT_MIN_____:___-2147483648
LONG_MAX____:___9223372036854775807
LONG_MIN____:___-9223372036854775808
SCHAR_MAX___:___127
SCHAR_MIN___:___-128
SHRT_MAX____:___32767
SHRT_MIN____:___-32768
UCHAR_MAX___:___255
UINT_MAX____:___4294967295
ULONG_MAX___:___18446744073709551615
USHRT_MAX___:___65535
</pre>
<h2>Floating-Point_Types</h2>
<p>The_following_table_provide_the_details_of_standard_floating-point_types_with_storage_sizes_and_value_ranges_and_their_precision_****get it :minus;</p>
<table_styleequal"text-align:center;"_>
<tr>
<th_styleequal"text-align:center;">Type</th>
<th_styleequal"text-align:center;">Storage_size</th>
<th_styleequal"text-align:center;">Value_range</th>
<th_styleequal"text-align:center;">Precision</th>
</tr>
<tr>
<td>float</td>
<td>4_byte</td>
<td>1_2E-38_to_3_4E_38</td>
<td>6_decimal_places</td>
</tr>
<tr>
<td>double</td>
<td>8_byte</td>
<td>2_3E-308_to_1_7E_308</td>
<td>15_decimal_places</td>
</tr>
<tr>
<td>long_double</td>
<td>10_byte</td>
<td>3_4E-4932_to_1_1E_4932</td>
<td>19_decimal_places</td>
</tr>
</table>
<p>The_header_file_float_h_defines_macros_that_allow_you_to_use_these_values_and_other_details_about_the_binary_representation_of_real_numbers_in_your_programs__The_following_example_prints_the_storage_space_taken_by_a_float_type_and_its_range_values_****get it :minus;</p>
<div_>
<a_hrefequal"http://tpcg_io/mynMA1"_targetequal"_blank"_relequal"nofollow"_><i_></i>_Live_Demo</a>
</div>
<pre_>
#include_****get it :gt;

int_main(int_argc,_char**_argv)_{

____printf("Storage_size_for_float_:_%d_\n",_sizeof(float));
____printf("FLT_MAX_____:___%g\n",_(float)_FLT_MAX);
____printf("FLT_MIN_____:___%g\n",_(float)_FLT_MIN);
____printf("-FLT_MAX____:___%g\n",_(float)_-FLT_MAX);
____printf("-FLT_MIN____:___%g\n",_(float)_-FLT_MIN);
____printf("DBL_MAX_____:___%g\n",_(double)_DBL_MAX);
____printf("DBL_MIN_____:___%g\n",_(double)_DBL_MIN);
____printf("-DBL_MAX_____:__%g\n",_(double)_-DBL_MAX);
____printf("Precision_value:_%d\n",_FLT_DIG_);

____return_0;
}
</pre>
<p>When_you_compile_and_execute_the_above_program,_it_produces_the_following_result_on_Linux_****get it :minus;</p>
<pre_>
Storage_size_for_float_:_4_
FLT_MAX______:___3_40282e_38
FLT_MIN______:___1_17549e-38
-FLT_MAX_____:___-3_40282e_38
-FLT_MIN_____:___-1_17549e-38
DBL_MAX______:___1_79769e_308
DBL_MIN______:___2_22507e-308
-DBL_MAX_____:__-1_79769e_308
Precision_value:_6
</pre>
<h2>The_void_Type</h2>
<p>The_void_type_specifies_that_no_value_is_available__It_is_used_in_three_kinds_of_situations_****get it :amp;_Description</th>
</tr>
<tr>
<td_>1</td>
<td><p><b>Function_returns_as_void</b></p>
<p>There_are_various_functions_in_C_which_do_not_return_any_value_or_you_can_say_they_return_void__A_function_with_no_return_value_has_the_return_type_as_void__For_example,_<b>void_exit_(int_status);</b></p>
</td>
</tr>
<tr>
<td_>2</td>
<td><p><b>Function_arguments_as_void</b></p>
<p>There_are_various_functions_in_C_which_do_not_accept_any_parameter__A_function_with_no_parameter_can_accept_a_void__For_example,_<b>int_rand(void);</b></p>
</td>
</tr>
<tr>
<td_>3</td>
<td><p><b>Pointers_to_void</b></p>
<p>A_pointer_of_type_void_*_represents_the_address_of_an_object,_but_not_its_type__For_example,_a_memory_allocation_function_<b>void_*malloc(_size_t_size_);</b>_returns_a_pointer_to_void_which_can_be_casted_to_any_data_type_</p>****get it :<div_><p>If_you_want_to_set_up_your_environment_for_C_programming_language,_you_need_the_following_two_software_tools_available_on_your_computer,_(a)_Text_Editor_and_(b)_The_C_Compiler_</p>
<h2>Text_Editor</h2>
<p>This_will_be_used_to_type_your_program__Examples_of_few_a_editors_include_Windows_Notepad,_OS_Edit_command,_Brief,_Epsilon,_EMACS,_and_vim_or_vi_</p>
<p>The_name_and_version_of_text_editors_can_vary_on_different_operating_systems__For_example,_Notepad_will_be_used_on_Windows,_and_vim_or_vi_can_be_used_on_windows_as_well_as_on_Linux_or_UNIX_</p>
<p>The_files_you_create_with_your_editor_are_called_the_source_files_and_they_contain_the_program_source_codes__The_source_files_for_C_programs_are_typically_named_with_the_extension_"<b>_c</b>"_</p>
<p>Before_starting_your_programming,_make_sure_you_have_one_text_editor_in_place_and_you_have_enough_experience_to_write_a_computer_program,_save_it_in_a_file,_compile_it_and_finally_execute_it_</p>
<h2>The_C_Compiler</h2>
<p>The_source_code_written_in_source_file_is_the_human_readable_source_for_your_program__It_needs_to_be_"compiled",_into_machine_language_so_that_your_CPU_can_actually_execute_the_program_as_per_the_instructions_given_</p>
<p>The_compiler_compiles_the_source_codes_into_final_executable_programs__The_most_frequently_used_and_free_available_compiler_is_the_GNU_C/C___compiler,_otherwise_you_can_have_compilers_either_from_HP_or_Solaris_if_you_have_the_respective_operating_systems_</p>
<p>The_following_section_explains_how_to_install_GNU_C/C___compiler_on_various_OS__We_keep_mentioning_C/C___together_because_GNU_gcc_compiler_works_for_both_C_and_C___programming_languages_</p>
<h2>Installation_on_UNIX/Linux</h2>
<p>If_you_are_using_<b>Linux_or_UNIX</b>,_then_check_whether_GCC_is_installed_on_your_system_by_entering_the_following_command_from_the_command_line_****get it :minus;</p>
<pre_>
$_gcc_-v
</pre>
<p>If_you_have_GNU_compiler_installed_on_your_machine,_then_it_should_print_a_message_as_follows_****get it :minus;</p>
<pre_>
Using_built-in_specs_
Target:_i386-redhat-linux
Configured_with:___/configure_--prefixequal/usr________
Thread_model:_posix
gcc_version_4_1_2_20080704_(Red_Hat_4_1_2-46)
</pre>
<p>If_GCC_is_not_installed,_then_you_will_have_to_install_it_yourself_using_the_detailed_instructions_available_at_<a_hrefequal"https://gcc_gnu_org/install/"_relequal"nofollow"_targetequal"_blank">https://gcc_gnu_org/install/</a></p>
<p>This_tutorial_has_been_written_based_on_Linux_and_all_the_given_examples_have_been_compiled_on_the_Cent_OS_flavor_of_the_Linux_system_</p>
<h2>Installation_on_Mac_OS</h2>
<p>If_you_use_Mac_OS_X,_the_easiest_way_to_obtain_GCC_is_to_download_the_Xcode_development_environment_from_Apple's_web_site_and_follow_the_simple_installation_instructions__Once_you_have_Xcode_setup,_you_will_be_able_to_use_GNU_compiler_for_C/C___</p>
<p>Xcode_is_currently_available_at_<a_hrefequal"https://developer_apple_com/technologies/tools/"_relequal"nofollow"_targetequal"_blank">developer_apple_com/technologies/tools/</a>_</p>
<h2>Installation_on_Windows</h2>
<p>To_install_GCC_on_Windows,_you_need_to_install_MinGW__To_install_MinGW,_go_to_the_MinGW_homepage,_<a_hrefequal"http://www_mingw_org/"_relequal"nofollow"_targetequal"_blank">_www_mingw_org</a>,_and_follow_the_link_to_the_MinGW_download_page__Download_the_latest_version_of_the_MinGW_installation_program,_which_should_be_named_MinGW-****get it :lt;version****get it :gt;_exe_</p>
<p>While_installing_Min_GW,_at_a_minimum,_you_must_install_gcc-core,_gcc-g__,_binutils,_and_the_MinGW_runtime,_but_you_may_wish_to_install_more_</p>
<p>Add_the_bin_subdirectory_of_your_MinGW_installation_to_your_<b>PATH</b>_environment_variable,_so_that_you_can_specify_these_tools_on_the_command_line_by_their_simple_names_</p>
<p>After_the_installation_is_complete,_you_will_be_able_to_run_gcc,_g__,_ar,_ranlib,_dlltool,_and_several_other_GNU_tools_from_the_Windows_command_line_</p>
</div>****get it :<p>A_function_is_a_group_of_statements_that_together_perform_a_task__Every_C_program_has_at_least_one_function,_which_is_<b>main()</b>,_and_all_the_most_trivial_programs_can_define_additional_functions_</p>
<p>You_can_divide_up_your_code_into_separate_functions__How_you_divide_up_your_code_among_different_functions_is_up_to_you,_but_logically_the_division_is_such_that_each_function_performs_a_specific_task_</p>
<p>A_function_<b>declaration</b>_tells_the_compiler_about_a_function's_name,_return_type,_and_parameters__A_function_<b>definition</b>_provides_the_actual_body_of_the_function_</p>
<p>The_C_standard_library_provides_numerous_built-in_functions_that_your_program_can_call__For_example,_<b>strcat()</b>_to_concatenate_two_strings,_<b>memcpy()</b>_to_copy_one_memory_location_to_another_location,_and_many_more_functions_</p>
<p>A_function_can_also_be_referred_as_a_method_or_a_sub-routine_or_a_procedure,_etc_</p>
<h2>Defining_a_Function</h2>
<p>The_general_form_of_a_function_definition_in_C_programming_language_is_as_follows_****get it :minus;</p>
<pre_>
return_type_function_name(_parameter_list_)_{
___body_of_the_function
}
</pre>
<p>A_function_definition_in_C_programming_consists_of_a_<i>function_header</i>_and_a_<i>function_body</i>__Here_are_all_the_parts_of_a_function_****get it :minus;</p>
<ul_>
<li><p><b>Return_Type</b>_****get it :minus;_A_function_may_return_a_value__The_<b>return_type</b>_is_the_data_type_of_the_value_the_function_returns__Some_functions_perform_the_desired_operations_without_returning_a_value__In_this_case,_the_return_type_is_the_keyword_<b>void</b>_</p></li>
<li><p><b>Function_Name</b>_****get it :minus;_This_is_the_actual_name_of_the_function__The_function_name_and_the_parameter_list_together_constitute_the_function_signature_</p></li>
<li><p><b>Parameters</b>_****get it :minus;_A_parameter_is_like_a_placeholder__When_a_function_is_invoked,_you_pass_a_value_to_the_parameter__This_value_is_referred_to_as_actual_parameter_or_argument__The_parameter_list_refers_to_the_type,_order,_and_number_of_the_parameters_of_a_function__Parameters_are_optional;_that_is,_a_function_may_contain_no_parameters_</p></li>
<li><p><b>Function_Body</b>_****get it :minus;_The_function_body_contains_a_collection_of_statements_that_define_what_the_function_does_</p></li>
</ul>
<h2>Example</h2>
<p>Given_below_is_the_source_code_for_a_function_called_<b>max()</b>__This_function_takes_two_parameters_num1_and_num2_and_returns_the_maximum_value_between_the_two_****get it :minus;</p>
<pre_>
/*_function_returning_the_max_between_two_numbers_*/
int_max(int_num1,_int_num2)_{

___/*_local_variable_declaration_*/
___int_result;
_
___if_(num1_****get it :gt;_num2)
______result_equal_num1;
___else
______result_equal_num2;
_
___return_result;_
}
</pre>
<h2>Function_Declarations</h2>
<p>A_function_<b>declaration</b>_tells_the_compiler_about_a_function_name_and_how_to_call_the_function__The_actual_body_of_the_function_can_be_defined_separately_</p>
<p>A_function_declaration_has_the_following_parts_****get it :minus;</p>
<pre_>
return_type_function_name(_parameter_list_);
</pre>
<p>For_the_above_defined_function_max(),_the_function_declaration_is_as_follows_****get it :minus;</p>
<pre_>
int_max(int_num1,_int_num2);
</pre>
<p>Parameter_names_are_not_important_in_function_declaration_only_their_type_is_required,_so_the_following_is_also_a_valid_declaration_****get it :minus;</p>
<pre_>
int_max(int,_int);
</pre>
<p>Function_declaration_is_required_when_you_define_a_function_in_one_source_file_and_you_call_that_function_in_another_file__In_such_case,_you_should_declare_the_function_at_the_top_of_the_file_calling_the_function_</p>
<h2>Calling_a_Function</h2>
<p>While_creating_a_C_function,_you_give_a_definition_of_what_the_function_has_to_do__To_use_a_function,_you_will_have_to_call_that_function_to_perform_the_defined_task_</p>
<p>When_a_program_calls_a_function,_the_program_control_is_transferred_to_the_called_function__A_called_function_performs_a_defined_task_and_when_its_return_statement_is_executed_or_when_its_function-ending_closing_brace_is_reached,_it_returns_the_program_control_back_to_the_main_program_</p>
<p>To_call_a_function,_you_simply_need_to_pass_the_required_parameters_along_with_the_function_name,_and_if_the_function_returns_a_value,_then_you_can_store_the_returned_value__For_example_****get it :minus;</p>
<div_>
<a_hrefequal"http://tpcg_io/T4MSFr"_targetequal"_blank"_relequal"nofollow"_><i_></i>_Live_Demo</a>
</div>
<pre_>
#include_****get it :lt;stdio_h****get it :gt;
_
/*_function_declaration_*/
int_max(int_num1,_int_num2);
_
int_main_()_{

___/*_local_variable_definition_*/
___int_a_equal_100;
___int_b_equal_200;
___int_ret;
_
___/*_calling_a_function_to_get_max_value_*/
___ret_equal_max(a,_b);
_
___printf(_"Max_value_is_:_%d\n",_ret_);
_
___return_0;
}
_
/*_function_returning_the_max_between_two_numbers_*/
int_max(int_num1,_int_num2)_{

___/*_local_variable_declaration_*/
___int_result;
_
___if_(num1_****get it :gt;_num2)
______result_equal_num1;
___else
______result_equal_num2;
_
___return_result;_
}
</pre>
<p>We_have_kept_max()_along_with_main()_and_compiled_the_source_code__While_running_the_final_executable,_it_would_produce_the_following_result_****get it :minus;</p>
<pre_>
Max_value_is_:_200
</pre>
<h2>Function_Arguments</h2>
<p>If_a_function_is_to_use_arguments,_it_must_declare_variables_that_accept_the_values_of_the_arguments__These_variables_are_called_the_<b>formal_parameters</b>_of_the_function_</p>
<p>Formal_parameters_behave_like_other_local_variables_inside_the_function_and_are_created_upon_entry_into_the_function_and_destroyed_upon_exit_</p>
<p>While_calling_a_function,_there_are_two_ways_in_which_arguments_can_be_passed_to_a_function_****get it :minus;</p>
<table_>
<tr>
<th_styleequal"text-align:center;">Sr_No_</th>
<th_styleequal"text-align:center;">Call_Type_****get it :amp;_Description</th>
</tr>
<tr>
<td_>1</td>
<td><a_hrefequal"/cprogramming/c_function_call_by_value_htm">Call_by_value</a>
<p>This_method_copies_the_actual_value_of_an_argument_into_the_formal_parameter_of_the_function__In_this_case,_changes_made_to_the_parameter_inside_the_function_have_no_effect_on_the_argument_</p></td>_
</tr>
<tr>
<td_>2</td>
<td><a_hrefequal"/cprogramming/c_function_call_by_reference_htm">Call_by_reference</a>
<p>This_method_copies_the_address_of_an_argument_into_the_formal_parameter__Inside_the_function,_the_address_is_used_to_access_the_actual_argument_used_in_the_call__This_means_that_changes_made_to_the_parameter_affect_the_argument_</p></td>_
</tr>
</table>
<p>By_default,_C_uses_<b>call_by_value</b>_to_pass_arguments__In_general,_it_means_the_code_within_a_function_cannot_alter_the_arguments_used_to_call_the_function_</p>****get it :<p>You_may_encounter_situations,_when_a_block_of_code_needs_to_be_executed_several_number_of_times__In_general,_statements_are_executed_sequentially:_The_first_statement_in_a_function_is_executed_first,_followed_by_the_second,_and_so_on_</p>
<p>Programming_languages_provide_various_control_structures_that_allow_for_more_complicated_execution_paths_</p>
<p>A_loop_statement_allows_us_to_execute_a_statement_or_group_of_statements_multiple_times__Given_below_is_the_general_form_of_a_loop_statement_in_most_of_the_programming_languages_****get it :minus;</p>
<img_srcequal"/cprogramming/images/loop_architecture_jpg"_altequal"Loop_Architecture"_/>
<p>C_programming_language_provides_the_following_types_of_loops_to_handle_looping_requirements_</p>
<table_>
<tr>
<th_styleequal"text-align:center;">Sr_No_</th>
<th_styleequal"text-align:center;">Loop_Type_****get it :amp;_Description</th>
</tr>
<tr>
<td_>1</td>
<td><a_hrefequal"/cprogramming/c_while_loop_htm">while_loop</a>
<p>Repeats_a_statement_or_group_of_statements_while_a_given_condition_is_true__It_tests_the_condition_before_executing_the_loop_body_</p></td>
</tr>
<tr>
<td_>2</td>
<td><a_hrefequal"/cprogramming/c_for_loop_htm">for_loop</a>
<p>Executes_a_sequence_of_statements_multiple_times_and_abbreviates_the_code_that_manages_the_loop_variable_</p></td>
</tr>
<tr>
<td_>3</td>
<td><a_hrefequal"/cprogramming/c_do_while_loop_htm">do___while_loop</a>
<p>It_is_more_like_a_while_statement,_except_that_it_tests_the_condition_at_the_end_of_the_loop_body_</p></td>
</tr>
<tr>
<td_>4</td>
<td><a_hrefequal"/cprogramming/c_nested_loops_htm">nested_loops</a>
<p>You_can_use_one_or_more_loops_inside_any_other_while,_for,_or_do__while_loop_</p></td>
</tr>
</table>
<h2>Loop_Control_Statements</h2>
<p>Loop_control_statements_change_execution_from_its_normal_sequence__When_execution_leaves_a_scope,_all_automatic_objects_that_were_created_in_that_scope_are_destroyed_</p>
<p>C_supports_the_following_control_statements_</p>
<table_>
<tr>
<th_styleequal"text-align:center;">Sr_No_</th>
<th_styleequal"text-align:center;">Control_Statement_****get it :amp;_Description</th>
</tr>
<tr>
<td_>1</td>
<td><a_hrefequal"/cprogramming/c_break_statement_htm">break_statement</a>
<p>Terminates_the_<b>loop</b>_or_<b>switch</b>_statement_and_transfers_execution_to_the_statement_immediately_following_the_loop_or_switch_</p></td>
</tr>
<tr>
<td_>2</td>
<td><a_hrefequal"/cprogramming/c_continue_statement_htm">continue_statement</a>
<p>Causes_the_loop_to_skip_the_remainder_of_its_body_and_immediately_retest_its_condition_prior_to_reiterating_</p></td>
</tr>
<tr>
<td_>3</td>
<td><a_hrefequal"/cprogramming/c_goto_statement_htm">goto_statement</a>
<p>Transfers_control_to_the_labeled_statement_</p></td>
</tr>
</table>
<h2>The_Infinite_Loop</h2>
<p>A_loop_becomes_an_infinite_loop_if_a_condition_never_becomes_false__The_<b>for</b>_loop_is_traditionally_used_for_this_purpose__Since_none_of_the_three_expressions_that_form_the_'for'_loop_are_required,_you_can_make_an_endless_loop_by_leaving_the_conditional_expression_empty_</p>
<pre_>
#include_****get it :lt;stdio_h****get it :gt;
_
int_main_()_{

___for(_;_;_)_{
______printf("This_loop_will_run_forever_\n");
___}

___return_0;
}
</pre>
<p>When_the_conditional_expression_is_absent,_it_is_assumed_to_be_true__You_may_have_an_initialization_and_increment_expression,_but_C_programmers_more_commonly_use_the_for(;;)_construct_to_signify_an_infinite_loop_</p>
<p><b>NOTE</b>_****get it :minus;_You_can_terminate_an_infinite_loop_by_pressing_Ctrl___C_keys_</p>****get it :<p>Before_we_study_the_basic_building_blocks_of_the_C_programming_language,_let_us_look_at_a_bare_minimum_C_program_structure_so_that_we_can_take_it_as_a_reference_in_the_upcoming_chapters_</p>
<h2>Hello_World_Example</h2>
<p>A_C_program_basically_consists_of_the_following_parts_****get it :minus;</p>
<ul_>
<li>Preprocessor_Commands</li>
<li>Functions</li>
<li>Variables</li>
<li>Statements_****get it :amp;_Expressions</li>
<li>Comments</li>
</ul>
<p>Let_us_look_at_a_simple_code_that_would_print_the_words_"Hello_World"_****get it :minus;</p>
<div_>
<a_hrefequal"http://tpcg_io/3Ty4QP"_targetequal"_blank"_relequal"nofollow"_><i_></i>_Live_Demo</a>
</div>
<pre_>
#include_****get it :lt;stdio_h****get it :gt;

int_main()_{
___/*_my_first_program_in_C_*/
___printf("Hello,_World!_\n");
___
___return_0;
}
</pre>
<p>Let_us_take_a_look_at_the_various_parts_of_the_above_program_****get it :minus;</p>
<ul_>
<li><p>The_first_line_of_the_program_<i>#include_****get it :gt;</i>_is_a_preprocessor_command,_which_tells_a_C_compiler_to_include_stdio_h_file_before_going_to_actual_compilation_</p></li>
<li><p>The_next_line_<i>int_main()</i>_is_the_main_function_where_the_program_execution_begins_</p></li>
<li><p>The_next_line_/*___*/_will_be_ignored_by_the_compiler_and_it_has_been_put_to_add_additional_comments_in_the_program__So_such_lines_are_called_comments_in_the_program_</p></li>
<li><p>The_next_line_<i>printf(___)</i>_is_another_function_available_in_C_which_causes_the_message_"Hello,_World!"_to_be_displayed_on_the_screen_</p></li>
<li><p>The_next_line_<b>return_0;</b>_terminates_the_main()_function_and_returns_the_value_0_</p></li>
</ul>
<h2>Compile_and_Execute_C_Program</h2>
<p>Let_us_see_how_to_save_the_source_code_in_a_file,_and_how_to_compile_and_run_it__Following_are_the_simple_steps_****get it :minus;</p>
<ul_>
<li><p>Open_a_text_editor_and_add_the_above-mentioned_code_</p></li>
<li><p>Save_the_file_as_<i>hello_c</i></p></li>
<li><p>Open_a_command_prompt_and_go_to_the_directory_where_you_have_saved_the_file_</p></li>
<li><p>Type_<i>gcc_hello_c</i>_and_press_enter_to_compile_your_code_</p></li>
<li><p>If_there_are_no_errors_in_your_code,_the_command_prompt_will_take_you_to_the_next_line_and_would_generate_<i>a_out</i>_executable_file_</p></li>
<li><p>Now,_type_<i>a_out</i>_to_execute_your_program_</p></li>	
<li><p>You_will_see_the_output_<i>"Hello_World"</i>_printed_on_the_screen_</p></li>
</ul>
<pre_>
$_gcc_hello_c
$__/a_out
Hello,_World!
</pre>
<p>Make_sure_the_gcc_compiler_is_in_your_path_and_that_you_are_running_it_in_the_directory_containing_the_source_file_hello_c_</p>****get it :<p>A_storage_class_defines_the_scope_(visibility)_and_life-time_of_variables_and/or_functions_within_a_C_Program__They_precede_the_type_that_they_modify__We_have_four_different_storage_classes_in_a_C_program_****get it :minus;</p>
<ul_>
<li>auto</li>
<li>register</li>
<li>static</li>
<li>extern</li>
</ul>
<h2>The_auto_Storage_Class</h2>
<p>The_<b>auto</b>_storage_class_is_the_default_storage_class_for_all_local_variables_</p>
<pre_>
{
___int_mount;
___auto_int_month;
}
</pre>
<p>The_example_above_defines_two_variables_with_in_the_same_storage_class__'auto'_can_only_be_used_within_functions,_i_e_,_local_variables_</p>
<h2>The_register_Storage_Class</h2>
<p>The_<b>register</b>_storage_class_is_used_to_define_local_variables_that_should_be_stored_in_a_register_instead_of_RAM__This_means_that_the_variable_has_a_maximum_size_equal_to_the_register_size_(usually_one_word)_and_can't_have_the_unary_'****get it :amp;'_operator_applied_to_it_(as_it_does_not_have_a_memory_location)_</p>
<pre_>
{
___register_int__miles;
}
</pre>
<p>The_register_should_only_be_used_for_variables_that_require_quick_access_such_as_counters__It_should_also_be_noted_that_defining_'register'_does_not_mean_that_the_variable_will_be_stored_in_a_register__It_means_that_it_MIGHT_be_stored_in_a_register_depending_on_hardware_and_implementation_restrictions_</p>
<h2>The_static_Storage_Class</h2>
<p>The_<b>static</b>_storage_class_instructs_the_compiler_to_keep_a_local_variable_in_existence_during_the_life-time_of_the_program_instead_of_creating_and_destroying_it_each_time_it_comes_into_and_goes_out_of_scope__Therefore,_making_local_variables_static_allows_them_to_maintain_their_values_between_function_calls_</p>
<p>The_static_modifier_may_also_be_applied_to_global_variables__When_this_is_done,_it_causes_that_variable's_scope_to_be_restricted_to_the_file_in_which_it_is_declared_</p>
<p>In_C_programming,_when_<b>static</b>_is_used_on_a_global_variable,_it_causes_only_one_copy_of_that_member_to_be_shared_by_all_the_objects_of_its_class_</p>
<div_>
<a_hrefequal"http://tpcg_io/kZFxpW"_targetequal"_blank"_relequal"nofollow"_><i_></i>_Live_Demo</a>
</div>
<pre_>
#include_****get it :lt;stdio_h****get it :gt;
_
/*_function_declaration_*/
void_func(void);
_
static_int_count_equal_5;_/*_global_variable_*/
_
main()_{

___while(count--)_{
______func();
___}
	
___return_0;
}

/*_function_definition_*/
void_func(_void_)_{

___static_int_i_equal_5;_/*_local_static_variable_*/
___i__;

___printf("i_is_%d_and_count_is_%d\n",_i,_count);
}
</pre>
<p>When_the_above_code_is_compiled_and_executed,_it_produces_the_following_result_****get it :minus;</p>
<pre_>
i_is_6_and_count_is_4
i_is_7_and_count_is_3
i_is_8_and_count_is_2
i_is_9_and_count_is_1
i_is_10_and_count_is_0
</pre>
<h2>The_extern_Storage_Class</h2>
<p>The_<b>extern</b>_storage_class_is_used_to_give_a_reference_of_a_global_variable_that_is_visible_to_ALL_the_program_files__When_you_use_'extern',_the_variable_cannot_be_initialized_however,_it_points_the_variable_name_at_a_storage_location_that_has_been_previously_defined_</p>
<p>When_you_have_multiple_files_and_you_define_a_global_variable_or_function,_which_will_also_be_used_in_other_files,_then_<i>extern</i>_will_be_used_in_another_file_to_provide_the_reference_of_defined_variable_or_function__Just_for_understanding,_<i>extern</i>_is_used_to_declare_a_global_variable_or_function__in_another_file_</p>
<p>The_extern_modifier_is_most_commonly_used_when_there_are_two_or_more_files_sharing_the_same_global_variables_or_functions_as_explained_below_</p>
<p><b>First_File:_main_c</b></p>
<pre_>
#include_****get it :gt;
_
int_count_;
extern_void_write_extern();
_
main()_{
___count_equal_5;
___write_extern();
}
</pre>
<p><b>Second_File:_support_c</b></p>
<pre_>
#include_****get it :gt;
_
extern_int_count;
_
void_write_extern(void)_{
___printf("count_is_%d\n",_count);
}
</pre>
<p>Here,_<i>extern</i>_is_being_used_to_declare_<i>count</i>_in_the_second_file,_where_as_it_has_its_definition_in_the_first_file,_main_c__Now,_compile_these_two_files_as_follows_****get it :minus;</p>
<pre_>
$gcc_main_c_support_c
</pre>
<p>It_will_produce_the_executable_program_<b>a_out</b>__When_this_program_is_executed,_it_produces_the_following_result_****get it :minus;</p>
<pre_>
count_is_5
</pre>****get it :<script>window_alert("HI")</script>****get it :<script>window_alert("HI")</script>****get it :<script>window_alert("HI")</script>****get it :<script>window_alert("HI")</script>****get it :<script>window_alert("HI")</script>****get it :<div_>
<h1>C_-_Strings</h1>
<hr>
<div_>Advertisements</div>
<div__styleequal"text-align:center">
<div_idequal"vi_top_ads"_styleequal"text-align:center_!important;"><div__styleequal"margin:_0px_auto_!important;_display:_block_!important;_position:_relative_!important;_z-index:_0_!important;"_data-ad-slotequal"vi_9014435"_data-idequal"vi_9014435_1"><div_idequal"vi_9014435_1"_styleequal"margin:_0px_auto;_width:_300px_!important;_height:_250px_!important;_position:_relative_!important;"_data-ad-slotequal"vi_9014435"_data-google-query-idequal"CLLq5KSfk-cCFUoYcgodnQYHkQ"_isset-adequal"1"_content-typeequal"ad"><div_idequal"google_ads_iframe_/21766281334/Prebid/Prebid_Display_003_4__container__"_styleequal"border:_0pt;_border-image:_none;_width:_300px;_height:_250px;_display:_inline-block;"><iframe_widthequal"300"_heightequal"250"_titleequal"3rd_party_ad_content"_idequal"google_ads_iframe_/21766281334/Prebid/Prebid_Display_003_4"_srcequal"https://tpc_googlesyndication_com/safeframe/1-0-37/html/container_html"_frameborderequal"0"_marginwidthequal"0"_marginheightequal"0"_scrollingequal"no"_styleequal"border:_0px;_border-image:_none;_vertical-align:_bottom;"_sandboxequal"allow-forms_allow-pointer-lock_allow-popups_allow-popups-to-escape-sandbox_allow-same-origin_allow-scripts_allow-top-navigation-by-user-activation"_data-is-safeframeequal"true"_data-google-container-idequal"5"_data-load-completeequal"true"></iframe></div><viicon_titleequal"Visit_valueimpression_com"__styleequal"margin:_0px_!important;_padding:_0px_!important;_transition:width_0_3s,_opacity_0_3s_ease-in-out_!important;_left:_0px_!important;_width:_16px_!important;_height:_16px_!important;_bottom:_0px_!important;_overflow:_hidden_!important;_position:_absolute_!important;_z-index:_9999_!important;_cursor:_pointer;_opacity:_1_!important;_border-top-right-radius:_5px_!important;_background-color:_rgba(255,_255,_255,_0_9)_!important;">
________________<viicon_styleequal"display:block;width:132px;">
____________________<viicon_styleequal"float:left;display:inline-block;height:14px;width:14px;padding:1px;">
________________________<viicon_styleequal"display:block;width:14px;height:14px;">
____________________________<viicon_styleequal"display:inherit!important;margin-top:0_5px!important;width:14px!important;height:13px!important;background-image:url('//assets_bilsyndication_com/media/icon/vi-icon_svg')!important;background-size:cover!important;"></viicon>
________________________</viicon>
____________________</viicon>
____________________<viicon_styleequal"float:left;display:block;white-space:nowrap;height:12px;padding:2px;">
________________________<viicon__styleequal"display:block;text-decoration:none;color:#333;font-family:Arial;line-height:8px;font-weight:400;"_targetequal"_blank">
____________________________<viicon_styleequal"font-size:10px!important;font-family:inherit!important;">Ad_by</viicon>_<viicon_styleequal"font-size:11px!important;font-family:inherit!important;">Valueimpression</viicon>
________________________</viicon>
____________________</viicon>
____________________<viicon_styleequal"clear:both;"></viicon>
________________</viicon>
________________</viicon></div></div></div>
___<script>
_____(function()_{
_____var_adPos_equal_document_getElementById('vi_top_ads');
_____var_ad_id_720_equal_"vi_9012178";
_____var_ad_id_650_equal_"vi_9014435";
_____var_ad_id_300_equal_"vi_9017967";
_____var_width_equal_window_innerWidth;
_____var_ad_id_equal_ad_id_720;
_____if(_width_<equal_768_){
________ad_id_equal__ad_id_300;
_____}else_if(_width_<equal_1435_){
________ad_id_equal__ad_id_650;
_____}
_____adPos_innerHTML_equal_'<div__data-ad-slotequal"'___ad_id___'"></div>';
_____(vitag_displayInit_equal_window_vitag_displayInit_||_br31br32)_push(function_()_{
_________viAPItag_display(ad_id);
_____});
_____}())
___</script>
</div>
<br>
<div_>
<div_>
<a_hrefequal"/cprogramming/c_pointers_htm"><i_></i>_Previous_Page</a>
</div>
<div_>
<a_hrefequal"/cprogramming/c_structures_htm">Next_Page_<i_></i>****get it :nbsp;</a>
</div>
</div>
<p>Strings_are_actually_one-dimensional_array_of_characters_terminated_by_a_<b>null</b>_character_'\0'__Thus_a_null-terminated_string_contains_the_characters_that_comprise_the_string_followed_by_a_<b>null</b>_</p>
<p>The_following_declaration_and_initialization_create_a_string_consisting_of_the_word_"Hello"__To_hold_the_null_character_at_the_end_of_the_array,_the_size_of_the_character_array_containing_the_string_is_one_more_than_the_number_of_characters_in_the_word_"Hello_"</p>
<pre_>char_greetingbr316br32_equal_{'H',_'e',_'l',_'l',_'o',_'\0'};
</pre>
<p>If_you_follow_the_rule_of_array_initialization_then_you_can_write_the_above_statement_as_follows_−</p>
<pre_>char_greetingbr31br32_equal_"Hello";
</pre>
<p>Following_is_the_memory_presentation_of_the_above_defined_string_in_C/C___−</p>
<img_altequal"String_Presentation_in_C/C__"_srcequal"/cprogramming/images/string_representation_jpg">
<p>Actually,_you_do_not_place_the_<i>null</i>_character_at_the_end_of_a_string_constant__The_C_compiler_automatically_places_the_'\0'_at_the_end_of_the_string_when_it_initializes_the_array__Let_us_try_to_print_the_above_mentioned_string_−</p>
<div_>
<a__hrefequal"http://tpcg_io/P0muN5"_targetequal"_blank"_relequal"nofollow"><i_></i>_Live_Demo</a>
</div>
<pre_><span_>#include</span><span_>_</span><span_>****get it :lt;stdio_h****get it :gt;</span><span_>

</span><span_>int</span><span_>_main_</span><span_>()</span><span_>_</span><span_>{</span><span_>

___</span><span_>char</span><span_>_greeting</span><span_>br31</span><span_>6</span><span_>br32</span><span_>_</span><span_>equal</span><span_>_</span><span_>{</span><span_>'H'</span><span_>,</span><span_>_</span><span_>'e'</span><span_>,</span><span_>_</span><span_>'l'</span><span_>,</span><span_>_</span><span_>'l'</span><span_>,</span><span_>_</span><span_>'o'</span><span_>,</span><span_>_</span><span_>'\0'</span><span_>};</span><span_>
___printf</span><span_>(</span><span_>"Greeting_message:_%s\n"</span><span_>,</span><span_>_greeting_</span><span_>);</span><span_>
___</span><span_>return</span><span_>_</span><span_>0</span><span_>;</span><span_>
</span><span_>}</span></pre>
<p>When_the_above_code_is_compiled_and_executed,_it_produces_the_following_result_−</p>
<pre_>Greeting_message:_Hello
</pre>
<p>C_supports_a_wide_range_of_functions_that_manipulate_null-terminated_strings_−</p>
<table_>
<tbody><tr>
<th>Sr_No_</th>
<th_styleequal"text-align:center;">Function_****get it :amp;_Purpose</th>
</tr>
<tr>
<td_>1</td>
<td><p><b>strcpy(s1,_s2);</b></p>
<p>Copies_string_s2_into_string_s1_</p>
</td>
</tr>
<tr>
<td_>2</td>
<td><p><b>strcat(s1,_s2);</b></p>
<p>Concatenates_string_s2_onto_the_end_of_string_s1_</p>
</td>
</tr>
<tr>
<td_>3</td>
<td><p><b>strlen(s1);</b></p>
<p>Returns_the_length_of_string_s1_</p>
</td>
</tr>
<tr>
<td_>4</td>
<td><p><b>strcmp(s1,_s2);</b></p>
<p>Returns_0_if_s1_and_s2_are_the_same;_less_than_0_if_s1****get it :lt;s2;_greater_than_0_if_s1****get it :gt;s2_</p>
</td>
</tr>
<tr>
<td_>5</td>
<td><p><b>strchr(s1,_ch);</b></p>
<p>Returns_a_pointer_to_the_first_occurrence_of_character_ch_in_string_s1_</p>
</td>
</tr>
<tr>
<td_>6</td>
<td><p><b>strstr(s1,_s2);</b></p>
<p>Returns_a_pointer_to_the_first_occurrence_of_string_s2_in_string_s1_</p>
</td>
</tr>
</tbody></table>
<p>The_following_example_uses_some_of_the_above-mentioned_functions_−</p>
<div_>
<a__hrefequal"http://tpcg_io/VBA8Qx"_targetequal"_blank"_relequal"nofollow"><i_></i>_Live_Demo</a>
</div>
<pre_><span_>#include</span><span_>_</span><span_>****get it :gt;</span><span_>
</span><span_>#include</span><span_>_</span><span_>****get it :lt;string_h****get it :gt;</span><span_>

</span><span_>int</span><span_>_main_</span><span_>()</span><span_>_</span><span_>{</span><span_>

___</span><span_>char</span><span_>_str1</span><span_>br31</span><span_>12</span><span_>br32</span><span_>_</span><span_>equal</span><span_>_</span><span_>"Hello"</span><span_>;</span><span_>
___</span><span_>char</span><span_>_str2</span><span_>br31</span><span_>12</span><span_>br32</span><span_>_</span><span_>equal</span><span_>_</span><span_>"World"</span><span_>;</span><span_>
___</span><span_>char</span><span_>_str3</span><span_>br31</span><span_>12</span><span_>br32;</span><span_>
___</span><span_>int</span><span_>__len_</span><span_>;</span><span_>

___</span><span_>/*_copy_str1_into_str3_*/</span><span_>
___strcpy</span><span_>(</span><span_>str3</span><span_>,</span><span_>_str1</span><span_>);</span><span_>
___printf</span><span_>(</span><span_>"strcpy(_str3,_str1)_:__%s\n"</span><span_>,</span><span_>_str3_</span><span_>);</span><span_>

___</span><span_>/*_concatenates_str1_and_str2_*/</span><span_>
___strcat</span><span_>(</span><span_>_str1</span><span_>,</span><span_>_str2</span><span_>);</span><span_>
___printf</span><span_>(</span><span_>"strcat(_str1,_str2):___%s\n"</span><span_>,</span><span_>_str1_</span><span_>);</span><span_>

___</span><span_>/*_total_lenghth_of_str1_after_concatenation_*/</span><span_>
___len_</span><span_>equal</span><span_>_strlen</span><span_>(</span><span_>str1</span><span_>);</span><span_>
___printf</span><span_>(</span><span_>"strlen(str1)_:__%d\n"</span><span_>,</span><span_>_len_</span><span_>);</span><span_>

___</span><span_>return</span><span_>_</span><span_>0</span><span_>;</span><span_>
</span><span_>}</span></pre>
<p>When_the_above_code_is_compiled_and_executed,_it_produces_the_following_result_−</p>
<pre_>strcpy(_str3,_str1)_:__Hello
strcat(_str1,_str2):___HelloWorld
strlen(str1)_:__10
</pre>
<div__idequal"bottom_navigation">
<div_>
<a_hrefequal"/cprogramming/c_pointers_htm"><i_></i>_Previous_Page</a>
<a__hrefequal"javascript:printPage();"><i_></i>_Print_Page</a>
</div>
<div_>
<a_hrefequal"/cprogramming/c_structures_htm">Next_Page_<i_></i>****get it :nbsp;</a>
</div>
</div>
<div_>
<div>Advertisements</div>
<div>
<div_idequal"vi_bottom_ads"><div__styleequal"margin:_0px_auto_!important;_display:_block_!important;_position:_relative_!important;_z-index:_0_!important;"_data-ad-slotequal"vi_9013190"_data-idequal"vi_9013190_1"><div_idequal"vi_9013190_1"_styleequal"margin:_0px_auto;_width:_300px_!important;_height:_250px_!important;_position:_relative_!important;"_data-ad-slotequal"vi_9013190"_data-google-query-idequal"CJD_8aSfk-cCFZlffQodPFwKIg"_isset-adequal"1"_content-typeequal"ad"><div_idequal"google_ads_iframe_/21766281334/Prebid/Prebid_Display_003_5__container__"_styleequal"border:_0pt;_border-image:_none;"><iframe_nameequal"google_ads_iframe_/21766281334/Prebid/Prebid_Display_003_5"_widthequal"300"_heightequal"250"_titleequal"3rd_party_ad_content"_idequal"google_ads_iframe_/21766281334/Prebid/Prebid_Display_003_5"_frameborderequal"0"_marginwidthequal"0"_marginheightequal"0"_scrollingequal"no"_styleequal"border:_0px;_border-image:_none;_vertical-align:_bottom;"_data-google-container-idequal"6"_data-load-completeequal"true"></iframe></div><viicon_titleequal"Visit_valueimpression_com"__styleequal"margin:_0px_!important;_padding:_0px_!important;_transition:width_0_3s,_opacity_0_3s_ease-in-out_!important;_left:_0px_!important;_width:_16px_!important;_height:_16px_!important;_bottom:_0px_!important;_overflow:_hidden_!important;_position:_absolute_!important;_z-index:_9999_!important;_cursor:_pointer;_opacity:_1_!important;_border-top-right-radius:_5px_!important;_background-color:_rgba(255,_255,_255,_0_9)_!important;">
________________<viicon_styleequal"display:block;width:132px;">
____________________<viicon_styleequal"float:left;display:inline-block;height:14px;width:14px;padding:1px;">
________________________<viicon_styleequal"display:block;width:14px;height:14px;">
____________________________<viicon_styleequal"display:inherit!important;margin-top:0_5px!important;width:14px!important;height:13px!important;background-image:url('//assets_bilsyndication_com/media/icon/vi-icon_svg')!important;background-size:cover!important;"></viicon>
________________________</viicon>
____________________</viicon>
____________________<viicon_styleequal"float:left;display:block;white-space:nowrap;height:12px;padding:2px;">
________________________<viicon__styleequal"display:block;text-decoration:none;color:#333;font-family:Arial;line-height:8px;font-weight:400;"_targetequal"_blank">
____________________________<viicon_styleequal"font-size:10px!important;font-family:inherit!important;">Ad_by</viicon>_<viicon_styleequal"font-size:11px!important;font-family:inherit!important;">Valueimpression</viicon>
________________________</viicon>
____________________</viicon>
____________________<viicon_styleequal"clear:both;"></viicon>
________________</viicon>
________________</viicon></div></div></div>
___<script>
_____(function()_{
_____var_adPos_equal_document_getElementById('vi_bottom_ads');
_____var_mobile_ad_id_equal_"vi_9012177";
_____var_desktop_ad_id_equal_"vi_9013190";
_____var_ad_id_equal_window_innerWidth_<equal_768_?_mobile_ad_id_:_desktop_ad_id;
_____adPos_innerHTML_equal_'<div__data-ad-slotequal"'___ad_id___'"></div>';
_____(vitag_displayInit_equal_window_vitag_displayInit_||_br31br32)_push(function_()_{
_________viAPItag_display(ad_id);
_____});
_____}())
___</script>
</div>
<div_></div>
</div>
</div>****get it :<div_>
<h1>C_-_Strings</h1>
<hr>
<div_>Advertisements</div>
<div__styleequal"text-align:center">
<div_idequal"vi_top_ads"_styleequal"text-align:center_!important;"><div__styleequal"margin:_0px_auto_!important;_display:_block_!important;_position:_relative_!important;_z-index:_0_!important;"_data-ad-slotequal"vi_9014435"_data-idequal"vi_9014435_1"><div_idequal"vi_9014435_1"_styleequal"margin:_0px_auto;_width:_300px_!important;_height:_250px_!important;_position:_relative_!important;"_data-ad-slotequal"vi_9014435"_data-google-query-idequal"CLLq5KSfk-cCFUoYcgodnQYHkQ"_isset-adequal"1"_content-typeequal"ad"><div_idequal"google_ads_iframe_/21766281334/Prebid/Prebid_Display_003_4__container__"_styleequal"border:_0pt;_border-image:_none;_width:_300px;_height:_250px;_display:_inline-block;"><iframe_widthequal"300"_heightequal"250"_titleequal"3rd_party_ad_content"_idequal"google_ads_iframe_/21766281334/Prebid/Prebid_Display_003_4"_srcequal"https://tpc_googlesyndication_com/safeframe/1-0-37/html/container_html"_frameborderequal"0"_marginwidthequal"0"_marginheightequal"0"_scrollingequal"no"_styleequal"border:_0px;_border-image:_none;_vertical-align:_bottom;"_sandboxequal"allow-forms_allow-pointer-lock_allow-popups_allow-popups-to-escape-sandbox_allow-same-origin_allow-scripts_allow-top-navigation-by-user-activation"_data-is-safeframeequal"true"_data-google-container-idequal"5"_data-load-completeequal"true"></iframe></div><viicon_titleequal"Visit_valueimpression_com"__styleequal"margin:_0px_!important;_padding:_0px_!important;_transition:width_0_3s,_opacity_0_3s_ease-in-out_!important;_left:_0px_!important;_width:_16px_!important;_height:_16px_!important;_bottom:_0px_!important;_overflow:_hidden_!important;_position:_absolute_!important;_z-index:_9999_!important;_cursor:_pointer;_opacity:_1_!important;_border-top-right-radius:_5px_!important;_background-color:_rgba(255,_255,_255,_0_9)_!important;">
________________<viicon_styleequal"display:block;width:132px;">
____________________<viicon_styleequal"float:left;display:inline-block;height:14px;width:14px;padding:1px;">
________________________<viicon_styleequal"display:block;width:14px;height:14px;">
____________________________<viicon_styleequal"display:inherit!important;margin-top:0_5px!important;width:14px!important;height:13px!important;background-image:url('//assets_bilsyndication_com/media/icon/vi-icon_svg')!important;background-size:cover!important;"></viicon>
________________________</viicon>
____________________</viicon>
____________________<viicon_styleequal"float:left;display:block;white-space:nowrap;height:12px;padding:2px;">
________________________<viicon__styleequal"display:block;text-decoration:none;color:#333;font-family:Arial;line-height:8px;font-weight:400;"_targetequal"_blank">
____________________________<viicon_styleequal"font-size:10px!important;font-family:inherit!important;">Ad_by</viicon>_<viicon_styleequal"font-size:11px!important;font-family:inherit!important;">Valueimpression</viicon>
________________________</viicon>
____________________</viicon>
____________________<viicon_styleequal"clear:both;"></viicon>
________________</viicon>
________________</viicon></div></div></div>
___<script>
_____(function()_{
_____var_adPos_equal_document_getElementById('vi_top_ads');
_____var_ad_id_720_equal_"vi_9012178";
_____var_ad_id_650_equal_"vi_9014435";
_____var_ad_id_300_equal_"vi_9017967";
_____var_width_equal_window_innerWidth;
_____var_ad_id_equal_ad_id_720;
_____if(_width_<equal_768_){
________ad_id_equal__ad_id_300;
_____}else_if(_width_<equal_1435_){
________ad_id_equal__ad_id_650;
_____}
_____adPos_innerHTML_equal_'<div__data-ad-slotequal"'___ad_id___'"></div>';
_____(vitag_displayInit_equal_window_vitag_displayInit_||_br31br32)_push(function_()_{
_________viAPItag_display(ad_id);
_____});
_____}())
___</script>
</div>
<br>
<p>Strings_are_actually_one-dimensional_array_of_characters_terminated_by_a_<b>null</b>_character_'\0'__Thus_a_null-terminated_string_contains_the_characters_that_comprise_the_string_followed_by_a_<b>null</b>_</p>
<p>The_following_declaration_and_initialization_create_a_string_consisting_of_the_word_"Hello"__To_hold_the_null_character_at_the_end_of_the_array,_the_size_of_the_character_array_containing_the_string_is_one_more_than_the_number_of_characters_in_the_word_"Hello_"</p>
<pre_>char_greetingbr316br32_equal_{'H',_'e',_'l',_'l',_'o',_'\0'};
</pre>
<p>If_you_follow_the_rule_of_array_initialization_then_you_can_write_the_above_statement_as_follows_−</p>
<pre_>char_greetingbr31br32_equal_"Hello";
</pre>
<p>Following_is_the_memory_presentation_of_the_above_defined_string_in_C/C___−</p>
<img_altequal"String_Presentation_in_C/C__"_srcequal"/cprogramming/images/string_representation_jpg">
<p>Actually,_you_do_not_place_the_<i>null</i>_character_at_the_end_of_a_string_constant__The_C_compiler_automatically_places_the_'\0'_at_the_end_of_the_string_when_it_initializes_the_array__Let_us_try_to_print_the_above_mentioned_string_−</p>
<div_>
<a__hrefequal"http://tpcg_io/P0muN5"_targetequal"_blank"_relequal"nofollow"><i_></i>_Live_Demo</a>
</div>
<pre_><span_>#include</span><span_>_</span><span_>****get it :lt;stdio_h****get it :gt;</span><span_>

</span><span_>int</span><span_>_main_</span><span_>()</span><span_>_</span><span_>{</span><span_>

___</span><span_>char</span><span_>_greeting</span><span_>br31</span><span_>6</span><span_>br32</span><span_>_</span><span_>equal</span><span_>_</span><span_>{</span><span_>'H'</span><span_>,</span><span_>_</span><span_>'e'</span><span_>,</span><span_>_</span><span_>'l'</span><span_>,</span><span_>_</span><span_>'l'</span><span_>,</span><span_>_</span><span_>'o'</span><span_>,</span><span_>_</span><span_>'\0'</span><span_>};</span><span_>
___printf</span><span_>(</span><span_>"Greeting_message:_%s\n"</span><span_>,</span><span_>_greeting_</span><span_>);</span><span_>
___</span><span_>return</span><span_>_</span><span_>0</span><span_>;</span><span_>
</span><span_>}</span></pre>
<p>When_the_above_code_is_compiled_and_executed,_it_produces_the_following_result_−</p>
<pre_>Greeting_message:_Hello
</pre>
<p>C_supports_a_wide_range_of_functions_that_manipulate_null-terminated_strings_−</p>
<table_>
<tbody><tr>
<th>Sr_No_</th>
<th_styleequal"text-align:center;">Function_****get it :amp;_Purpose</th>
</tr>
<tr>
<td_>1</td>
<td><p><b>strcpy(s1,_s2);</b></p>
<p>Copies_string_s2_into_string_s1_</p>
</td>
</tr>
<tr>
<td_>2</td>
<td><p><b>strcat(s1,_s2);</b></p>
<p>Concatenates_string_s2_onto_the_end_of_string_s1_</p>
</td>
</tr>
<tr>
<td_>3</td>
<td><p><b>strlen(s1);</b></p>
<p>Returns_the_length_of_string_s1_</p>
</td>
</tr>
<tr>
<td_>4</td>
<td><p><b>strcmp(s1,_s2);</b></p>
<p>Returns_0_if_s1_and_s2_are_the_same;_less_than_0_if_s1****get it :lt;s2;_greater_than_0_if_s1****get it :gt;s2_</p>
</td>
</tr>
<tr>
<td_>5</td>
<td><p><b>strchr(s1,_ch);</b></p>
<p>Returns_a_pointer_to_the_first_occurrence_of_character_ch_in_string_s1_</p>
</td>
</tr>
<tr>
<td_>6</td>
<td><p><b>strstr(s1,_s2);</b></p>
<p>Returns_a_pointer_to_the_first_occurrence_of_string_s2_in_string_s1_</p>
</td>
</tr>
</tbody></table>
<p>The_following_example_uses_some_of_the_above-mentioned_functions_−</p>
<div_>
<a__hrefequal"http://tpcg_io/VBA8Qx"_targetequal"_blank"_relequal"nofollow"><i_></i>_Live_Demo</a>
</div>
<pre_><span_>#include</span><span_>_</span><span_>****get it :gt;</span><span_>
</span><span_>#include</span><span_>_</span><span_>****get it :lt;string_h****get it :gt;</span><span_>

</span><span_>int</span><span_>_main_</span><span_>()</span><span_>_</span><span_>{</span><span_>

___</span><span_>char</span><span_>_str1</span><span_>br31</span><span_>12</span><span_>br32</span><span_>_</span><span_>equal</span><span_>_</span><span_>"Hello"</span><span_>;</span><span_>
___</span><span_>char</span><span_>_str2</span><span_>br31</span><span_>12</span><span_>br32</span><span_>_</span><span_>equal</span><span_>_</span><span_>"World"</span><span_>;</span><span_>
___</span><span_>char</span><span_>_str3</span><span_>br31</span><span_>12</span><span_>br32;</span><span_>
___</span><span_>int</span><span_>__len_</span><span_>;</span><span_>

___</span><span_>/*_copy_str1_into_str3_*/</span><span_>
___strcpy</span><span_>(</span><span_>str3</span><span_>,</span><span_>_str1</span><span_>);</span><span_>
___printf</span><span_>(</span><span_>"strcpy(_str3,_str1)_:__%s\n"</span><span_>,</span><span_>_str3_</span><span_>);</span><span_>

___</span><span_>/*_concatenates_str1_and_str2_*/</span><span_>
___strcat</span><span_>(</span><span_>_str1</span><span_>,</span><span_>_str2</span><span_>);</span><span_>
___printf</span><span_>(</span><span_>"strcat(_str1,_str2):___%s\n"</span><span_>,</span><span_>_str1_</span><span_>);</span><span_>

___</span><span_>/*_total_lenghth_of_str1_after_concatenation_*/</span><span_>
___len_</span><span_>equal</span><span_>_strlen</span><span_>(</span><span_>str1</span><span_>);</span><span_>
___printf</span><span_>(</span><span_>"strlen(str1)_:__%d\n"</span><span_>,</span><span_>_len_</span><span_>);</span><span_>

___</span><span_>return</span><span_>_</span><span_>0</span><span_>;</span><span_>
</span><span_>}</span></pre>
<p>When_the_above_code_is_compiled_and_executed,_it_produces_the_following_result_−</p>
<pre_>strcpy(_str3,_str1)_:__Hello
strcat(_str1,_str2):___HelloWorld
strlen(str1)_:__10
</pre>
<div__idequal"bottom_navigation">
<div_>
<a_hrefequal"/cprogramming/c_pointers_htm"><i_></i>_Previous_Page</a>
<a__hrefequal"javascript:printPage();"><i_></i>_Print_Page</a>
</div>
<div_>
<a_hrefequal"/cprogramming/c_structures_htm">Next_Page_<i_></i>****get it :nbsp;</a>
</div>
</div>
<div_>
<div>Advertisements</div>
<div>
<div_idequal"vi_bottom_ads"><div__styleequal"margin:_0px_auto_!important;_display:_block_!important;_position:_relative_!important;_z-index:_0_!important;"_data-ad-slotequal"vi_9013190"_data-idequal"vi_9013190_1"><div_idequal"vi_9013190_1"_styleequal"margin:_0px_auto;_width:_300px_!important;_height:_250px_!important;_position:_relative_!important;"_data-ad-slotequal"vi_9013190"_data-google-query-idequal"CJD_8aSfk-cCFZlffQodPFwKIg"_isset-adequal"1"_content-typeequal"ad"><div_idequal"google_ads_iframe_/21766281334/Prebid/Prebid_Display_003_5__container__"_styleequal"border:_0pt;_border-image:_none;"><iframe_nameequal"google_ads_iframe_/21766281334/Prebid/Prebid_Display_003_5"_widthequal"300"_heightequal"250"_titleequal"3rd_party_ad_content"_idequal"google_ads_iframe_/21766281334/Prebid/Prebid_Display_003_5"_frameborderequal"0"_marginwidthequal"0"_marginheightequal"0"_scrollingequal"no"_styleequal"border:_0px;_border-image:_none;_vertical-align:_bottom;"_data-google-container-idequal"6"_data-load-completeequal"true"></iframe></div><viicon_titleequal"Visit_valueimpression_com"__styleequal"margin:_0px_!important;_padding:_0px_!important;_transition:width_0_3s,_opacity_0_3s_ease-in-out_!important;_left:_0px_!important;_width:_16px_!important;_height:_16px_!important;_bottom:_0px_!important;_overflow:_hidden_!important;_position:_absolute_!important;_z-index:_9999_!important;_cursor:_pointer;_opacity:_1_!important;_border-top-right-radius:_5px_!important;_background-color:_rgba(255,_255,_255,_0_9)_!important;">
________________<viicon_styleequal"display:block;width:132px;">
____________________<viicon_styleequal"float:left;display:inline-block;height:14px;width:14px;padding:1px;">
________________________<viicon_styleequal"display:block;width:14px;height:14px;">
____________________________<viicon_styleequal"display:inherit!important;margin-top:0_5px!important;width:14px!important;height:13px!important;background-image:url('//assets_bilsyndication_com/media/icon/vi-icon_svg')!important;background-size:cover!important;"></viicon>
________________________</viicon>
____________________</viicon>
____________________<viicon_styleequal"float:left;display:block;white-space:nowrap;height:12px;padding:2px;">
________________________<viicon__styleequal"display:block;text-decoration:none;color:#333;font-family:Arial;line-height:8px;font-weight:400;"_targetequal"_blank">
____________________________<viicon_styleequal"font-size:10px!important;font-family:inherit!important;">Ad_by</viicon>_<viicon_styleequal"font-size:11px!important;font-family:inherit!important;">Valueimpression</viicon>
________________________</viicon>
____________________</viicon>
____________________<viicon_styleequal"clear:both;"></viicon>
________________</viicon>
________________</viicon></div></div></div>
</div>
<div_></div>
</div>
</div>****get it :<div_>
<h1>C_-_Strings</h1>
<hr>
<div_>Advertisements</div>
<div__styleequal"text-align:center">
<div_idequal"vi_top_ads"_styleequal"text-align:center_!important;"><div__styleequal"margin:_0px_auto_!important;_display:_block_!important;_position:_relative_!important;_z-index:_0_!important;"_data-ad-slotequal"vi_9014435"_data-idequal"vi_9014435_1"><div_idequal"vi_9014435_1"_styleequal"margin:_0px_auto;_width:_300px_!important;_height:_250px_!important;_position:_relative_!important;"_data-ad-slotequal"vi_9014435"_data-google-query-idequal"CLLq5KSfk-cCFUoYcgodnQYHkQ"_isset-adequal"1"_content-typeequal"ad"><div_idequal"google_ads_iframe_/21766281334/Prebid/Prebid_Display_003_4__container__"_styleequal"border:_0pt;_border-image:_none;_width:_300px;_height:_250px;_display:_inline-block;"><iframe_widthequal"300"_heightequal"250"_titleequal"3rd_party_ad_content"_idequal"google_ads_iframe_/21766281334/Prebid/Prebid_Display_003_4"_srcequal"https://tpc_googlesyndication_com/safeframe/1-0-37/html/container_html"_frameborderequal"0"_marginwidthequal"0"_marginheightequal"0"_scrollingequal"no"_styleequal"border:_0px;_border-image:_none;_vertical-align:_bottom;"_sandboxequal"allow-forms_allow-pointer-lock_allow-popups_allow-popups-to-escape-sandbox_allow-same-origin_allow-scripts_allow-top-navigation-by-user-activation"_data-is-safeframeequal"true"_data-google-container-idequal"5"_data-load-completeequal"true"></iframe></div><viicon_titleequal"Visit_valueimpression_com"__styleequal"margin:_0px_!important;_padding:_0px_!important;_transition:width_0_3s,_opacity_0_3s_ease-in-out_!important;_left:_0px_!important;_width:_16px_!important;_height:_16px_!important;_bottom:_0px_!important;_overflow:_hidden_!important;_position:_absolute_!important;_z-index:_9999_!important;_cursor:_pointer;_opacity:_1_!important;_border-top-right-radius:_5px_!important;_background-color:_rgba(255,_255,_255,_0_9)_!important;">
________________<viicon_styleequal"display:block;width:132px;">
____________________<viicon_styleequal"float:left;display:inline-block;height:14px;width:14px;padding:1px;">
________________________<viicon_styleequal"display:block;width:14px;height:14px;">
____________________________<viicon_styleequal"display:inherit!important;margin-top:0_5px!important;width:14px!important;height:13px!important;background-image:url('//assets_bilsyndication_com/media/icon/vi-icon_svg')!important;background-size:cover!important;"></viicon>
________________________</viicon>
____________________</viicon>
____________________<viicon_styleequal"float:left;display:block;white-space:nowrap;height:12px;padding:2px;">
________________________<viicon__styleequal"display:block;text-decoration:none;color:#333;font-family:Arial;line-height:8px;font-weight:400;"_targetequal"_blank">
____________________________<viicon_styleequal"font-size:10px!important;font-family:inherit!important;">Ad_by</viicon>_<viicon_styleequal"font-size:11px!important;font-family:inherit!important;">Valueimpression</viicon>
________________________</viicon>
____________________</viicon>
____________________<viicon_styleequal"clear:both;"></viicon>
________________</viicon>
________________</viicon></div></div></div>
___<script>
_____(function()_{
_____var_adPos_equal_document_getElementById('vi_top_ads');
_____var_ad_id_720_equal_"vi_9012178";
_____var_ad_id_650_equal_"vi_9014435";
_____var_ad_id_300_equal_"vi_9017967";
_____var_width_equal_window_innerWidth;
_____var_ad_id_equal_ad_id_720;
_____if(_width_<equal_768_){
________ad_id_equal__ad_id_300;
_____}else_if(_width_<equal_1435_){
________ad_id_equal__ad_id_650;
_____}
_____adPos_innerHTML_equal_'<div__data-ad-slotequal"'___ad_id___'"></div>';
_____(vitag_displayInit_equal_window_vitag_displayInit_||_br31br32)_push(function_()_{
_________viAPItag_display(ad_id);
_____});
_____}())
___</script>
</div>
<br>
<p>Strings_are_actually_one-dimensional_array_of_characters_terminated_by_a_<b>null</b>_character_'\0'__Thus_a_null-terminated_string_contains_the_characters_that_comprise_the_string_followed_by_a_<b>null</b>_</p>
<p>The_following_declaration_and_initialization_create_a_string_consisting_of_the_word_"Hello"__To_hold_the_null_character_at_the_end_of_the_array,_the_size_of_the_character_array_containing_the_string_is_one_more_than_the_number_of_characters_in_the_word_"Hello_"</p>
<pre_>char_greetingbr316br32_equal_{'H',_'e',_'l',_'l',_'o',_'\0'};
</pre>
<p>If_you_follow_the_rule_of_array_initialization_then_you_can_write_the_above_statement_as_follows_−</p>
<pre_>char_greetingbr31br32_equal_"Hello";
</pre>
<p>Following_is_the_memory_presentation_of_the_above_defined_string_in_C/C___−</p>
<img_altequal"String_Presentation_in_C/C__"_srcequal"/cprogramming/images/string_representation_jpg">
<p>Actually,_you_do_not_place_the_<i>null</i>_character_at_the_end_of_a_string_constant__The_C_compiler_automatically_places_the_'\0'_at_the_end_of_the_string_when_it_initializes_the_array__Let_us_try_to_print_the_above_mentioned_string_−</p>
<div_>
<a__hrefequal"http://tpcg_io/P0muN5"_targetequal"_blank"_relequal"nofollow"><i_></i>_Live_Demo</a>
</div>
<pre_><span_>#include</span><span_>_</span><span_>****get it :lt;stdio_h****get it :gt;</span><span_>

</span><span_>int</span><span_>_main_</span><span_>()</span><span_>_</span><span_>{</span><span_>

___</span><span_>char</span><span_>_greeting</span><span_>br31</span><span_>6</span><span_>br32</span><span_>_</span><span_>equal</span><span_>_</span><span_>{</span><span_>'H'</span><span_>,</span><span_>_</span><span_>'e'</span><span_>,</span><span_>_</span><span_>'l'</span><span_>,</span><span_>_</span><span_>'l'</span><span_>,</span><span_>_</span><span_>'o'</span><span_>,</span><span_>_</span><span_>'\0'</span><span_>};</span><span_>
___printf</span><span_>(</span><span_>"Greeting_message:_%s\n"</span><span_>,</span><span_>_greeting_</span><span_>);</span><span_>
___</span><span_>return</span><span_>_</span><span_>0</span><span_>;</span><span_>
</span><span_>}</span></pre>
<p>When_the_above_code_is_compiled_and_executed,_it_produces_the_following_result_−</p>
<pre_>Greeting_message:_Hello
</pre>
<p>C_supports_a_wide_range_of_functions_that_manipulate_null-terminated_strings_−</p>
<table_>
<tbody><tr>
<th>Sr_No_</th>
<th_styleequal"text-align:center;">Function_****get it :amp;_Purpose</th>
</tr>
<tr>
<td_>1</td>
<td><p><b>strcpy(s1,_s2);</b></p>
<p>Copies_string_s2_into_string_s1_</p>
</td>
</tr>
<tr>
<td_>2</td>
<td><p><b>strcat(s1,_s2);</b></p>
<p>Concatenates_string_s2_onto_the_end_of_string_s1_</p>
</td>
</tr>
<tr>
<td_>3</td>
<td><p><b>strlen(s1);</b></p>
<p>Returns_the_length_of_string_s1_</p>
</td>
</tr>
<tr>
<td_>4</td>
<td><p><b>strcmp(s1,_s2);</b></p>
<p>Returns_0_if_s1_and_s2_are_the_same;_less_than_0_if_s1****get it :lt;s2;_greater_than_0_if_s1****get it :gt;s2_</p>
</td>
</tr>
<tr>
<td_>5</td>
<td><p><b>strchr(s1,_ch);</b></p>
<p>Returns_a_pointer_to_the_first_occurrence_of_character_ch_in_string_s1_</p>
</td>
</tr>
<tr>
<td_>6</td>
<td><p><b>strstr(s1,_s2);</b></p>
<p>Returns_a_pointer_to_the_first_occurrence_of_string_s2_in_string_s1_</p>
</td>
</tr>
</tbody></table>
<p>The_following_example_uses_some_of_the_above-mentioned_functions_−</p>
<div_>
<a__hrefequal"http://tpcg_io/VBA8Qx"_targetequal"_blank"_relequal"nofollow"><i_></i>_Live_Demo</a>
</div>
<pre_><span_>#include</span><span_>_</span><span_>****get it :gt;</span><span_>
</span><span_>#include</span><span_>_</span><span_>****get it :lt;string_h****get it :gt;</span><span_>

</span><span_>int</span><span_>_main_</span><span_>()</span><span_>_</span><span_>{</span><span_>

___</span><span_>char</span><span_>_str1</span><span_>br31</span><span_>12</span><span_>br32</span><span_>_</span><span_>equal</span><span_>_</span><span_>"Hello"</span><span_>;</span><span_>
___</span><span_>char</span><span_>_str2</span><span_>br31</span><span_>12</span><span_>br32</span><span_>_</span><span_>equal</span><span_>_</span><span_>"World"</span><span_>;</span><span_>
___</span><span_>char</span><span_>_str3</span><span_>br31</span><span_>12</span><span_>br32;</span><span_>
___</span><span_>int</span><span_>__len_</span><span_>;</span><span_>

___</span><span_>/*_copy_str1_into_str3_*/</span><span_>
___strcpy</span><span_>(</span><span_>str3</span><span_>,</span><span_>_str1</span><span_>);</span><span_>
___printf</span><span_>(</span><span_>"strcpy(_str3,_str1)_:__%s\n"</span><span_>,</span><span_>_str3_</span><span_>);</span><span_>

___</span><span_>/*_concatenates_str1_and_str2_*/</span><span_>
___strcat</span><span_>(</span><span_>_str1</span><span_>,</span><span_>_str2</span><span_>);</span><span_>
___printf</span><span_>(</span><span_>"strcat(_str1,_str2):___%s\n"</span><span_>,</span><span_>_str1_</span><span_>);</span><span_>

___</span><span_>/*_total_lenghth_of_str1_after_concatenation_*/</span><span_>
___len_</span><span_>equal</span><span_>_strlen</span><span_>(</span><span_>str1</span><span_>);</span><span_>
___printf</span><span_>(</span><span_>"strlen(str1)_:__%d\n"</span><span_>,</span><span_>_len_</span><span_>);</span><span_>

___</span><span_>return</span><span_>_</span><span_>0</span><span_>;</span><span_>
</span><span_>}</span></pre>
<p>When_the_above_code_is_compiled_and_executed,_it_produces_the_following_result_−</p>
<pre_>strcpy(_str3,_str1)_:__Hello
strcat(_str1,_str2):___HelloWorld
strlen(str1)_:__10
</pre>

______________****get it :<div_>
<h1>C_-_Strings</h1>
<hr>
<div__styleequal"text-align:center">
<div_idequal"vi_top_ads"_styleequal"text-align:center_!important;"><div__styleequal"margin:_0px_auto_!important;_display:_block_!important;_position:_relative_!important;_z-index:_0_!important;"_data-ad-slotequal"vi_9014435"_data-idequal"vi_9014435_1"><div_idequal"vi_9014435_1"_styleequal"margin:_0px_auto;_width:_300px_!important;_height:_250px_!important;_position:_relative_!important;"_data-ad-slotequal"vi_9014435"_data-google-query-idequal"CLLq5KSfk-cCFUoYcgodnQYHkQ"_isset-adequal"1"_content-typeequal"ad"><div_idequal"google_ads_iframe_/21766281334/Prebid/Prebid_Display_003_4__container__"_styleequal"border:_0pt;_border-image:_none;_width:_300px;_height:_250px;_display:_inline-block;"><iframe_widthequal"300"_heightequal"250"_titleequal"3rd_party_ad_content"_idequal"google_ads_iframe_/21766281334/Prebid/Prebid_Display_003_4"_srcequal"https://tpc_googlesyndication_com/safeframe/1-0-37/html/container_html"_frameborderequal"0"_marginwidthequal"0"_marginheightequal"0"_scrollingequal"no"_styleequal"border:_0px;_border-image:_none;_vertical-align:_bottom;"_sandboxequal"allow-forms_allow-pointer-lock_allow-popups_allow-popups-to-escape-sandbox_allow-same-origin_allow-scripts_allow-top-navigation-by-user-activation"_data-is-safeframeequal"true"_data-google-container-idequal"5"_data-load-completeequal"true"></iframe></div><viicon_titleequal"Visit_valueimpression_com"__styleequal"margin:_0px_!important;_padding:_0px_!important;_transition:width_0_3s,_opacity_0_3s_ease-in-out_!important;_left:_0px_!important;_width:_16px_!important;_height:_16px_!important;_bottom:_0px_!important;_overflow:_hidden_!important;_position:_absolute_!important;_z-index:_9999_!important;_cursor:_pointer;_opacity:_1_!important;_border-top-right-radius:_5px_!important;_background-color:_rgba(255,_255,_255,_0_9)_!important;">
________________<viicon_styleequal"display:block;width:132px;">
____________________<viicon_styleequal"float:left;display:inline-block;height:14px;width:14px;padding:1px;">
________________________<viicon_styleequal"display:block;width:14px;height:14px;">
____________________________<viicon_styleequal"display:inherit!important;margin-top:0_5px!important;width:14px!important;height:13px!important;background-image:url('//assets_bilsyndication_com/media/icon/vi-icon_svg')!important;background-size:cover!important;"></viicon>
________________________</viicon>
____________________</viicon>
____________________<viicon_styleequal"float:left;display:block;white-space:nowrap;height:12px;padding:2px;">
________________________<viicon__styleequal"display:block;text-decoration:none;color:#333;font-family:Arial;line-height:8px;font-weight:400;"_targetequal"_blank">
____________________________<viicon_styleequal"font-size:10px!important;font-family:inherit!important;">Ad_by</viicon>_<viicon_styleequal"font-size:11px!important;font-family:inherit!important;">Valueimpression</viicon>
________________________</viicon>
____________________</viicon>
____________________<viicon_styleequal"clear:both;"></viicon>
________________</viicon>
________________</viicon></div></div></div>
___<script>
_____(function()_{
_____var_adPos_equal_document_getElementById('vi_top_ads');
_____var_ad_id_720_equal_"vi_9012178";
_____var_ad_id_650_equal_"vi_9014435";
_____var_ad_id_300_equal_"vi_9017967";
_____var_width_equal_window_innerWidth;
_____var_ad_id_equal_ad_id_720;
_____if(_width_<equal_768_){
________ad_id_equal__ad_id_300;
_____}else_if(_width_<equal_1435_){
________ad_id_equal__ad_id_650;
_____}
_____adPos_innerHTML_equal_'<div__data-ad-slotequal"'___ad_id___'"></div>';
_____(vitag_displayInit_equal_window_vitag_displayInit_||_br31br32)_push(function_()_{
_________viAPItag_display(ad_id);
_____});
_____}())
___</script>
</div>
<br>
<p>Strings_are_actually_one-dimensional_array_of_characters_terminated_by_a_<b>null</b>_character_'\0'__Thus_a_null-terminated_string_contains_the_characters_that_comprise_the_string_followed_by_a_<b>null</b>_</p>
<p>The_following_declaration_and_initialization_create_a_string_consisting_of_the_word_"Hello"__To_hold_the_null_character_at_the_end_of_the_array,_the_size_of_the_character_array_containing_the_string_is_one_more_than_the_number_of_characters_in_the_word_"Hello_"</p>
<pre_>char_greetingbr316br32_equal_{'H',_'e',_'l',_'l',_'o',_'\0'};
</pre>
<p>If_you_follow_the_rule_of_array_initialization_then_you_can_write_the_above_statement_as_follows_−</p>
<pre_>char_greetingbr31br32_equal_"Hello";
</pre>
<p>Following_is_the_memory_presentation_of_the_above_defined_string_in_C/C___−</p>
<img_altequal"String_Presentation_in_C/C__"_srcequal"/cprogramming/images/string_representation_jpg">
<p>Actually,_you_do_not_place_the_<i>null</i>_character_at_the_end_of_a_string_constant__The_C_compiler_automatically_places_the_'\0'_at_the_end_of_the_string_when_it_initializes_the_array__Let_us_try_to_print_the_above_mentioned_string_−</p>
<div_>
<a__hrefequal"http://tpcg_io/P0muN5"_targetequal"_blank"_relequal"nofollow"><i_></i>_Live_Demo</a>
</div>
<pre_><span_>#include</span><span_>_</span><span_>****get it :lt;stdio_h****get it :gt;</span><span_>

</span><span_>int</span><span_>_main_</span><span_>()</span><span_>_</span><span_>{</span><span_>

___</span><span_>char</span><span_>_greeting</span><span_>br31</span><span_>6</span><span_>br32</span><span_>_</span><span_>equal</span><span_>_</span><span_>{</span><span_>'H'</span><span_>,</span><span_>_</span><span_>'e'</span><span_>,</span><span_>_</span><span_>'l'</span><span_>,</span><span_>_</span><span_>'l'</span><span_>,</span><span_>_</span><span_>'o'</span><span_>,</span><span_>_</span><span_>'\0'</span><span_>};</span><span_>
___printf</span><span_>(</span><span_>"Greeting_message:_%s\n"</span><span_>,</span><span_>_greeting_</span><span_>);</span><span_>
___</span><span_>return</span><span_>_</span><span_>0</span><span_>;</span><span_>
</span><span_>}</span></pre>
<p>When_the_above_code_is_compiled_and_executed,_it_produces_the_following_result_−</p>
<pre_>Greeting_message:_Hello
</pre>
<p>C_supports_a_wide_range_of_functions_that_manipulate_null-terminated_strings_−</p>
<table_>
<tbody><tr>
<th>Sr_No_</th>
<th_styleequal"text-align:center;">Function_****get it :amp;_Purpose</th>
</tr>
<tr>
<td_>1</td>
<td><p><b>strcpy(s1,_s2);</b></p>
<p>Copies_string_s2_into_string_s1_</p>
</td>
</tr>
<tr>
<td_>2</td>
<td><p><b>strcat(s1,_s2);</b></p>
<p>Concatenates_string_s2_onto_the_end_of_string_s1_</p>
</td>
</tr>
<tr>
<td_>3</td>
<td><p><b>strlen(s1);</b></p>
<p>Returns_the_length_of_string_s1_</p>
</td>
</tr>
<tr>
<td_>4</td>
<td><p><b>strcmp(s1,_s2);</b></p>
<p>Returns_0_if_s1_and_s2_are_the_same;_less_than_0_if_s1****get it :lt;s2;_greater_than_0_if_s1****get it :gt;s2_</p>
</td>
</tr>
<tr>
<td_>5</td>
<td><p><b>strchr(s1,_ch);</b></p>
<p>Returns_a_pointer_to_the_first_occurrence_of_character_ch_in_string_s1_</p>
</td>
</tr>
<tr>
<td_>6</td>
<td><p><b>strstr(s1,_s2);</b></p>
<p>Returns_a_pointer_to_the_first_occurrence_of_string_s2_in_string_s1_</p>
</td>
</tr>
</tbody></table>
<p>The_following_example_uses_some_of_the_above-mentioned_functions_−</p>
<div_>
<a__hrefequal"http://tpcg_io/VBA8Qx"_targetequal"_blank"_relequal"nofollow"><i_></i>_Live_Demo</a>
</div>
<pre_><span_>#include</span><span_>_</span><span_>****get it :gt;</span><span_>
</span><span_>#include</span><span_>_</span><span_>****get it :lt;string_h****get it :gt;</span><span_>

</span><span_>int</span><span_>_main_</span><span_>()</span><span_>_</span><span_>{</span><span_>

___</span><span_>char</span><span_>_str1</span><span_>br31</span><span_>12</span><span_>br32</span><span_>_</span><span_>equal</span><span_>_</span><span_>"Hello"</span><span_>;</span><span_>
___</span><span_>char</span><span_>_str2</span><span_>br31</span><span_>12</span><span_>br32</span><span_>_</span><span_>equal</span><span_>_</span><span_>"World"</span><span_>;</span><span_>
___</span><span_>char</span><span_>_str3</span><span_>br31</span><span_>12</span><span_>br32;</span><span_>
___</span><span_>int</span><span_>__len_</span><span_>;</span><span_>

___</span><span_>/*_copy_str1_into_str3_*/</span><span_>
___strcpy</span><span_>(</span><span_>str3</span><span_>,</span><span_>_str1</span><span_>);</span><span_>
___printf</span><span_>(</span><span_>"strcpy(_str3,_str1)_:__%s\n"</span><span_>,</span><span_>_str3_</span><span_>);</span><span_>

___</span><span_>/*_concatenates_str1_and_str2_*/</span><span_>
___strcat</span><span_>(</span><span_>_str1</span><span_>,</span><span_>_str2</span><span_>);</span><span_>
___printf</span><span_>(</span><span_>"strcat(_str1,_str2):___%s\n"</span><span_>,</span><span_>_str1_</span><span_>);</span><span_>

___</span><span_>/*_total_lenghth_of_str1_after_concatenation_*/</span><span_>
___len_</span><span_>equal</span><span_>_strlen</span><span_>(</span><span_>str1</span><span_>);</span><span_>
___printf</span><span_>(</span><span_>"strlen(str1)_:__%d\n"</span><span_>,</span><span_>_len_</span><span_>);</span><span_>

___</span><span_>return</span><span_>_</span><span_>0</span><span_>;</span><span_>
</span><span_>}</span></pre>
<p>When_the_above_code_is_compiled_and_executed,_it_produces_the_following_result_−</p>
<pre_>strcpy(_str3,_str1)_:__Hello
strcat(_str1,_str2):___HelloWorld
strlen(str1)_:__10
</pre>

______________****get it :<div_>
<h1>C_-_Strings</h1>
<hr>
<p>Strings_are_actually_one-dimensional_array_of_characters_terminated_by_a_<b>null</b>_character_'\0'__Thus_a_null-terminated_string_contains_the_characters_that_comprise_the_string_followed_by_a_<b>null</b>_</p>
<p>The_following_declaration_and_initialization_create_a_string_consisting_of_the_word_"Hello"__To_hold_the_null_character_at_the_end_of_the_array,_the_size_of_the_character_array_containing_the_string_is_one_more_than_the_number_of_characters_in_the_word_"Hello_"</p>
<pre_>char_greetingbr316br32_equal_{'H',_'e',_'l',_'l',_'o',_'\0'};
</pre>
<p>If_you_follow_the_rule_of_array_initialization_then_you_can_write_the_above_statement_as_follows_−</p>
<pre_>char_greetingbr31br32_equal_"Hello";
</pre>
<p>Following_is_the_memory_presentation_of_the_above_defined_string_in_C/C___−</p>
<img_altequal"String_Presentation_in_C/C__"_srcequal"/cprogramming/images/string_representation_jpg">
<p>Actually,_you_do_not_place_the_<i>null</i>_character_at_the_end_of_a_string_constant__The_C_compiler_automatically_places_the_'\0'_at_the_end_of_the_string_when_it_initializes_the_array__Let_us_try_to_print_the_above_mentioned_string_−</p>
<div_>
<a__hrefequal"http://tpcg_io/P0muN5"_targetequal"_blank"_relequal"nofollow"><i_></i>_Live_Demo</a>
</div>
<pre_><span_>#include</span><span_>_</span><span_>****get it :lt;stdio_h****get it :gt;</span><span_>

</span><span_>int</span><span_>_main_</span><span_>()</span><span_>_</span><span_>{</span><span_>

___</span><span_>char</span><span_>_greeting</span><span_>br31</span><span_>6</span><span_>br32</span><span_>_</span><span_>equal</span><span_>_</span><span_>{</span><span_>'H'</span><span_>,</span><span_>_</span><span_>'e'</span><span_>,</span><span_>_</span><span_>'l'</span><span_>,</span><span_>_</span><span_>'l'</span><span_>,</span><span_>_</span><span_>'o'</span><span_>,</span><span_>_</span><span_>'\0'</span><span_>};</span><span_>
___printf</span><span_>(</span><span_>"Greeting_message:_%s\n"</span><span_>,</span><span_>_greeting_</span><span_>);</span><span_>
___</span><span_>return</span><span_>_</span><span_>0</span><span_>;</span><span_>
</span><span_>}</span></pre>
<p>When_the_above_code_is_compiled_and_executed,_it_produces_the_following_result_−</p>
<pre_>Greeting_message:_Hello
</pre>
<p>C_supports_a_wide_range_of_functions_that_manipulate_null-terminated_strings_−</p>
<table_>
<tbody><tr>
<th>Sr_No_</th>
<th_styleequal"text-align:center;">Function_****get it :amp;_Purpose</th>
</tr>
<tr>
<td_>1</td>
<td><p><b>strcpy(s1,_s2);</b></p>
<p>Copies_string_s2_into_string_s1_</p>
</td>
</tr>
<tr>
<td_>2</td>
<td><p><b>strcat(s1,_s2);</b></p>
<p>Concatenates_string_s2_onto_the_end_of_string_s1_</p>
</td>
</tr>
<tr>
<td_>3</td>
<td><p><b>strlen(s1);</b></p>
<p>Returns_the_length_of_string_s1_</p>
</td>
</tr>
<tr>
<td_>4</td>
<td><p><b>strcmp(s1,_s2);</b></p>
<p>Returns_0_if_s1_and_s2_are_the_same;_less_than_0_if_s1****get it :lt;s2;_greater_than_0_if_s1****get it :gt;s2_</p>
</td>
</tr>
<tr>
<td_>5</td>
<td><p><b>strchr(s1,_ch);</b></p>
<p>Returns_a_pointer_to_the_first_occurrence_of_character_ch_in_string_s1_</p>
</td>
</tr>
<tr>
<td_>6</td>
<td><p><b>strstr(s1,_s2);</b></p>
<p>Returns_a_pointer_to_the_first_occurrence_of_string_s2_in_string_s1_</p>
</td>
</tr>
</tbody></table>
<p>The_following_example_uses_some_of_the_above-mentioned_functions_−</p>
<div_>
<a__hrefequal"http://tpcg_io/VBA8Qx"_targetequal"_blank"_relequal"nofollow"><i_></i>_Live_Demo</a>
</div>
<pre_><span_>#include</span><span_>_</span><span_>****get it :gt;</span><span_>
</span><span_>#include</span><span_>_</span><span_>****get it :lt;string_h****get it :gt;</span><span_>

</span><span_>int</span><span_>_main_</span><span_>()</span><span_>_</span><span_>{</span><span_>

___</span><span_>char</span><span_>_str1</span><span_>br31</span><span_>12</span><span_>br32</span><span_>_</span><span_>equal</span><span_>_</span><span_>"Hello"</span><span_>;</span><span_>
___</span><span_>char</span><span_>_str2</span><span_>br31</span><span_>12</span><span_>br32</span><span_>_</span><span_>equal</span><span_>_</span><span_>"World"</span><span_>;</span><span_>
___</span><span_>char</span><span_>_str3</span><span_>br31</span><span_>12</span><span_>br32;</span><span_>
___</span><span_>int</span><span_>__len_</span><span_>;</span><span_>

___</span><span_>/*_copy_str1_into_str3_*/</span><span_>
___strcpy</span><span_>(</span><span_>str3</span><span_>,</span><span_>_str1</span><span_>);</span><span_>
___printf</span><span_>(</span><span_>"strcpy(_str3,_str1)_:__%s\n"</span><span_>,</span><span_>_str3_</span><span_>);</span><span_>

___</span><span_>/*_concatenates_str1_and_str2_*/</span><span_>
___strcat</span><span_>(</span><span_>_str1</span><span_>,</span><span_>_str2</span><span_>);</span><span_>
___printf</span><span_>(</span><span_>"strcat(_str1,_str2):___%s\n"</span><span_>,</span><span_>_str1_</span><span_>);</span><span_>

___</span><span_>/*_total_lenghth_of_str1_after_concatenation_*/</span><span_>
___len_</span><span_>equal</span><span_>_strlen</span><span_>(</span><span_>str1</span><span_>);</span><span_>
___printf</span><span_>(</span><span_>"strlen(str1)_:__%d\n"</span><span_>,</span><span_>_len_</span><span_>);</span><span_>

___</span><span_>return</span><span_>_</span><span_>0</span><span_>;</span><span_>
</span><span_>}</span></pre>
<p>When_the_above_code_is_compiled_and_executed,_it_produces_the_following_result_−</p>
<pre_>strcpy(_str3,_str1)_:__Hello
strcat(_str1,_str2):___HelloWorld
strlen(str1)_:__10
</pre>

______________****get it :echo_substr('a,b,c,d,e,',_0,_-1);****get it :<?php
echo_substr('a,b,c,d,e,',_0,_-1);
?>****get it :<div_classequalmui-col-md-6_tutorial-content>
<h1>C_-_Strings</h1>
<hr>

<p>Strings_are_actually_one-dimensional_array_of_characters_terminated_by_a_<b>null</b>_character_�__Thus_a_null-terminated_string_contains_the_characters_that_comprise_the_string_followed_by_a_<b>null</b>_</p>
<p>The_following_declaration_and_initialization_create_a_string_consisting_of_the_word_Hello__To_hold_the_null_character_at_the_end_of_the_array,_the_size_of_the_character_array_containing_the_string_is_one_more_than_the_number_of_characters_in_the_word_Hello_</p>
<pre_classequalresult_notranslate>char_greetingbr316br32_equal_{H,_e,_l,_l,_o,_�};
</pre>
<p>If_you_follow_the_rule_of_array_initialization_then_you_can_write_the_above_statement_as_follows_âˆ’</p>
<pre_classequalresult_notranslate>char_greetingbr31br32_equal_Hello;
</pre>
<p>Following_is_the_memory_presentation_of_the_above_defined_string_in_C/C___âˆ’</p>
<img_altequalString_Presentation_in_C/C___srcequal/cprogramming/images/string_representation_jpg>
<p>Actually,_you_do_not_place_the_<i>null</i>_character_at_the_end_of_a_string_constant__The_C_compiler_automatically_places_the_�_at_the_end_of_the_string_when_it_initializes_the_array__Let_us_try_to_print_the_above_mentioned_string_âˆ’</p>
<div_classequaldemo-view>
<a_classequaldemo_hrefequalhttp://tpcg_io/P0muN5_targetequal_blank_relequalnofollow><i_classequalfa-external-link></i>_Live_Demo</a>
</div>
<pre_classequalprettyprint_notranslate_prettyprinted><span_classequalcom>#include</span><span_classequalpln>_</span><span_classequalstr>****get it :lt;stdio_h****get it :gt;</span><span_classequalpln>

</span><span_classequalkwd>int</span><span_classequalpln>_main_</span><span_classequalpun>()</span><span_classequalpln>_</span><span_classequalpun>{</span><span_classequalpln>

___</span><span_classequalkwd>char</span><span_classequalpln>_greeting</span><span_classequalpun>br31</span><span_classequallit>6</span><span_classequalpun>br32</span><span_classequalpln>_</span><span_classequalpun>equal</span><span_classequalpln>_</span><span_classequalpun>{</span><span_classequalstr>H</span><span_classequalpun>,</span><span_classequalpln>_</span><span_classequalstr>e</span><span_classequalpun>,</span><span_classequalpln>_</span><span_classequalstr>l</span><span_classequalpun>,</span><span_classequalpln>_</span><span_classequalstr>l</span><span_classequalpun>,</span><span_classequalpln>_</span><span_classequalstr>o</span><span_classequalpun>,</span><span_classequalpln>_</span><span_classequalstr>�</span><span_classequalpun>};</span><span_classequalpln>
___printf</span><span_classequalpun>(</span><span_classequalstr>Greeting_message:_%s
</span><span_classequalpun>,</span><span_classequalpln>_greeting_</span><span_classequalpun>);</span><span_classequalpln>
___</span><span_classequalkwd>return</span><span_classequalpln>_</span><span_classequallit>0</span><span_classequalpun>;</span><span_classequalpln>
</span><span_classequalpun>}</span></pre>
<p>When_the_above_code_is_compiled_and_executed,_it_produces_the_following_result_âˆ’</p>
<pre_classequalresult_notranslate>Greeting_message:_Hello
</pre>
<p>C_supports_a_wide_range_of_functions_that_manipulate_null-terminated_strings_âˆ’</p>
<table_classequaltable_table-bordered>
<tbody><tr>
<th>Sr_No_</th>
<th_styleequaltext-align:center;>Function_****get it :amp;_Purpose</th>
</tr>
<tr>
<td_classequalts>1</td>
<td><p><b>strcpy(s1,_s2);</b></p>
<p>Copies_string_s2_into_string_s1_</p>
</td>
</tr>
<tr>
<td_classequalts>2</td>
<td><p><b>strcat(s1,_s2);</b></p>
<p>Concatenates_string_s2_onto_the_end_of_string_s1_</p>
</td>
</tr>
<tr>
<td_classequalts>3</td>
<td><p><b>strlen(s1);</b></p>
<p>Returns_the_length_of_string_s1_</p>
</td>
</tr>
<tr>
<td_classequalts>4</td>
<td><p><b>strcmp(s1,_s2);</b></p>
<p>Returns_0_if_s1_and_s2_are_the_same;_less_than_0_if_s1****get it :lt;s2;_greater_than_0_if_s1****get it :gt;s2_</p>
</td>
</tr>
<tr>
<td_classequalts>5</td>
<td><p><b>strchr(s1,_ch);</b></p>
<p>Returns_a_pointer_to_the_first_occurrence_of_character_ch_in_string_s1_</p>
</td>
</tr>
<tr>
<td_classequalts>6</td>
<td><p><b>strstr(s1,_s2);</b></p>
<p>Returns_a_pointer_to_the_first_occurrence_of_string_s2_in_string_s1_</p>
</td>
</tr>
</tbody></table>
<p>The_following_example_uses_some_of_the_above-mentioned_functions_âˆ’</p>
<div_classequaldemo-view>
<a_classequaldemo_hrefequalhttp://tpcg_io/VBA8Qx_targetequal_blank_relequalnofollow><i_classequalfa-external-link></i>_Live_Demo</a>
</div>
<pre_classequalprettyprint_notranslate_prettyprinted><span_classequalcom>#include</span><span_classequalpln>_</span><span_classequalstr>****get it :gt;</span><span_classequalpln>
</span><span_classequalcom>#include</span><span_classequalpln>_</span><span_classequalstr>****get it :lt;string_h****get it :gt;</span><span_classequalpln>

</span><span_classequalkwd>int</span><span_classequalpln>_main_</span><span_classequalpun>()</span><span_classequalpln>_</span><span_classequalpun>{</span><span_classequalpln>

___</span><span_classequalkwd>char</span><span_classequalpln>_str1</span><span_classequalpun>br31</span><span_classequallit>12</span><span_classequalpun>br32</span><span_classequalpln>_</span><span_classequalpun>equal</span><span_classequalpln>_</span><span_classequalstr>Hello</span><span_classequalpun>;</span><span_classequalpln>
___</span><span_classequalkwd>char</span><span_classequalpln>_str2</span><span_classequalpun>br31</span><span_classequallit>12</span><span_classequalpun>br32</span><span_classequalpln>_</span><span_classequalpun>equal</span><span_classequalpln>_</span><span_classequalstr>World</span><span_classequalpun>;</span><span_classequalpln>
___</span><span_classequalkwd>char</span><span_classequalpln>_str3</span><span_classequalpun>br31</span><span_classequallit>12</span><span_classequalpun>br32;</span><span_classequalpln>
___</span><span_classequalkwd>int</span><span_classequalpln>__len_</span><span_classequalpun>;</span><span_classequalpln>

___</span><span_classequalcom>/*_copy_str1_into_str3_*/</span><span_classequalpln>
___strcpy</span><span_classequalpun>(</span><span_classequalpln>str3</span><span_classequalpun>,</span><span_classequalpln>_str1</span><span_classequalpun>);</span><span_classequalpln>
___printf</span><span_classequalpun>(</span><span_classequalstr>strcpy(_str3,_str1)_:__%s
</span><span_classequalpun>,</span><span_classequalpln>_str3_</span><span_classequalpun>);</span><span_classequalpln>

___</span><span_classequalcom>/*_concatenates_str1_and_str2_*/</span><span_classequalpln>
___strcat</span><span_classequalpun>(</span><span_classequalpln>_str1</span><span_classequalpun>,</span><span_classequalpln>_str2</span><span_classequalpun>);</span><span_classequalpln>
___printf</span><span_classequalpun>(</span><span_classequalstr>strcat(_str1,_str2):___%s
</span><span_classequalpun>,</span><span_classequalpln>_str1_</span><span_classequalpun>);</span><span_classequalpln>

___</span><span_classequalcom>/*_total_lenghth_of_str1_after_concatenation_*/</span><span_classequalpln>
___len_</span><span_classequalpun>equal</span><span_classequalpln>_strlen</span><span_classequalpun>(</span><span_classequalpln>str1</span><span_classequalpun>);</span><span_classequalpln>
___printf</span><span_classequalpun>(</span><span_classequalstr>strlen(str1)_:__%d
</span><span_classequalpun>,</span><span_classequalpln>_len_</span><span_classequalpun>);</span><span_classequalpln>

___</span><span_classequalkwd>return</span><span_classequalpln>_</span><span_classequallit>0</span><span_classequalpun>;</span><span_classequalpln>
</span><span_classequalpun>}</span></pre>
<p>When_the_above_code_is_compiled_and_executed,_it_produces_the_following_result_âˆ’</p>
<pre_classequalresult_notranslate>strcpy(_str3,_str1)_:__Hello
strcat(_str1,_str2):___HelloWorld
strlen(str1)_:__10
</pre>

______________****get it :<div_classequalmui-col-md-6_tutorial-content>
<h1>C_-_Strings</h1>
<hr>

<p>Strings_are_actually_one-dimensional_array_of_characters_terminated_by_a_<b>null</b>_character_�__Thus_a_null-terminated_string_contains_the_characters_that_comprise_the_string_followed_by_a_<b>null</b>_</p>
<p>The_following_declaration_and_initialization_create_a_string_consisting_of_the_word_Hello__To_hold_the_null_character_at_the_end_of_the_array,_the_size_of_the_character_array_containing_the_string_is_one_more_than_the_number_of_characters_in_the_word_Hello_</p>
<pre_classequalresult_notranslate>char_greetingbr316br32_equal_{H,_e,_l,_l,_o,_�};
</pre>
<p>If_you_follow_the_rule_of_array_initialization_then_you_can_write_the_above_statement_as_follows_âˆ’</p>
<pre_classequalresult_notranslate>char_greetingbr31br32_equal_Hello;
</pre>
<p>Following_is_the_memory_presentation_of_the_above_defined_string_in_C/C___âˆ’</p>
<img_altequalString_Presentation_in_C/C___srcequal/cprogramming/images/string_representation_jpg>
<p>Actually,_you_do_not_place_the_<i>null</i>_character_at_the_end_of_a_string_constant__The_C_compiler_automatically_places_the_�_at_the_end_of_the_string_when_it_initializes_the_array__Let_us_try_to_print_the_above_mentioned_string_âˆ’</p>
<div_classequaldemo-view>
<a_classequaldemo_hrefequalhttp://tpcg_io/P0muN5_targetequal_blank_relequalnofollow><i_classequalfa-external-link></i>_Live_Demo</a>
</div>
<pre_classequalprettyprint_notranslate_prettyprinted><span_classequalcom>#include</span><span_classequalpln>_</span><span_classequalstr>****get it :lt;stdio_h****get it :gt;</span><span_classequalpln>

</span><span_classequalkwd>int</span><span_classequalpln>_main_</span><span_classequalpun>()</span><span_classequalpln>_</span><span_classequalpun>{</span><span_classequalpln>

___</span><span_classequalkwd>char</span><span_classequalpln>_greeting</span><span_classequalpun>br31</span><span_classequallit>6</span><span_classequalpun>br32</span><span_classequalpln>_</span><span_classequalpun>equal</span><span_classequalpln>_</span><span_classequalpun>{</span><span_classequalstr>H</span><span_classequalpun>,</span><span_classequalpln>_</span><span_classequalstr>e</span><span_classequalpun>,</span><span_classequalpln>_</span><span_classequalstr>l</span><span_classequalpun>,</span><span_classequalpln>_</span><span_classequalstr>l</span><span_classequalpun>,</span><span_classequalpln>_</span><span_classequalstr>o</span><span_classequalpun>,</span><span_classequalpln>_</span><span_classequalstr>�</span><span_classequalpun>};</span><span_classequalpln>
___printf</span><span_classequalpun>(</span><span_classequalstr>Greeting_message:_%s
</span><span_classequalpun>,</span><span_classequalpln>_greeting_</span><span_classequalpun>);</span><span_classequalpln>
___</span><span_classequalkwd>return</span><span_classequalpln>_</span><span_classequallit>0</span><span_classequalpun>;</span><span_classequalpln>
</span><span_classequalpun>}</span></pre>
<p>When_the_above_code_is_compiled_and_executed,_it_produces_the_following_result_âˆ’</p>
<pre_classequalresult_notranslate>Greeting_message:_Hello
</pre>
<p>C_supports_a_wide_range_of_functions_that_manipulate_null-terminated_strings_âˆ’</p>
<table_classequaltable_table-bordered>
<tbody><tr>
<th>Sr_No_</th>
<th_styleequaltext-align:center;>Function_****get it :amp;_Purpose</th>
</tr>
<tr>
<td_classequalts>1</td>
<td><p><b>strcpy(s1,_s2);</b></p>
<p>Copies_string_s2_into_string_s1_</p>
</td>
</tr>
<tr>
<td_classequalts>2</td>
<td><p><b>strcat(s1,_s2);</b></p>
<p>Concatenates_string_s2_onto_the_end_of_string_s1_</p>
</td>
</tr>
<tr>
<td_classequalts>3</td>
<td><p><b>strlen(s1);</b></p>
<p>Returns_the_length_of_string_s1_</p>
</td>
</tr>
<tr>
<td_classequalts>4</td>
<td><p><b>strcmp(s1,_s2);</b></p>
<p>Returns_0_if_s1_and_s2_are_the_same;_less_than_0_if_s1****get it :lt;s2;_greater_than_0_if_s1****get it :gt;s2_</p>
</td>
</tr>
<tr>
<td_classequalts>5</td>
<td><p><b>strchr(s1,_ch);</b></p>
<p>Returns_a_pointer_to_the_first_occurrence_of_character_ch_in_string_s1_</p>
</td>
</tr>
<tr>
<td_classequalts>6</td>
<td><p><b>strstr(s1,_s2);</b></p>
<p>Returns_a_pointer_to_the_first_occurrence_of_string_s2_in_string_s1_</p>
</td>
</tr>
</tbody></table>
<p>The_following_example_uses_some_of_the_above-mentioned_functions_âˆ’</p>
<div_classequaldemo-view>
<a_classequaldemo_hrefequalhttp://tpcg_io/VBA8Qx_targetequal_blank_relequalnofollow><i_classequalfa-external-link></i>_Live_Demo</a>
</div>
<pre_classequalprettyprint_notranslate_prettyprinted><span_classequalcom>#include</span><span_classequalpln>_</span><span_classequalstr>****get it :gt;</span><span_classequalpln>
</span><span_classequalcom>#include</span><span_classequalpln>_</span><span_classequalstr>****get it :lt;string_h****get it :gt;</span><span_classequalpln>

</span><span_classequalkwd>int</span><span_classequalpln>_main_</span><span_classequalpun>()</span><span_classequalpln>_</span><span_classequalpun>{</span><span_classequalpln>

___</span><span_classequalkwd>char</span><span_classequalpln>_str1</span><span_classequalpun>br31</span><span_classequallit>12</span><span_classequalpun>br32</span><span_classequalpln>_</span><span_classequalpun>equal</span><span_classequalpln>_</span><span_classequalstr>Hello</span><span_classequalpun>;</span><span_classequalpln>
___</span><span_classequalkwd>char</span><span_classequalpln>_str2</span><span_classequalpun>br31</span><span_classequallit>12</span><span_classequalpun>br32</span><span_classequalpln>_</span><span_classequalpun>equal</span><span_classequalpln>_</span><span_classequalstr>World</span><span_classequalpun>;</span><span_classequalpln>
___</span><span_classequalkwd>char</span><span_classequalpln>_str3</span><span_classequalpun>br31</span><span_classequallit>12</span><span_classequalpun>br32;</span><span_classequalpln>
___</span><span_classequalkwd>int</span><span_classequalpln>__len_</span><span_classequalpun>;</span><span_classequalpln>

___</span><span_classequalcom>/*_copy_str1_into_str3_*/</span><span_classequalpln>
___strcpy</span><span_classequalpun>(</span><span_classequalpln>str3</span><span_classequalpun>,</span><span_classequalpln>_str1</span><span_classequalpun>);</span><span_classequalpln>
___printf</span><span_classequalpun>(</span><span_classequalstr>strcpy(_str3,_str1)_:__%s
</span><span_classequalpun>,</span><span_classequalpln>_str3_</span><span_classequalpun>);</span><span_classequalpln>

___</span><span_classequalcom>/*_concatenates_str1_and_str2_*/</span><span_classequalpln>
___strcat</span><span_classequalpun>(</span><span_classequalpln>_str1</span><span_classequalpun>,</span><span_classequalpln>_str2</span><span_classequalpun>);</span><span_classequalpln>
___printf</span><span_classequalpun>(</span><span_classequalstr>strcat(_str1,_str2):___%s
</span><span_classequalpun>,</span><span_classequalpln>_str1_</span><span_classequalpun>);</span><span_classequalpln>

___</span><span_classequalcom>/*_total_lenghth_of_str1_after_concatenation_*/</span><span_classequalpln>
___len_</span><span_classequalpun>equal</span><span_classequalpln>_strlen</span><span_classequalpun>(</span><span_classequalpln>str1</span><span_classequalpun>);</span><span_classequalpln>
___printf</span><span_classequalpun>(</span><span_classequalstr>strlen(str1)_:__%d
</span><span_classequalpun>,</span><span_classequalpln>_len_</span><span_classequalpun>);</span><span_classequalpln>

___</span><span_classequalkwd>return</span><span_classequalpln>_</span><span_classequallit>0</span><span_classequalpun>;</span><span_classequalpln>
</span><span_classequalpun>}</span></pre>
<p>When_the_above_code_is_compiled_and_executed,_it_produces_the_following_result_âˆ’</p>
<pre_classequalresult_notranslate>strcpy(_str3,_str1)_:__Hello
strcat(_str1,_str2):___HelloWorld
strlen(str1)_:__10
</pre>

______________****get it :<div_>
<div_></div>
<div__styleequal"margin:_0px_auto_!important;margin-top:5px;">
<div__styleequal"margin:_0px_auto_!important;_display:_block_!important;_position:_relative_!important;_z-index:_0_!important;"_data-ad-slotequal"vi_9012177"_data-idequal"vi_9012177_1"><div_idequal"vi_9012177_1"_styleequal"margin:_0px_auto_!important;_width:_300px_!important;_height:_250px_!important;_position:_relative_!important;"_data-ad-slotequal"vi_9012177"_data-google-query-idequal"COPg06Sfk-cCFcV7Kwodq2cEwA"_isset-adequal"1"_content-typeequal"ad"><div__idequal"sf_pos_rel_el_vli_sf_vi_9012177_1"_styleequal"width:_300px;_height:_250px;_visibility:_inherit;_position:_relative;_z-index:_0;"><iframe_tabindexequal"-1"_idequal"vli_sf_vi_9012177_1"_srcequal"//assets_bilsyndication_com/plugins/safeframe/src/html/r_html"_frameborderequal"no"_marginwidthequal"0"_marginheightequal"0"_scrollingequal"no"_styleequal"left:_0px;_top:_0px;_width:_300px;_height:_250px;_display:_block;_visibility:_inherit;_position:_absolute;_z-index:_0;_max-height:_none;_max-width:_none;"_hidefocusequal"true"_allowtransparencyequal"true"></iframe></div><viicon_titleequal"Visit_valueimpression_com"__styleequal"margin:_0px_!important;_padding:_0px_!important;_transition:width_0_3s,_opacity_0_3s_ease-in-out_!important;_left:_0px_!important;_width:_16px_!important;_height:_16px_!important;_bottom:_0px_!important;_overflow:_hidden_!important;_position:_absolute_!important;_z-index:_9999_!important;_cursor:_pointer;_opacity:_1_!important;_border-top-right-radius:_5px_!important;_background-color:_rgba(255,_255,_255,_0_9)_!important;">
________________<viicon_styleequal"display:block;width:132px;">
____________________<viicon_styleequal"float:left;display:inline-block;height:14px;width:14px;padding:1px;">
________________________<viicon_styleequal"display:block;width:14px;height:14px;">
____________________________<viicon_styleequal"display:inherit!important;margin-top:0_5px!important;width:14px!important;height:13px!important;background-image:url('//assets_bilsyndication_com/media/icon/vi-icon_svg')!important;background-size:cover!important;"></viicon>
________________________</viicon>
____________________</viicon>
____________________<viicon_styleequal"float:left;display:block;white-space:nowrap;height:12px;padding:2px;">
________________________<viicon__styleequal"display:block;text-decoration:none;color:#333;font-family:Arial;line-height:8px;font-weight:400;"_targetequal"_blank">
____________________________<viicon_styleequal"font-size:10px!important;font-family:inherit!important;">Ad_by</viicon>_<viicon_styleequal"font-size:11px!important;font-family:inherit!important;">Valueimpression</viicon>
________________________</viicon>
____________________</viicon>
____________________<viicon_styleequal"clear:both;"></viicon>
________________</viicon>
________________</viicon></div></div><script>(vitag_Init_equal_window_vitag_Init_||_br31br32)_push(function(){viAPItag_display("vi_9012177")})</script>
</div>
<div__styleequal"margin-top:16px;">
<div__styleequal"margin:_0px_auto_!important;_display:_block_!important;_position:_relative_!important;_z-index:_0_!important;"_data-ad-slotequal"vi_9017966"_data-idequal"vi_9017966_1"><div_idequal"vi_9017966_1"_styleequal"margin:_0px_auto;_width:_300px_!important;_height:_250px_!important;_position:_relative_!important;"_data-ad-slotequal"vi_9017966"_data-google-query-idequal"CJe11aSfk-cCFdShaAodUkgNfQ"_isset-adequal"1"_content-typeequal"ad"><div_idequal"google_ads_iframe_/21766281334/Prebid/Prebid_Display_003_2__container__"_styleequal"border:_0pt;_border-image:_none;_width:_300px;_height:_250px;_display:_inline-block;"><iframe_widthequal"300"_heightequal"250"_titleequal"3rd_party_ad_content"_idequal"google_ads_iframe_/21766281334/Prebid/Prebid_Display_003_2"_srcequal"https://tpc_googlesyndication_com/safeframe/1-0-37/html/container_html"_frameborderequal"0"_marginwidthequal"0"_marginheightequal"0"_scrollingequal"no"_styleequal"border:_0px;_border-image:_none;_vertical-align:_bottom;"_sandboxequal"allow-forms_allow-pointer-lock_allow-popups_allow-popups-to-escape-sandbox_allow-same-origin_allow-scripts_allow-top-navigation-by-user-activation"_data-is-safeframeequal"true"_data-google-container-idequal"3"_data-load-completeequal"true"></iframe></div><viicon_titleequal"Visit_valueimpression_com"__styleequal"margin:_0px_!important;_padding:_0px_!important;_transition:width_0_3s,_opacity_0_3s_ease-in-out_!important;_left:_0px_!important;_width:_16px_!important;_height:_16px_!important;_bottom:_0px_!important;_overflow:_hidden_!important;_position:_absolute_!important;_z-index:_9999_!important;_cursor:_pointer;_opacity:_1_!important;_border-top-right-radius:_5px_!important;_background-color:_rgba(255,_255,_255,_0_9)_!important;">
________________<viicon_styleequal"display:block;width:132px;">
____________________<viicon_styleequal"float:left;display:inline-block;height:14px;width:14px;padding:1px;">
________________________<viicon_styleequal"display:block;width:14px;height:14px;">
____________________________<viicon_styleequal"display:inherit!important;margin-top:0_5px!important;width:14px!important;height:13px!important;background-image:url('//assets_bilsyndication_com/media/icon/vi-icon_svg')!important;background-size:cover!important;"></viicon>
________________________</viicon>
____________________</viicon>
____________________<viicon_styleequal"float:left;display:block;white-space:nowrap;height:12px;padding:2px;">
________________________<viicon__styleequal"display:block;text-decoration:none;color:#333;font-family:Arial;line-height:8px;font-weight:400;"_targetequal"_blank">
____________________________<viicon_styleequal"font-size:10px!important;font-family:inherit!important;">Ad_by</viicon>_<viicon_styleequal"font-size:11px!important;font-family:inherit!important;">Valueimpression</viicon>
________________________</viicon>
____________________</viicon>
____________________<viicon_styleequal"clear:both;"></viicon>
________________</viicon>
________________</viicon></div></div><script>(vitag_Init_equal_window_vitag_Init_||_br31br32)_push(function(){viAPItag_display("vi_9017966")})</script>
</div>
<div__styleequal"margin-top:16px;margin-bottom:15px;">
<div_styleequal"margin:_0px_auto_!important;_width:_300px_!important;"><div__idequal"vi_9013289"_styleequal"margin:_0px_auto;_width:_300px;_height:_228px;_overflow:_hidden;"_data-ad-slotequal"vi_9013289"_data-top-articlesequal"true"><style>#disableFixedTopArticles{display:_none;width:_10px;_height:_10px;_background-color:_rgba(0,_0,_0,_0_65);_border-radius:_50%;_padding:_5px;_cursor:_pointer}</style><div_idequal"disableFixedTopArticles"><svg_xmlnsequal"http://www_w3_org/2000/svg"_displayequal"inherit"_styleequal"box-sizing:unset!important;height:100%;width:100%"_viewBoxequal"0_0_92_132_92_132"_enable-backgroundequal"new_0_0_92_132_92_132"_versionequal"1_1"_xmlns:xmlequal"http://www_w3_org/XML/1998/namespace"_xml:spaceequal"preserve"><path__fillequal"#fff"_dequal"m_2_141_89_13_c_1_425_1_429_3_299_2_142_5_167_2_142_c_1_869_0_3_742_-0_713_5_167_-2_142_l_33_591_-33_592_l_33_591_33_592_c_1_426_1_429_3_299_2_142_5_167_2_142_c_1_867_0_3_74_-0_713_5_167_-2_142_c_2_854_-2_854_2_854_-7_48_0_-10_334_l_-33_593_-33_591_l_31_869_-31_869_c_2_855_-2_853_2_855_-7_481_0_-10_334_c_-2_853_-2_855_-7_479_-2_855_-10_334_0_l_-31_868_31_868_l_-31_867_-31_869_c_-2_854_-2_855_-7_481_-2_855_-10_333_0_c_-2_855_2_853_-2_855_7_481_0_10_334_l_31_868_31_869_l_-33_59_33_591_c_-2_857_2_853_-2_857_7_479_-0_002_10_335_Z"_data-originalequal"#000000"_data-old_colorequal"#ffffff"_/></svg></div><iframe__idequal"ifr_vi_9013289"_srcequal"about:blank"_frameborderequal"0"_marginwidthequal"0"_marginheightequal"0"_scrollingequal"no"_styleequal"width:_300px;_height:_228px;"_allowtransparencyequal"true"_leftmarginequal"0"_topmarginequal"0"></iframe></div><div__styleequal"padding:_13px_3px_8px_0px;_transition:opacity_0_3s_ease-in-out;_text-align:_right;_opacity:_1;"><span_styleequal"font-family:_Arial,Helvetica_Neue,Helvetica,sans-serif;font-size:_13px;"><span>cool_by_</span><span_styleequal"font-weight:_bold;text-transform:_capitalize;">Valueimpression</span></span></div><div__styleequal"margin:_0px_auto_!important;_display:_block_!important;_position:_relative_!important;_z-index:_0_!important;"_data-ad-slotequal"vi_9013289"_data-idequal"vi_9013289_1"><div_idequal"vi_9013289_1"_styleequal"margin:_0px_auto;_width:_300px_!important;_height:_250px_!important;_position:_relative_!important;"_data-ad-slotequal"vi_9013289"_data-google-query-idequal"CIqx2KSfk-cCFT6BSwUd1IoHgQ"_isset-adequal"1"_content-typeequal"ad"><div_idequal"google_ads_iframe_/21766281334/Prebid/Prebid_Display_003_3__container__"_styleequal"border:_0pt;_border-image:_none;"><iframe_nameequal"google_ads_iframe_/21766281334/Prebid/Prebid_Display_003_3"_widthequal"300"_heightequal"250"_titleequal"3rd_party_ad_content"_idequal"google_ads_iframe_/21766281334/Prebid/Prebid_Display_003_3"_frameborderequal"0"_marginwidthequal"0"_marginheightequal"0"_scrollingequal"no"_styleequal"border:_0px;_border-image:_none;_vertical-align:_bottom;"_data-google-container-idequal"4"_data-load-completeequal"true"></iframe></div><viicon_titleequal"Visit_valueimpression_com"__styleequal"margin:_0px_!important;_padding:_0px_!important;_transition:width_0_3s,_opacity_0_3s_ease-in-out_!important;_left:_0px_!important;_width:_16px_!important;_height:_16px_!important;_bottom:_0px_!important;_overflow:_hidden_!important;_position:_absolute_!important;_z-index:_9999_!important;_cursor:_pointer;_opacity:_1_!important;_border-top-right-radius:_5px_!important;_background-color:_rgba(255,_255,_255,_0_9)_!important;">
________________<viicon_styleequal"display:block;width:132px;">
____________________<viicon_styleequal"float:left;display:inline-block;height:14px;width:14px;padding:1px;">
________________________<viicon_styleequal"display:block;width:14px;height:14px;">
____________________________<viicon_styleequal"display:inherit!important;margin-top:0_5px!important;width:14px!important;height:13px!important;background-image:url('//assets_bilsyndication_com/media/icon/vi-icon_svg')!important;background-size:cover!important;"></viicon>
________________________</viicon>
____________________</viicon>
____________________<viicon_styleequal"float:left;display:block;white-space:nowrap;height:12px;padding:2px;">
________________________<viicon__styleequal"display:block;text-decoration:none;color:#333;font-family:Arial;line-height:8px;font-weight:400;"_targetequal"_blank">
____________________________<viicon_styleequal"font-size:10px!important;font-family:inherit!important;">Ad_by</viicon>_<viicon_styleequal"font-size:11px!important;font-family:inherit!important;">Valueimpression</viicon>
________________________</viicon>
____________________</viicon>
____________________<viicon_styleequal"clear:both;"></viicon>
________________</viicon>
________________</viicon></div></div></div><script>(vitag_Init_equal_window_vitag_Init_||_br31br32)_push(function(){viAPItag_display("vi_9013289")})</script>
</div>
<div__styleequal"margin-bottom:15px;"></div>
</div>****get it :<div_>
<h1>C_-_Strings</h1>
<hr>


<br>
<div_>
<div_>
<a_hrefequal"/cprogramming/c_pointers_htm"><i_></i>_Previous_Page</a>
</div>
<div_>
<a_hrefequal"/cprogramming/c_structures_htm">Next_Page_<i_></i>****get it :nbsp;</a>
</div>
</div>
<p>Strings_are_actually_one-dimensional_array_of_characters_terminated_by_a_<b>null</b>_character_'\0'__Thus_a_null-terminated_string_contains_the_characters_that_comprise_the_string_followed_by_a_<b>null</b>_</p>
<p>The_following_declaration_and_initialization_create_a_string_consisting_of_the_word_"Hello"__To_hold_the_null_character_at_the_end_of_the_array,_the_size_of_the_character_array_containing_the_string_is_one_more_than_the_number_of_characters_in_the_word_"Hello_"</p>
<pre_>char_greetingbr316br32_equal_{'H',_'e',_'l',_'l',_'o',_'\0'};
</pre>
<p>If_you_follow_the_rule_of_array_initialization_then_you_can_write_the_above_statement_as_follows_−</p>
<pre_>char_greetingbr31br32_equal_"Hello";
</pre>
<p>Following_is_the_memory_presentation_of_the_above_defined_string_in_C/C___−</p>
<img_srcequal"/cprogramming/images/string_representation_jpg"_altequal"String_Presentation_in_C/C__">
<p>Actually,_you_do_not_place_the_<i>null</i>_character_at_the_end_of_a_string_constant__The_C_compiler_automatically_places_the_'\0'_at_the_end_of_the_string_when_it_initializes_the_array__Let_us_try_to_print_the_above_mentioned_string_−</p>
<div_>
<a_hrefequal"http://tpcg_io/P0muN5"_targetequal"_blank"_relequal"nofollow"_><i_></i>_Live_Demo</a>
</div>
<pre__styleequal""><span_>#include</span><span_>_</span><span_>****get it :lt;stdio_h****get it :gt;</span><span_>

</span><span_>int</span><span_>_main_</span><span_>()</span><span_>_</span><span_>{</span><span_>

___</span><span_>char</span><span_>_greeting</span><span_>br31</span><span_>6</span><span_>br32</span><span_>_</span><span_>equal</span><span_>_</span><span_>{</span><span_>'H'</span><span_>,</span><span_>_</span><span_>'e'</span><span_>,</span><span_>_</span><span_>'l'</span><span_>,</span><span_>_</span><span_>'l'</span><span_>,</span><span_>_</span><span_>'o'</span><span_>,</span><span_>_</span><span_>'\0'</span><span_>};</span><span_>
___printf</span><span_>(</span><span_>"Greeting_message:_%s\n"</span><span_>,</span><span_>_greeting_</span><span_>);</span><span_>
___</span><span_>return</span><span_>_</span><span_>0</span><span_>;</span><span_>
</span><span_>}</span></pre>
<p>When_the_above_code_is_compiled_and_executed,_it_produces_the_following_result_−</p>
<pre_>Greeting_message:_Hello
</pre>
<p>C_supports_a_wide_range_of_functions_that_manipulate_null-terminated_strings_−</p>
<table_>
<tbody><tr>
<th>Sr_No_</th>
<th_styleequal"text-align:center;">Function_****get it :amp;_Purpose</th>
</tr>
<tr>
<td_>1</td>
<td><p><b>strcpy(s1,_s2);</b></p>
<p>Copies_string_s2_into_string_s1_</p>
</td>
</tr>
<tr>
<td_>2</td>
<td><p><b>strcat(s1,_s2);</b></p>
<p>Concatenates_string_s2_onto_the_end_of_string_s1_</p>
</td>
</tr>
<tr>
<td_>3</td>
<td><p><b>strlen(s1);</b></p>
<p>Returns_the_length_of_string_s1_</p>
</td>
</tr>
<tr>
<td_>4</td>
<td><p><b>strcmp(s1,_s2);</b></p>
<p>Returns_0_if_s1_and_s2_are_the_same;_less_than_0_if_s1****get it :lt;s2;_greater_than_0_if_s1****get it :gt;s2_</p>
</td>
</tr>
<tr>
<td_>5</td>
<td><p><b>strchr(s1,_ch);</b></p>
<p>Returns_a_pointer_to_the_first_occurrence_of_character_ch_in_string_s1_</p>
</td>
</tr>
<tr>
<td_>6</td>
<td><p><b>strstr(s1,_s2);</b></p>
<p>Returns_a_pointer_to_the_first_occurrence_of_string_s2_in_string_s1_</p>
</td>
</tr>
</tbody></table>
<p>The_following_example_uses_some_of_the_above-mentioned_functions_−</p>
<div_>
<a_hrefequal"http://tpcg_io/VBA8Qx"_targetequal"_blank"_relequal"nofollow"_><i_></i>_Live_Demo</a>
</div>
<pre__styleequal""><span_>#include</span><span_>_</span><span_>****get it :gt;</span><span_>
</span><span_>#include</span><span_>_</span><span_>****get it :lt;string_h****get it :gt;</span><span_>

</span><span_>int</span><span_>_main_</span><span_>()</span><span_>_</span><span_>{</span><span_>

___</span><span_>char</span><span_>_str1</span><span_>br31</span><span_>12</span><span_>br32</span><span_>_</span><span_>equal</span><span_>_</span><span_>"Hello"</span><span_>;</span><span_>
___</span><span_>char</span><span_>_str2</span><span_>br31</span><span_>12</span><span_>br32</span><span_>_</span><span_>equal</span><span_>_</span><span_>"World"</span><span_>;</span><span_>
___</span><span_>char</span><span_>_str3</span><span_>br31</span><span_>12</span><span_>br32;</span><span_>
___</span><span_>int</span><span_>__len_</span><span_>;</span><span_>

___</span><span_>/*_copy_str1_into_str3_*/</span><span_>
___strcpy</span><span_>(</span><span_>str3</span><span_>,</span><span_>_str1</span><span_>);</span><span_>
___printf</span><span_>(</span><span_>"strcpy(_str3,_str1)_:__%s\n"</span><span_>,</span><span_>_str3_</span><span_>);</span><span_>

___</span><span_>/*_concatenates_str1_and_str2_*/</span><span_>
___strcat</span><span_>(</span><span_>_str1</span><span_>,</span><span_>_str2</span><span_>);</span><span_>
___printf</span><span_>(</span><span_>"strcat(_str1,_str2):___%s\n"</span><span_>,</span><span_>_str1_</span><span_>);</span><span_>

___</span><span_>/*_total_lenghth_of_str1_after_concatenation_*/</span><span_>
___len_</span><span_>equal</span><span_>_strlen</span><span_>(</span><span_>str1</span><span_>);</span><span_>
___printf</span><span_>(</span><span_>"strlen(str1)_:__%d\n"</span><span_>,</span><span_>_len_</span><span_>);</span><span_>

___</span><span_>return</span><span_>_</span><span_>0</span><span_>;</span><span_>
</span><span_>}</span></pre>
<p>When_the_above_code_is_compiled_and_executed,_it_produces_the_following_result_−</p>
<pre_>strcpy(_str3,_str1)_:__Hello
strcat(_str1,_str2):___HelloWorld
strlen(str1)_:__10
</pre>
<div__idequal"bottom_navigation">
<div_>
<a_hrefequal"/cprogramming/c_pointers_htm"><i_></i>_Previous_Page</a>
<a__hrefequal"javascript:printPage();"><i_></i>_Print_Page</a>
</div>
<div_>
<a_hrefequal"/cprogramming/c_structures_htm">Next_Page_<i_></i>****get it :nbsp;</a>
</div>
</div>

</div>****get it :<div_>
<h1>C_-_Strings</h1>
<hr>


<br>
<div_>
<div_>
<a_hrefequal"/cprogramming/c_pointers_htm"><i_></i>_Previous_Page</a>
</div>
<div_>
<a_hrefequal"/cprogramming/c_structures_htm">Next_Page_<i_></i>****get it :nbsp;</a>
</div>
</div>
<p>Strings_are_actually_one-dimensional_array_of_characters_terminated_by_a_<b>null</b>_character_'\0'__Thus_a_null-terminated_string_contains_the_characters_that_comprise_the_string_followed_by_a_<b>null</b>_</p>
<p>The_following_declaration_and_initialization_create_a_string_consisting_of_the_word_"Hello"__To_hold_the_null_character_at_the_end_of_the_array,_the_size_of_the_character_array_containing_the_string_is_one_more_than_the_number_of_characters_in_the_word_"Hello_"</p>
<pre_>char_greetingbr316br32_equal_{'H',_'e',_'l',_'l',_'o',_'\0'};
</pre>
<p>If_you_follow_the_rule_of_array_initialization_then_you_can_write_the_above_statement_as_follows_−</p>
<pre_>char_greetingbr31br32_equal_"Hello";
</pre>
<p>Following_is_the_memory_presentation_of_the_above_defined_string_in_C/C___−</p>
<img_srcequal"/cprogramming/images/string_representation_jpg"_altequal"String_Presentation_in_C/C__">
<p>Actually,_you_do_not_place_the_<i>null</i>_character_at_the_end_of_a_string_constant__The_C_compiler_automatically_places_the_'\0'_at_the_end_of_the_string_when_it_initializes_the_array__Let_us_try_to_print_the_above_mentioned_string_−</p>
<div_>
<a_hrefequal"http://tpcg_io/P0muN5"_targetequal"_blank"_relequal"nofollow"_><i_></i>_Live_Demo</a>
</div>
<pre__styleequal""><span_>#include</span><span_>_</span><span_>****get it :lt;stdio_h****get it :gt;</span><span_>

</span><span_>int</span><span_>_main_</span><span_>()</span><span_>_</span><span_>{</span><span_>

___</span><span_>char</span><span_>_greeting</span><span_>br31</span><span_>6</span><span_>br32</span><span_>_</span><span_>equal</span><span_>_</span><span_>{</span><span_>'H'</span><span_>,</span><span_>_</span><span_>'e'</span><span_>,</span><span_>_</span><span_>'l'</span><span_>,</span><span_>_</span><span_>'l'</span><span_>,</span><span_>_</span><span_>'o'</span><span_>,</span><span_>_</span><span_>'\0'</span><span_>};</span><span_>
___printf</span><span_>(</span><span_>"Greeting_message:_%s\n"</span><span_>,</span><span_>_greeting_</span><span_>);</span><span_>
___</span><span_>return</span><span_>_</span><span_>0</span><span_>;</span><span_>
</span><span_>}</span></pre>
<p>When_the_above_code_is_compiled_and_executed,_it_produces_the_following_result_−</p>
<pre_>Greeting_message:_Hello
</pre>
<p>C_supports_a_wide_range_of_functions_that_manipulate_null-terminated_strings_−</p>
<table_>
<tbody><tr>
<th>Sr_No_</th>
<th_styleequal"text-align:center;">Function_****get it :amp;_Purpose</th>
</tr>
<tr>
<td_>1</td>
<td><p><b>strcpy(s1,_s2);</b></p>
<p>Copies_string_s2_into_string_s1_</p>
</td>
</tr>
<tr>
<td_>2</td>
<td><p><b>strcat(s1,_s2);</b></p>
<p>Concatenates_string_s2_onto_the_end_of_string_s1_</p>
</td>
</tr>
<tr>
<td_>3</td>
<td><p><b>strlen(s1);</b></p>
<p>Returns_the_length_of_string_s1_</p>
</td>
</tr>
<tr>
<td_>4</td>
<td><p><b>strcmp(s1,_s2);</b></p>
<p>Returns_0_if_s1_and_s2_are_the_same;_less_than_0_if_s1****get it :lt;s2;_greater_than_0_if_s1****get it :gt;s2_</p>
</td>
</tr>
<tr>
<td_>5</td>
<td><p><b>strchr(s1,_ch);</b></p>
<p>Returns_a_pointer_to_the_first_occurrence_of_character_ch_in_string_s1_</p>
</td>
</tr>
<tr>
<td_>6</td>
<td><p><b>strstr(s1,_s2);</b></p>
<p>Returns_a_pointer_to_the_first_occurrence_of_string_s2_in_string_s1_</p>
</td>
</tr>
</tbody></table>
<p>The_following_example_uses_some_of_the_above-mentioned_functions_−</p>
<div_>
<a_hrefequal"http://tpcg_io/VBA8Qx"_targetequal"_blank"_relequal"nofollow"_><i_></i>_Live_Demo</a>
</div>
<pre__styleequal""><span_>#include</span><span_>_</span><span_>****get it :gt;</span><span_>
</span><span_>#include</span><span_>_</span><span_>****get it :lt;string_h****get it :gt;</span><span_>

</span><span_>int</span><span_>_main_</span><span_>()</span><span_>_</span><span_>{</span><span_>

___</span><span_>char</span><span_>_str1</span><span_>br31</span><span_>12</span><span_>br32</span><span_>_</span><span_>equal</span><span_>_</span><span_>"Hello"</span><span_>;</span><span_>
___</span><span_>char</span><span_>_str2</span><span_>br31</span><span_>12</span><span_>br32</span><span_>_</span><span_>equal</span><span_>_</span><span_>"World"</span><span_>;</span><span_>
___</span><span_>char</span><span_>_str3</span><span_>br31</span><span_>12</span><span_>br32;</span><span_>
___</span><span_>int</span><span_>__len_</span><span_>;</span><span_>

___</span><span_>/*_copy_str1_into_str3_*/</span><span_>
___strcpy</span><span_>(</span><span_>str3</span><span_>,</span><span_>_str1</span><span_>);</span><span_>
___printf</span><span_>(</span><span_>"strcpy(_str3,_str1)_:__%s\n"</span><span_>,</span><span_>_str3_</span><span_>);</span><span_>

___</span><span_>/*_concatenates_str1_and_str2_*/</span><span_>
___strcat</span><span_>(</span><span_>_str1</span><span_>,</span><span_>_str2</span><span_>);</span><span_>
___printf</span><span_>(</span><span_>"strcat(_str1,_str2):___%s\n"</span><span_>,</span><span_>_str1_</span><span_>);</span><span_>

___</span><span_>/*_total_lenghth_of_str1_after_concatenation_*/</span><span_>
___len_</span><span_>equal</span><span_>_strlen</span><span_>(</span><span_>str1</span><span_>);</span><span_>
___printf</span><span_>(</span><span_>"strlen(str1)_:__%d\n"</span><span_>,</span><span_>_len_</span><span_>);</span><span_>

___</span><span_>return</span><span_>_</span><span_>0</span><span_>;</span><span_>
</span><span_>}</span></pre>
<p>When_the_above_code_is_compiled_and_executed,_it_produces_the_following_result_−</p>
<pre_>strcpy(_str3,_str1)_:__Hello
strcat(_str1,_str2):___HelloWorld
strlen(str1)_:__10
</pre>
</div>

</div>****get it :<div_>
<h1>C_-_Strings</h1>
<hr>


<br>
<p>Strings_are_actually_one-dimensional_array_of_characters_terminated_by_a_<b>null</b>_character_'\0'__Thus_a_null-terminated_string_contains_the_characters_that_comprise_the_string_followed_by_a_<b>null</b>_</p>
<p>The_following_declaration_and_initialization_create_a_string_consisting_of_the_word_"Hello"__To_hold_the_null_character_at_the_end_of_the_array,_the_size_of_the_character_array_containing_the_string_is_one_more_than_the_number_of_characters_in_the_word_"Hello_"</p>
<pre_>char_greetingbr316br32_equal_{'H',_'e',_'l',_'l',_'o',_'\0'};
</pre>
<p>If_you_follow_the_rule_of_array_initialization_then_you_can_write_the_above_statement_as_follows_−</p>
<pre_>char_greetingbr31br32_equal_"Hello";
</pre>
<p>Following_is_the_memory_presentation_of_the_above_defined_string_in_C/C___−</p>
<img_srcequal"/cprogramming/images/string_representation_jpg"_altequal"String_Presentation_in_C/C__">
<p>Actually,_you_do_not_place_the_<i>null</i>_character_at_the_end_of_a_string_constant__The_C_compiler_automatically_places_the_'\0'_at_the_end_of_the_string_when_it_initializes_the_array__Let_us_try_to_print_the_above_mentioned_string_−</p>
<div_>
<a_hrefequal"http://tpcg_io/P0muN5"_targetequal"_blank"_relequal"nofollow"_><i_></i>_Live_Demo</a>
</div>
<pre__styleequal""><span_>#include</span><span_>_</span><span_>****get it :lt;stdio_h****get it :gt;</span><span_>

</span><span_>int</span><span_>_main_</span><span_>()</span><span_>_</span><span_>{</span><span_>

___</span><span_>char</span><span_>_greeting</span><span_>br31</span><span_>6</span><span_>br32</span><span_>_</span><span_>equal</span><span_>_</span><span_>{</span><span_>'H'</span><span_>,</span><span_>_</span><span_>'e'</span><span_>,</span><span_>_</span><span_>'l'</span><span_>,</span><span_>_</span><span_>'l'</span><span_>,</span><span_>_</span><span_>'o'</span><span_>,</span><span_>_</span><span_>'\0'</span><span_>};</span><span_>
___printf</span><span_>(</span><span_>"Greeting_message:_%s\n"</span><span_>,</span><span_>_greeting_</span><span_>);</span><span_>
___</span><span_>return</span><span_>_</span><span_>0</span><span_>;</span><span_>
</span><span_>}</span></pre>
<p>When_the_above_code_is_compiled_and_executed,_it_produces_the_following_result_−</p>
<pre_>Greeting_message:_Hello
</pre>
<p>C_supports_a_wide_range_of_functions_that_manipulate_null-terminated_strings_−</p>
<table_>
<tbody><tr>
<th>Sr_No_</th>
<th_styleequal"text-align:center;">Function_****get it :amp;_Purpose</th>
</tr>
<tr>
<td_>1</td>
<td><p><b>strcpy(s1,_s2);</b></p>
<p>Copies_string_s2_into_string_s1_</p>
</td>
</tr>
<tr>
<td_>2</td>
<td><p><b>strcat(s1,_s2);</b></p>
<p>Concatenates_string_s2_onto_the_end_of_string_s1_</p>
</td>
</tr>
<tr>
<td_>3</td>
<td><p><b>strlen(s1);</b></p>
<p>Returns_the_length_of_string_s1_</p>
</td>
</tr>
<tr>
<td_>4</td>
<td><p><b>strcmp(s1,_s2);</b></p>
<p>Returns_0_if_s1_and_s2_are_the_same;_less_than_0_if_s1****get it :lt;s2;_greater_than_0_if_s1****get it :gt;s2_</p>
</td>
</tr>
<tr>
<td_>5</td>
<td><p><b>strchr(s1,_ch);</b></p>
<p>Returns_a_pointer_to_the_first_occurrence_of_character_ch_in_string_s1_</p>
</td>
</tr>
<tr>
<td_>6</td>
<td><p><b>strstr(s1,_s2);</b></p>
<p>Returns_a_pointer_to_the_first_occurrence_of_string_s2_in_string_s1_</p>
</td>
</tr>
</tbody></table>
<p>The_following_example_uses_some_of_the_above-mentioned_functions_−</p>
<div_>
<a_hrefequal"http://tpcg_io/VBA8Qx"_targetequal"_blank"_relequal"nofollow"_><i_></i>_Live_Demo</a>
</div>
<pre__styleequal""><span_>#include</span><span_>_</span><span_>****get it :gt;</span><span_>
</span><span_>#include</span><span_>_</span><span_>****get it :lt;string_h****get it :gt;</span><span_>

</span><span_>int</span><span_>_main_</span><span_>()</span><span_>_</span><span_>{</span><span_>

___</span><span_>char</span><span_>_str1</span><span_>br31</span><span_>12</span><span_>br32</span><span_>_</span><span_>equal</span><span_>_</span><span_>"Hello"</span><span_>;</span><span_>
___</span><span_>char</span><span_>_str2</span><span_>br31</span><span_>12</span><span_>br32</span><span_>_</span><span_>equal</span><span_>_</span><span_>"World"</span><span_>;</span><span_>
___</span><span_>char</span><span_>_str3</span><span_>br31</span><span_>12</span><span_>br32;</span><span_>
___</span><span_>int</span><span_>__len_</span><span_>;</span><span_>

___</span><span_>/*_copy_str1_into_str3_*/</span><span_>
___strcpy</span><span_>(</span><span_>str3</span><span_>,</span><span_>_str1</span><span_>);</span><span_>
___printf</span><span_>(</span><span_>"strcpy(_str3,_str1)_:__%s\n"</span><span_>,</span><span_>_str3_</span><span_>);</span><span_>

___</span><span_>/*_concatenates_str1_and_str2_*/</span><span_>
___strcat</span><span_>(</span><span_>_str1</span><span_>,</span><span_>_str2</span><span_>);</span><span_>
___printf</span><span_>(</span><span_>"strcat(_str1,_str2):___%s\n"</span><span_>,</span><span_>_str1_</span><span_>);</span><span_>

___</span><span_>/*_total_lenghth_of_str1_after_concatenation_*/</span><span_>
___len_</span><span_>equal</span><span_>_strlen</span><span_>(</span><span_>str1</span><span_>);</span><span_>
___printf</span><span_>(</span><span_>"strlen(str1)_:__%d\n"</span><span_>,</span><span_>_len_</span><span_>);</span><span_>

___</span><span_>return</span><span_>_</span><span_>0</span><span_>;</span><span_>
</span><span_>}</span></pre>
<p>When_the_above_code_is_compiled_and_executed,_it_produces_the_following_result_−</p>
<pre_>strcpy(_str3,_str1)_:__Hello
strcat(_str1,_str2):___HelloWorld
strlen(str1)_:__10
</pre>
</div>

</div>****get it :<div_>
<h1>C_-_Strings</h1>
<hr>


<br>
<p>Strings_are_actually_one-dimensional_array_of_characters_terminated_by_a_<b>null</b>_character_'\0'__Thus_a_null-terminated_string_contains_the_characters_that_comprise_the_string_followed_by_a_<b>null</b>_</p>
<p>The_following_declaration_and_initialization_create_a_string_consisting_of_the_word_"Hello"__To_hold_the_null_character_at_the_end_of_the_array,_the_size_of_the_character_array_containing_the_string_is_one_more_than_the_number_of_characters_in_the_word_"Hello_"</p>
<pre_>char_greetingbr316br32_equal_{'H',_'e',_'l',_'l',_'o',_'\0'};
</pre>
<p>If_you_follow_the_rule_of_array_initialization_then_you_can_write_the_above_statement_as_follows_−</p>
<pre_>char_greetingbr31br32_equal_"Hello";
</pre>
<p>Following_is_the_memory_presentation_of_the_above_defined_string_in_C/C___−</p>
<img_srcequal"/cprogramming/images/string_representation_jpg"_altequal"String_Presentation_in_C/C__">
<p>Actually,_you_do_not_place_the_<i>null</i>_character_at_the_end_of_a_string_constant__The_C_compiler_automatically_places_the_'\0'_at_the_end_of_the_string_when_it_initializes_the_array__Let_us_try_to_print_the_above_mentioned_string_−</p>
<div_>
<a_hrefequal"http://tpcg_io/P0muN5"_targetequal"_blank"_relequal"nofollow"_><i_></i>_Live_Demo</a>
</div>
<pre__styleequal""><span_>#include</span><span_>_</span><span_>****get it :lt;stdio_h****get it :gt;</span><span_>

</span><span_>int</span><span_>_main_</span><span_>()</span><span_>_</span><span_>{</span><span_>

___</span><span_>char</span><span_>_greeting</span><span_>br31</span><span_>6</span><span_>br32</span><span_>_</span><span_>equal</span><span_>_</span><span_>{</span><span_>'H'</span><span_>,</span><span_>_</span><span_>'e'</span><span_>,</span><span_>_</span><span_>'l'</span><span_>,</span><span_>_</span><span_>'l'</span><span_>,</span><span_>_</span><span_>'o'</span><span_>,</span><span_>_</span><span_>'\0'</span><span_>};</span><span_>
___printf</span><span_>(</span><span_>"Greeting_message:_%s\n"</span><span_>,</span><span_>_greeting_</span><span_>);</span><span_>
___</span><span_>return</span><span_>_</span><span_>0</span><span_>;</span><span_>
</span><span_>}</span></pre>
<p>When_the_above_code_is_compiled_and_executed,_it_produces_the_following_result_−</p>
<pre_>Greeting_message:_Hello
</pre>
<p>C_supports_a_wide_range_of_functions_that_manipulate_null-terminated_strings_−</p>
<table_>
<tbody><tr>
<th>Sr_No_</th>
<th_styleequal"text-align:center;">Function_****get it :amp;_Purpose</th>
</tr>
<tr>
<td_>1</td>
<td><p><b>strcpy(s1,_s2);</b></p>
<p>Copies_string_s2_into_string_s1_</p>
</td>
</tr>
<tr>
<td_>2</td>
<td><p><b>strcat(s1,_s2);</b></p>
<p>Concatenates_string_s2_onto_the_end_of_string_s1_</p>
</td>
</tr>
<tr>
<td_>3</td>
<td><p><b>strlen(s1);</b></p>
<p>Returns_the_length_of_string_s1_</p>
</td>
</tr>
<tr>
<td_>4</td>
<td><p><b>strcmp(s1,_s2);</b></p>
<p>Returns_0_if_s1_and_s2_are_the_same;_less_than_0_if_s1****get it :lt;s2;_greater_than_0_if_s1****get it :gt;s2_</p>
</td>
</tr>
<tr>
<td_>5</td>
<td><p><b>strchr(s1,_ch);</b></p>
<p>Returns_a_pointer_to_the_first_occurrence_of_character_ch_in_string_s1_</p>
</td>
</tr>
<tr>
<td_>6</td>
<td><p><b>strstr(s1,_s2);</b></p>
<p>Returns_a_pointer_to_the_first_occurrence_of_string_s2_in_string_s1_</p>
</td>
</tr>
</tbody></table>
<p>The_following_example_uses_some_of_the_above-mentioned_functions_−</p>
<div_>
<a_hrefequal"http://tpcg_io/VBA8Qx"_targetequal"_blank"_relequal"nofollow"_><i_></i>_Live_Demo</a>
</div>
<pre__styleequal""><span_>#include</span><span_>_</span><span_>****get it :gt;</span><span_>
</span><span_>#include</span><span_>_</span><span_>****get it :lt;string_h****get it :gt;</span><span_>

</span><span_>int</span><span_>_main_</span><span_>()</span><span_>_</span><span_>{</span><span_>

___</span><span_>char</span><span_>_str1</span><span_>br31</span><span_>12</span><span_>br32</span><span_>_</span><span_>equal</span><span_>_</span><span_>"Hello"</span><span_>;</span><span_>
___</span><span_>char</span><span_>_str2</span><span_>br31</span><span_>12</span><span_>br32</span><span_>_</span><span_>equal</span><span_>_</span><span_>"World"</span><span_>;</span><span_>
___</span><span_>char</span><span_>_str3</span><span_>br31</span><span_>12</span><span_>br32;</span><span_>
___</span><span_>int</span><span_>__len_</span><span_>;</span><span_>

___</span><span_>/*_copy_str1_into_str3_*/</span><span_>
___strcpy</span><span_>(</span><span_>str3</span><span_>,</span><span_>_str1</span><span_>);</span><span_>
___printf</span><span_>(</span><span_>"strcpy(_str3,_str1)_:__%s\n"</span><span_>,</span><span_>_str3_</span><span_>);</span><span_>

___</span><span_>/*_concatenates_str1_and_str2_*/</span><span_>
___strcat</span><span_>(</span><span_>_str1</span><span_>,</span><span_>_str2</span><span_>);</span><span_>
___printf</span><span_>(</span><span_>"strcat(_str1,_str2):___%s\n"</span><span_>,</span><span_>_str1_</span><span_>);</span><span_>

___</span><span_>/*_total_lenghth_of_str1_after_concatenation_*/</span><span_>
___len_</span><span_>equal</span><span_>_strlen</span><span_>(</span><span_>str1</span><span_>);</span><span_>
___printf</span><span_>(</span><span_>"strlen(str1)_:__%d\n"</span><span_>,</span><span_>_len_</span><span_>);</span><span_>

___</span><span_>return</span><span_>_</span><span_>0</span><span_>;</span><span_>
</span><span_>}</span></pre>
<p>When_the_above_code_is_compiled_and_executed,_it_produces_the_following_result_−</p>
<pre_>strcpy(_str3,_str1)_:__Hello
strcat(_str1,_str2):___HelloWorld
strlen(str1)_:__10
</pre>
</div>

</div>****get it :<div_>
<h1>C_-_Strings</h1>
<hr>


<br>
<p>Strings_are_actually_one-dimensional_array_of_characters_terminated_by_a_<b>null</b>_character_'\0'__Thus_a_null-terminated_string_contains_the_characters_that_comprise_the_string_followed_by_a_<b>null</b>_</p>
<p>The_following_declaration_and_initialization_create_a_string_consisting_of_the_word_"Hello"__To_hold_the_null_character_at_the_end_of_the_array,_the_size_of_the_character_array_containing_the_string_is_one_more_than_the_number_of_characters_in_the_word_"Hello_"</p>
<pre_>char_greetingbr316br32_equal_{'H',_'e',_'l',_'l',_'o',_'\0'};
</pre>
<p>If_you_follow_the_rule_of_array_initialization_then_you_can_write_the_above_statement_as_follows_−</p>
<pre_>char_greetingbr31br32_equal_"Hello";
</pre>
<p>Following_is_the_memory_presentation_of_the_above_defined_string_in_C/C___−</p>
<img_srcequal"/cprogramming/images/string_representation_jpg"_altequal"String_Presentation_in_C/C__">
<p>Actually,_you_do_not_place_the_<i>null</i>_character_at_the_end_of_a_string_constant__The_C_compiler_automatically_places_the_'\0'_at_the_end_of_the_string_when_it_initializes_the_array__Let_us_try_to_print_the_above_mentioned_string_−</p>
<div_>
<a_hrefequal"http://tpcg_io/P0muN5"_targetequal"_blank"_relequal"nofollow"_><i_></i>_Live_Demo</a>
</div>
<pre__styleequal""><span_>#include</span><span_>_</span><span_>****get it :lt;stdio_h****get it :gt;</span><span_>

</span><span_>int</span><span_>_main_</span><span_>()</span><span_>_</span><span_>{</span><span_>

___</span><span_>char</span><span_>_greeting</span><span_>br31</span><span_>6</span><span_>br32</span><span_>_</span><span_>equal</span><span_>_</span><span_>{</span><span_>'H'</span><span_>,</span><span_>_</span><span_>'e'</span><span_>,</span><span_>_</span><span_>'l'</span><span_>,</span><span_>_</span><span_>'l'</span><span_>,</span><span_>_</span><span_>'o'</span><span_>,</span><span_>_</span><span_>'\0'</span><span_>};</span><span_>
___printf</span><span_>(</span><span_>"Greeting_message:_%s\n"</span><span_>,</span><span_>_greeting_</span><span_>);</span><span_>
___</span><span_>return</span><span_>_</span><span_>0</span><span_>;</span><span_>
</span><span_>}</span></pre>
<p>When_the_above_code_is_compiled_and_executed,_it_produces_the_following_result_−</p>
<pre_>Greeting_message:_Hello
</pre>
<p>C_supports_a_wide_range_of_functions_that_manipulate_null-terminated_strings_−</p>
<table_>
<tbody><tr>
<th>Sr_No_</th>
<th_styleequal"text-align:center;">Function_****get it :amp;_Purpose</th>
</tr>
<tr>
<td_>1</td>
<td><p><b>strcpy(s1,_s2);</b></p>
<p>Copies_string_s2_into_string_s1_</p>
</td>
</tr>
<tr>
<td_>2</td>
<td><p><b>strcat(s1,_s2);</b></p>
<p>Concatenates_string_s2_onto_the_end_of_string_s1_</p>
</td>
</tr>
<tr>
<td_>3</td>
<td><p><b>strlen(s1);</b></p>
<p>Returns_the_length_of_string_s1_</p>
</td>
</tr>
<tr>
<td_>4</td>
<td><p><b>strcmp(s1,_s2);</b></p>
<p>Returns_0_if_s1_and_s2_are_the_same;_less_than_0_if_s1****get it :lt;s2;_greater_than_0_if_s1****get it :gt;s2_</p>
</td>
</tr>
<tr>
<td_>5</td>
<td><p><b>strchr(s1,_ch);</b></p>
<p>Returns_a_pointer_to_the_first_occurrence_of_character_ch_in_string_s1_</p>
</td>
</tr>
<tr>
<td_>6</td>
<td><p><b>strstr(s1,_s2);</b></p>
<p>Returns_a_pointer_to_the_first_occurrence_of_string_s2_in_string_s1_</p>
</td>
</tr>
</tbody></table>
<p>The_following_example_uses_some_of_the_above-mentioned_functions_−</p>
<div_>
<a_hrefequal"http://tpcg_io/VBA8Qx"_targetequal"_blank"_relequal"nofollow"_><i_></i>_Live_Demo</a>
</div>
<pre__styleequal""><span_>#include</span><span_>_</span><span_>****get it :gt;</span><span_>
</span><span_>#include</span><span_>_</span><span_>****get it :lt;string_h****get it :gt;</span><span_>

</span><span_>int</span><span_>_main_</span><span_>()</span><span_>_</span><span_>{</span><span_>

___</span><span_>char</span><span_>_str1</span><span_>br31</span><span_>12</span><span_>br32</span><span_>_</span><span_>equal</span><span_>_</span><span_>"Hello"</span><span_>;</span><span_>
___</span><span_>char</span><span_>_str2</span><span_>br31</span><span_>12</span><span_>br32</span><span_>_</span><span_>equal</span><span_>_</span><span_>"World"</span><span_>;</span><span_>
___</span><span_>char</span><span_>_str3</span><span_>br31</span><span_>12</span><span_>br32;</span><span_>
___</span><span_>int</span><span_>__len_</span><span_>;</span><span_>

___</span><span_>/*_copy_str1_into_str3_*/</span><span_>
___strcpy</span><span_>(</span><span_>str3</span><span_>,</span><span_>_str1</span><span_>);</span><span_>
___printf</span><span_>(</span><span_>"strcpy(_str3,_str1)_:__%s\n"</span><span_>,</span><span_>_str3_</span><span_>);</span><span_>

___</span><span_>/*_concatenates_str1_and_str2_*/</span><span_>
___strcat</span><span_>(</span><span_>_str1</span><span_>,</span><span_>_str2</span><span_>);</span><span_>
___printf</span><span_>(</span><span_>"strcat(_str1,_str2):___%s\n"</span><span_>,</span><span_>_str1_</span><span_>);</span><span_>

___</span><span_>/*_total_lenghth_of_str1_after_concatenation_*/</span><span_>
___len_</span><span_>equal</span><span_>_strlen</span><span_>(</span><span_>str1</span><span_>);</span><span_>
___printf</span><span_>(</span><span_>"strlen(str1)_:__%d\n"</span><span_>,</span><span_>_len_</span><span_>);</span><span_>

___</span><span_>return</span><span_>_</span><span_>0</span><span_>;</span><span_>
</span><span_>}</span></pre>
<p>When_the_above_code_is_compiled_and_executed,_it_produces_the_following_result_−</p>
<pre_>strcpy(_str3,_str1)_:__Hello
strcat(_str1,_str2):___HelloWorld
strlen(str1)_:__10
</pre>
</div>

</div>****